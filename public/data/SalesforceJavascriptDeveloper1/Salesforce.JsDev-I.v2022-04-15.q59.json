[
  {
    "content": "developer removes the HTML class attribute from the checkout button, so now it is simply:\n<button>Checkout</button>.\nThere is a test to verify the existence of the checkout button, however it looks for a button with class= \"blue\". The test fails because no such button is found.\nWhich type of test category describes this test?",
    "options": ["A. False positive", "B. False negative", "C. True negative", "D. True positive"],
    "answer": "B",
    "title": "Question 1",
    "explanation": ""
  },
  {
    "content": "A developer creates a generic function to log custom messages in the console. To do this, the function below is implemented.\n01 function logStatus(status){\n02 console./*Answer goes here*/{'Item status is: %s', status};\n03 }\nWhich three console logging methods allow the use of string substitution in line 02?",
    "options": ["A. Message", "B. Log", "C. Info", "D. Error", "E. Assert"],
    "answer": "B,C,E",
    "title": "Question 2",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nfunction foo () {\nconst a =2;\nfunction bat() {\nconsole.log(a);\n}\nreturn bar;\n}\nWhy does the function bar have access to variable a ?",
    "options": ["A. Inner function's scope", "B. Prototype chain", "C. Outer function's scope", "D. Hoisting"],
    "answer": "C",
    "title": "Question 3",
    "explanation": ""
  },
  {
    "content": "Universal Containers (UC) notices that its application that allows users to search for accounts makes a network request each time a key is pressed. This results in too many requests for the server to handle.\n* Address this problem, UC decides to implement a debounce function on string change handler.\nWhat are three key steps to implement this debounce function?\nChoose 3 answers:",
    "options": [
      "A. Store the timeId of the setTimeout last enqueued by the search string change handle.",
      "B. If there is an existing setTimeout and the search string changes, cancel the existing setTimeout using the persisted timerId and replace it with a new setTimeout.",
      "C. Ensure that the network request has the property debounce set to true.",
      "D. When the search string changes, enqueue the request within a setTimeout.",
      "E. If there is an existing setTimeout and the search string change, allow the existing setTimeout to finish, and do not enqueue a new setTimeout."
    ],
    "answer": "C,D,E",
    "title": "Question 4",
    "explanation": ""
  },
  {
    "content": "Which two console logs output NaN?\nChoose 2 answers | |",
    "options": [
      "A. console.loeg(10 / 'five');",
      "B. console.log(parseInt ' (\"two')) ;",
      "C. console.log(10 / 0);",
      "D. console.log(10 / Number('5) ) ;"
    ],
    "answer": "A,B",
    "title": "Question 5",
    "explanation": ""
  },
  {
    "content": "Refer to the following array:\nLet arr1 = [ 1, 2, 3, 4, 5 ];\nWhich two lines of code result in a second array, arr2 being created such that arr2 is not a reference to arr1?",
    "options": ["A. Let arr2 = arr1;", "B. Let arr2 = Array.from(arr1);", "C. Let arr2 = arr1.slice(0, 5);", "D. Let arr2 = arr1.sort();"],
    "answer": "B,C",
    "title": "Question 6",
    "explanation": ""
  },
  {
    "content": "Which option is true about the strict mode in imported modules?",
    "options": [
      "A. Add the statement use non-strict, before any other statements in the module to enable not-strict mode.",
      "B. Add the statement use strict =false; before any other statements in the module to enable not- strict mode.",
      "C. Imported modules are in strict mode whether you declare them as such or not.",
      "D. You can only reference notStrict() functions from the imported module."
    ],
    "answer": "D",
    "title": "Question 7",
    "explanation": ""
  },
  {
    "content": "Universal Containers (UC) just launched a new landing page, but users complain that the website is slow. A developer found some functions any that might cause this problem. To verify this, the developer decides to execute everything and log the time each of these three suspicious functions consumes.\nWhich function can the developer use to obtain the time spent by every one of the three functions?",
    "options": ["A. console.timeStamp ()", "B. console.getTime ()", "C. console. timeLog ()", "D. console.trace()"],
    "answer": "C",
    "title": "Question 8",
    "explanation": ""
  },
  {
    "content": "A developer has an ErrorHandler module that contains multiple functions.\nWhat kind of export be leverages so that multiple functions can be used?",
    "options": ["A. Default", "B. Multi", "C. All", "D. Named"],
    "answer": "D",
    "title": "Question 9",
    "explanation": ""
  },
  {
    "content": "is below:\n<input type=\"file\" onchange=\"previewFile()\">\n<img src=\"\" height=\"200\" alt=\"Image Preview...\"/>\nThe JavaScript portion is:\n01 function previewFile(){\n02 const preview = document.querySelector('img');\n03 const file = document.querySelector('input[type=file]').files[0];\n04 //line 4 code\n05 reader.addEventListener(\"load\", () => {\n06 preview.src = reader.result;\n07 },false);\n08 //line 8 code\n09 }\nIn lines 04 and 08, which code allows the user to select an image from their local computer , and to display the image in the browser?",
    "options": [
      "A. 04 const reader = new File();\n         08 if (file) URL.createObjectURL(file);",
      "B. 04 const reader = new FileReader();\n         08 if (file) URL.createObjectURL(file);",
      "C. 04 const reader = new FileReader();\n         08 if (file) reader.readAsDataURL(file);",
      "D. 04 const reader = new File();\n         08 if (file) reader.readAsDataURL(file);"
    ],
    "answer": "C",
    "title": "Question 10",
    "explanation": ""
  },
  {
    "content": "A developer is asked to fix some bugs reported by users. To do that, the developer adds a breakpoint for debugging.\nFunction Car (maxSpeed, color){\nThis.maxspeed =masSpeed;\nThis.color = color;\nLet carSpeed = document.getElementById(' CarSpeed');\nDebugger;\nLet fourWheels =new Car (carSpeed.value, 'red');\nWhen the code execution stops at the breakpoint on line 06, which two types of information are available in the browser console ?\nChoose 2 answers:",
    "options": [
      "A. The style, event listeners and other attributes applied to the carSpeed DOM element",
      "B. A variable displaying the number of instances created for the Car Object.",
      "C. The values of the carSpeed and fourWheels variables",
      "D. The information stored in the window.localStorage property"
    ],
    "answer": "A,D",
    "title": "Question 11",
    "explanation": ""
  },
  {
    "content": "Refer to the code:\nGiven the code above, which three properties are set pet1?\nChoose 3 answers:",
    "options": ["A. Name", "B. Owner", "C. Type", "D. canTalk", "E. Size"],
    "answer": "C,D,E",
    "title": "Question 12",
    "explanation": ""
  },
  {
    "content": "Given the following code:\nCounter = 0;\nconst logCounter = () => {\nconsole.log(counter);\n);\nlogCounter();\nsetTimeout(logCOunter, 1100);\nsetInterval(() => {\nCounter++\nlogCounter();\n}, 1000);\nWhat is logged by the first four log statements?",
    "options": ["A. 0 0 1 2", "B. 0 1 2 3", "C. 0 1 2 2", "D. 0 1 1 2"],
    "answer": "D",
    "title": "Question 13",
    "explanation": ""
  },
  {
    "content": "A developer has a web server running with Node.js. The command to start the web server is node server.js. The web server started having latency issues. Instead of a one second turnaround for web requests, the developer now sees a five second turnaround.\nWhich command can the web developer run to see what the module is doing during the latency period?",
    "options": [
      "A. DEBUG=http, https node server.js",
      "B. NODE_DEBUG=http,https node server.js",
      "C. NODE_DEBUG=true node server.js",
      "D. DEBUG=true node server.js"
    ],
    "answer": "D",
    "title": "Question 14",
    "explanation": ""
  },
  {
    "content": "A developer wants to leverage a module to print a price in pretty format, and has imported a method as shown below:\nImport printPrice from '/path/PricePrettyPrint.js';\nBased on the code, what must be true about the printPrice function of the PricePrettyPrint module for this import to work ?",
    "options": [
      "A. printPrice must be the default export",
      "B. printPrice must be an all export",
      "C. printPrice must be be a named export",
      "D. printPrice must be a multi exportc"
    ],
    "answer": "A",
    "title": "Question 15",
    "explanation": ""
  },
  {
    "content": "Refer to code below:\nfunction Person() {\nthis.firstName = 'John';\n}\nPerson.prototype ={\nJob: x => 'Developer'\n};\nconst myFather = new Person();\nconst result =myFather.firstName + ' ' + myFather.job();\nWhat is the value of the result after line 10 executes?",
    "options": ["A. John Developer", "B. Error: myFather.job is not a function", "C. Undefined Developer", "D. John undefined"],
    "answer": "A",
    "title": "Question 16",
    "explanation": ""
  },
  {
    "content": "A developer is trying to handle an error within a function.\nWhich code segment shows the correct approach to handle an error without propagating it elsewhere?\nA)\nB)\nC)\nD)",
    "options": ["A. Option A", "B. Option C", "C. Option D", "D. Option B"],
    "answer": "C",
    "title": "Question 17",
    "explanation": ""
  },
  {
    "content": "The developer has a function that prints \"Hello\" to an input name. To test this, thedeveloper created a function that returns \"World\". However the following snippet does not print \" Hello World\".\nWhat can the developer do to change the code to print \"Hello World\" ?",
    "options": [
      "A. Change line 2 to console.log('Hello' , name() );",
      "B. Change line 7 to ) () ;",
      "C. Change line 9 to sayHello(world) ();",
      "D. Change line 5 to function world ( ) {"
    ],
    "answer": "A",
    "title": "Question 18",
    "explanation": ""
  },
  {
    "content": "A developer has a formatName function that takes two arguments, firstName and lastName and returns a string. They want to schedule the function to run once after five seconds.\nWhat is the correct syntax to schedule this function?",
    "options": [
      "A. setTimeout ('formatName', 5000, 'John\", \"Doe');",
      "B. setTimeout (formatName('John', ''Doe'), 5000);",
      "C. setTimout(() => { formatName(\"John', 'Doe') }, 5000);",
      "D. setTimeout (formatName(), 5000, \"John\", \"BDoe\");"
    ],
    "answer": "A",
    "title": "Question 19",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nLet str = 'javascript';\nStr[0] = 'J';\nStr[4] = 'S';\nAfter changing the string index values, the value of str is 'javascript'. What is the reason for this value:",
    "options": [
      "A. Non-primitive values are immutable.",
      "B. Primitive values are mutable.",
      "C. Non-primitive values are mutable.",
      "D. Primitive values are immutable."
    ],
    "answer": "D",
    "title": "Question 20",
    "explanation": ""
  },
  {
    "content": "Which two code snippets show working examples of a recursive function?\nChoose 2 answers",
    "options": [
      "A. Function factorial ( numVar ) {\n         If (numVar < 0) return;\n         If ( numVar === 0 ) return 1;\n         return numVar -1;",
      "B. Const sumToTen = numVar => {\n         If (numVar < 0)\n         Return;\n         return sumToTen(numVar + 1)};",
      "C. Let countingDown = function(startNumber) {\n         If ( startNumber >0) {\n         console.log(startNumber) ;\n         return countingDown(startNUmber);\n         } else {\n         return startNumber;\n         }};",
      "D. Const factorial =numVar => {\n         If (numVar < 0) return;\n         If ( numVar === 0 ) return 1;\n         return numVar * factorial ( numVar - 1 );\n         };"
    ],
    "answer": "C,D",
    "title": "Question 21",
    "explanation": ""
  },
  {
    "content": "GIven a value, which three options can a developer use to detect if the value is NaN?\nChoose 3 answers !",
    "options": ["A. Number.isNaN(value)", "B. value === Number.NaN", "C. value == NaN", "D. Object.is(value, NaN)", "E. value ! == value"],
    "answer": "A,C",
    "title": "Question 22",
    "explanation": ""
  },
  {
    "content": "Which statement phrases successfully?",
    "options": ["A. JSON.parse ( \" foo \" );", "B. JSON.parse ( ' foo ' );", "C. JSON.parse( \" ' foo ' \" );", "D. JSON.parse(' \" foo \" ');"],
    "answer": "D",
    "title": "Question 23",
    "explanation": ""
  },
  {
    "content": "Which two console logs outputs NaN ?\nChoose 2 answers",
    "options": ["A. console.log(10/0);", "B. console.log(10/ ''five);", "C. console.log(parseInt('two'));", "D. console.log(10/ Number('5'));"],
    "answer": "B,C",
    "title": "Question 24",
    "explanation": ""
  },
  {
    "content": "A developer has the following array of student test grades:\nLet arr = [ 7, 8, 5, 8, 9 ];\nThe Teacher wants to double each score and then see an array of the students who scored more than 15 points.\nHow should the developer implement the request?",
    "options": [
      "A. Let arr1 = arr.filter(( val) => ( return val > 15 )) .map (( num) => ( return num *2 ))",
      "B. Let arr1 = arr.mapBy (( num) => ( return num *2 )) .filterBy (( val ) => return val > 15 )) ;",
      "C. Let arr1 = arr.map((num) => ( num *2)).filterBy((val) => ( val >15 ));",
      "D. Let arr1 = arr.map((num) => num*2). Filter (( val) => val > 15);"
    ],
    "answer": "D",
    "title": "Question 25",
    "explanation": ""
  },
  {
    "content": "Given the code below:\nconst copy = JSON.stringify([ new String(' false '), new Bollean( false ), undefined ]); What is the value of copy?",
    "options": [
      "A. -- [ \\\"false\\\" ,false, null ]--",
      "B. -- [ \\\"false\\\" , { } ]--",
      "C. -- [ false, { } ]--",
      "D. -- [ \\\"false\\\" , false, undefined ]--"
    ],
    "answer": "A",
    "title": "Question 26",
    "explanation": ""
  },
  {
    "content": "A developer creates a simple webpage with an input field. When a user enters text in the input field and clicks the button, the actual value of the field must be displayed in the console.\nHere is the HTML file content:\n<input type =\" text\" value=\"Hello\" name =\"input\">\n<button type =\"button\" >Display </button>\nThe developer wrote the javascript code below:\nConst button = document.querySelector('button');\nbutton.addEvenListener('click', () => (\nConst input = document.querySelector('input');\nconsole.log(input.getAttribute('value'));\nWhen the user clicks the button, the output is always \"Hello\".\nWhat needs to be done make this code work as expected?",
    "options": [
      "A. Replace line 02 with button.addCallback(\"click\", function() {",
      "B. Replace line 02 with button.addEventListener(\"onclick\", function() {",
      "C. Replace line 04 with console.log(input .value);",
      "D. Replace line 03 with const input = document.getElementByName('input');"
    ],
    "answer": "C",
    "title": "Question 27",
    "explanation": ""
  },
  {
    "content": "A developer creates a class that represents a blog post based on the requirement that a Post should have a body author and view count.\nThe Code shown Below:\nClass Post {\n// Insert code here\nThis.body =body\nThis.author = author;\nthis.viewCount = viewCount;\n}\n}\nWhich statement should be inserted in the placeholder on line 02 to allow for a variable to be set to a new instanceof a Post with the three attributes correctly populated?",
    "options": [
      "A. constructor (body, author, viewCount) {",
      "B. constructor() {",
      "C. Function Post (body, author, viewCount) {",
      "D. super (body, author, viewCount) {"
    ],
    "answer": "A",
    "title": "Question 28",
    "explanation": ""
  },
  {
    "content": "Refer to following code block:\nLet array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,];\nLet output =0;\nFor (let num of array){\nif (output >0){\nBreak;\n}\nif(num % 2 == 0){\nContinue;\n}\nOutput +=num;\nWhat is the value of output after the code executes?",
    "options": ["A. 25", "B. 16", "C. 36", "D. 11"],
    "answer": "B",
    "title": "Question 29",
    "explanation": ""
  },
  {
    "content": "Consider type coercion, what does the following expression evaluate to?\nTrue + 3 + '100' + null",
    "options": ["A. 104", "B. 4100", "C. '3100null'", "D. '4100null'"],
    "answer": "D",
    "title": "Question 30",
    "explanation": ""
  },
  {
    "content": "developer has a web server running with Node.js. The command to start the web server is node server,js. The web server started having latency issues. Instead of a one second turn around for web requests, the developer now sees a five second turnaround, Which command can the web developer run to see what the module is doing during the latency period?",
    "options": [
      "A. DEBUG = http, https node server.js",
      "B. NODE_DEBUG =true node server.js",
      "C. DEBUG =true node server.js",
      "D. NODE_DEBUG =http, https node server.js"
    ],
    "answer": "C",
    "title": "Question 31",
    "explanation": ""
  },
  {
    "content": "A class was written to represent items for purchase in an online store, and a second class Representing items that are on sale at a discounted price. THe constructor sets the name to the first value passed in. The pseudocode is below:\nClass Item {\nconstructor(name, price) {\n... // Constructor Implementation\n}\n}\nClass SaleItem extends Item {\nconstructor (name, price, discount) {\n...//Constructor Implementation\n}\n}\nThere is a new requirement for a developer to implement a description method that will return a brief description for Item and SaleItem.\nLet regItem =new Item('Scarf', 55);\nLet saleItem = new SaleItem('Shirt' 80, -1);\nItem.prototype.description = function () { return 'This is a ' + this.name; console.log(regItem.description()); console.log(saleItem.description()); SaleItem.prototype.description = function () { return 'This is a discounted ' + this.name; } console.log(regItem.description()); console.log(saleItem.description()); What is the output when executing the code above ?",
    "options": [
      "A. This is aScarf\n         Uncaught TypeError: saleItem.description is not a function\n         This is a Shirt\n         This is a did counted Shirt",
      "B. This is a Scarf\n         This is a Shirt\n         This is a Scarf\n         This is a discounted Shirt",
      "C. This is a Scarf\n         Uncaught TypeError: saleItem.description is not a function\n         This is aScarf\n         This is a discounted Shirt",
      "D. This is a Scarf\n         This is a Shirt\n         This is a discounted Scarf\n         This is a discounted Shirt"
    ],
    "answer": "B",
    "title": "Question 32",
    "explanation": ""
  },
  {
    "content": "Refer to the following code:\nLet obj ={\nFoo: 1,\nBar: 2\n}\nLet output =[],\nfor(let something in obj{\noutput.push(something);\n}\nconsole.log(output);\nWhat is the output line 11?",
    "options": ["A. [\"foo\",\"bar\"]", "B. [1,2]", "C. [\"bar\",\"foo\"]", "D. [\"foo:1\",\"bar:2\"]"],
    "answer": "A",
    "title": "Question 33",
    "explanation": ""
  },
  {
    "content": "A developer receives a comment from the Tech Lead that the code given below has error:\nconst monthName = 'July';\nconst year = 2019;\nif(year === 2019) {\nmonthName = 'June';\n}\nWhich line edit should be made to make this code run?",
    "options": ["A. 02 let year =2019;", "B. 02 const year = 2020;", "C. 01 let monthName ='July';", "D. 03 if (year == 2019) {"],
    "answer": "C",
    "title": "Question 34",
    "explanation": ""
  },
  {
    "content": "A developer is setting up a new Node.js server with a client library that is built using events and callbacks.\nThe library:\n* Will establish a web socket connection and handle receipt of messages to the server\n* Will be imported with require, and made available with a variable called we.\nThe developer also wants to add error logging if a connection fails.\nGiven this info, which code segment shows the correct way to set up a client with two events that listen at execution time?",
    "options": [
      "A. ws.connect (( ) => {\n         console.log('connected to client'); }).catch((error) => { console.log('ERROR' , error); }};",
      "B. ws.on ('connect', ( ) => {\n         console.log('connected to client'); ws.on('error', (error) => { console.log('ERROR' , error); });\n         });",
      "C. ws.on ('connect', ( ) => { console.log('connected to client'); }}; ws.on('error', (error) => { console.log('ERROR' , error); }};",
      "D. try{\n         ws.connect (( ) => {\n         console.log('connected to client'); });"
    ],
    "answer": "C",
    "title": "Question 35",
    "explanation": "} catch(error) { console.log('ERROR' , error); };\n }"
  },
  {
    "content": "Considering type coercion, what does the following expression evaluate to?\nTrue + '13' + NaN",
    "options": ["A. 14", "B. ' true13 '", "C. ' 113Nan '", "D. ' true13NaN '"],
    "answer": "D",
    "title": "Question 36",
    "explanation": ""
  },
  {
    "content": "Which statement accurately describes an aspect of promises?",
    "options": [
      "A. In a.then() function, returning results is not necessary since callbacks will catch the result of a previous promise.",
      "B. Arguments for the callback function passed to .then() are optional.",
      "C. .then() manipulates and returns the original promise.",
      "D. .then() cannot be added after a catch."
    ],
    "answer": "B",
    "title": "Question 37",
    "explanation": ""
  },
  {
    "content": "Considering the implications of 'use strict' on line 04, which three statements describe the execution of the code?\nChoose 3 answers",
    "options": [
      "A. 'use strict' has an effect only on line 05.",
      "B. 'use strict' is hoisted, so it has an effect on all lines.",
      "C. Line 05 throws an error.",
      "D. 'use strict' has an effect between line 04 and the end of the file.",
      "E. z is equal to 3.14."
    ],
    "answer": "A,C,E",
    "title": "Question 38",
    "explanation": ""
  },
  {
    "content": "Given the following code:\ndocument.body.addEventListener(' click ', (event) => {\nif (/* CODE REPLACEMENT HERE */) {\nconsole.log('button clicked!');\n)\n});\nWhich replacement for the conditional statement on line 02 allows a developer to correctly determine that a button on page is clicked?",
    "options": ["A. event.target.nodeName == 'BUTTON'", "B. e.nodeTarget ==this", "C. button.addEventListener('click')", "D. Event.clicked"],
    "answer": "A",
    "title": "Question 39",
    "explanation": ""
  },
  {
    "content": "A developer has code that calculates a restaurant bill, but generates incorrect answers while testing the code:\nfunction calculateBill ( items ) {\nlet total = 0;\ntotal += findSubTotal(items);\ntotal += addTax(total);\ntotal += addTip(total);\nreturn total;\n}\nWhich option allows the developer to step into each function execution within calculateBill?",
    "options": [
      "A. Using the debugger command on line 03",
      "B. Calling the console.trace (total) method on line 03.",
      "C. Wrapping findSubtotal in a console.log() method.",
      "D. Using the debugger command on line 05."
    ],
    "answer": "D",
    "title": "Question 40",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\n<html lang=\"en\">\n<table onclick=\"console.log(Table log');\">\n<tr id=\"row1\">\n<td>Click me!</td>\n</tr>\n<table>\n<script>\nfunction printMessage(event) {\nconsole.log('Row log');\n}\nLet elem = document.getElementById('row1');\nelem.addEventListener('click', printMessage, false);\n</script>\n</html>\nWhich code change should be made for the console to log only Row log when 'Click me! ' is clicked?",
    "options": [
      "A. Add event.stopPropagation(); to printMessage function.",
      "B. Add event.removeEventListener(); to window.onLoad event handler.",
      "C. Add.event.stopPropagation(); to window.onLoad event handler.",
      "D. Add event.removeEventListener(); toprintMessage function."
    ],
    "answer": "A",
    "title": "Question 41",
    "explanation": ""
  },
  {
    "content": "Which statement accurately describes the behaviour of the async/ await keyworks ?",
    "options": [
      "A. The associated function can only be called via asynchronous methods",
      "B. The associated sometimes returns a promise.",
      "C. The associated class contains some asynchronous functions.",
      "D. The associated function will always return a promise"
    ],
    "answer": "D",
    "title": "Question 42",
    "explanation": ""
  },
  {
    "content": "Refer to code below:\nLet productSKU = '8675309' ;\nA developer has a requirement to generate SKU numbers that are always 19 characters lon, starting with 'sku', and padded with zeros.\nWhich statement assigns the values sku0000000008675309 ?",
    "options": [
      "A. productSKU = productSKU .padStart (16. '0').padstart(19, 'sku');",
      "B. productSKU = productSKU .padEnd (16. '0').padstart(19, 'sku');",
      "C. productSKU = productSKU .padStart (19. '0').padstart('sku');",
      "D. productSKU = productSKU .padEnd (16. '0').padstart('sku');"
    ],
    "answer": "A",
    "title": "Question 43",
    "explanation": ""
  },
  {
    "content": "A developer is creating a simple webpage with a button. When a user clicks this button for the first time, a message is displayed.\nThe developer wrote the JavaScript code below, but something is missing. The message gets displayed every time a user clicks the button, instead of just the first time.\n01 function listen(event) {\n02 alert ( 'Hey! I am John Doe') ;\n03 button.addEventListener ('click', listen);\nWhich two code lines make this code work as required?\nChoose 2 answers",
    "options": [
      "A. On line 02, use event.first to test if it is the first execution.",
      "B. On line 04, use button.removeEventListener(' click\" , listen);",
      "C. On line 04, use event.stopPropagation ( ),",
      "D. On line 06, add an option called once to button.addEventListener()."
    ],
    "answer": "B,D",
    "title": "Question 44",
    "explanation": ""
  },
  {
    "content": "Which code statement below correctly persists an objects in local Storage ?",
    "options": [
      "A. const setLocalStorage = (storageKey, jsObject) => {\n         window.localStorage.setItem(storageKey, JSON.stringify(jsObject));\n         }",
      "B. const setLocalStorage = ( jsObject) => {\n         window.localStorage.connectObject(jsObject));\n         }",
      "C. const setLocalStorage = ( jsObject) => {\n         window.localStorage.setItem(jsObject);\n         }",
      "D. const setLocalStorage = (storageKey, jsObject) => {\n         window.localStorage.persist(storageKey, jsObject);\n         }"
    ],
    "answer": "A",
    "title": "Question 45",
    "explanation": ""
  },
  {
    "content": "Given two expressions var1 and var2. What are two valid ways to return the logical AND of the two expressions and ensure it is data type Boolean ?\nChoose 2 answers:",
    "options": ["A. var1.toBoolean() && var2toBoolean()", "B. Boolean(var1 && var2)", "C. var1 && var2", "D. Boolean(var1) && Boolean(var2)"],
    "answer": "B,D",
    "title": "Question 46",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nConsidering that JavaScript is single-threaded, what is the output of line 08 after the code executes?",
    "options": ["A. 13", "B. 12", "C. 11", "D. 10"],
    "answer": "C",
    "title": "Question 47",
    "explanation": ""
  },
  {
    "content": "Refer to code below:\nLet first = 'who';\nLet second = 'what';\nTry{\nTry{\nThrow new error('Sad trombone');\n}catch (err){\nFirst ='Why';\n}finally {\nSecond ='when';\n} catch (err) {\nSecond ='Where';\n}\nWhat are the values for first and second once the code executes ?",
    "options": [
      "A. First is who and second is where",
      "B. First is why and second is where",
      "C. First is Who and second is When",
      "D. First is why and second is when"
    ],
    "answer": "D",
    "title": "Question 48",
    "explanation": ""
  },
  {
    "content": "Refer to the following code:\nfunction test (val) {\nIf (val === undefined) {\nreturn 'Undefined values!' ;\n}\nif (val === null) {\nreturn 'Null value! ';\n}\nreturn val;\n}\nLet x;\ntest(x);\nWhat is returned by the function call on line 13?",
    "options": ["A. 'Null value!'", "B. 'Undefined values!'", "C. Undefined", "D. Line 13 throws an error."],
    "answer": "B",
    "title": "Question 49",
    "explanation": ""
  },
  {
    "content": "Given the following code:\nis the output of line 02?",
    "options": ["A. ''undefined''", "B. ''object''", "C. ''null'''", "D. ''x''"],
    "answer": "B",
    "title": "Question 50",
    "explanation": ""
  },
  {
    "content": "Refer to the following code:\n<html lang=\"en\">\n<body>\n<div onclick = \"console.log('Outer message') ;\">\n<button id =\"myButton\">CLick me<button>\n</div>\n</body>\n<script>\nfunction displayMessage(ev) {\nev.stopPropagation();\nconsole.log('Inner message.');\n}\nconst elem = document.getElementById('myButton');\nelem.addEventListener('click' , displayMessage);\n</script>\n</html>\nWhat will the console show when the button is clicked?",
    "options": ["A. Inner message", "B. Inner message\n         Outer message", "C. Outer message\n         Inner message", "D. Outer message"],
    "answer": "A",
    "title": "Question 51",
    "explanation": ""
  },
  {
    "content": "myArraym can have one level, two levels, or more levels.\nWhich statement flattens myArray when it can be arbitrarily nested?",
    "options": [
      "A. [ ] .concat {. . .myArray) ;",
      "B. myArray.flat(Infinity);",
      "C. myArray. reduce ((prev, curr) => prev.concat(curr) [ ]);",
      "D. myArray. join (\",\"). split (\",\");"
    ],
    "answer": "C",
    "title": "Question 52",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nWhich value can a developer expect when referencing country,capital,cityString?",
    "options": ["A. An error", "B. undefined", "C. 'NaN'", "D. 'London'"],
    "answer": "C",
    "title": "Question 53",
    "explanation": ""
  },
  {
    "content": "Refer to the code below?\nLet searchString = ' look for this ';\nWhich two options remove the whitespace from the beginning of searchString?\nChoose 2 answers",
    "options": [
      "A. searchString.trimStart();",
      "B. trimStart(searchString);",
      "C. searchString.replace(/*\\s\\s*/, '');",
      "D. searchString.trimEnd();"
    ],
    "answer": "A,C",
    "title": "Question 54",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nlet timeFunction =() => {\nconsole.log('Timer called.\");\n};\nlet timerId = setTimeout (timedFunction, 1000);\nWhich statement allows a developer to cancel the scheduled timed function?",
    "options": ["A. clearTimeout(timedFunction);", "B. removeTimeout(timerId);", "C. clearTimeout(timerId);", "D. removeTimeout(timedFunction);"],
    "answer": "C",
    "title": "Question 55",
    "explanation": ""
  },
  {
    "content": "developer is trying to convince management that their team will benefit from using Node.js for a backend server that they are going to create. The server will be a web server that handles API requests from a website that the team has already built using HTML, CSS, and JavaScript.\nWhich three benefits of Node.js can the developer use to persuade their manager?\nChoose 3 answers:",
    "options": [
      "A. Performs a static analysis on code before execution to look for runtime errors.",
      "B. Ensures stability with one major release every few years.",
      "C. Executes server-side JavaScript code to avoid learning a new language.",
      "D. I nstalls with its own package manager to install and manage third-party libraries.",
      "E. User non blocking functionality for performant request handling ."
    ],
    "answer": "A,D,E",
    "title": "Question 56",
    "explanation": ""
  },
  {
    "content": "A test has a dependency on database.query. During the test the dependency is replaced with an object called database with the method, query, that returns an array. The developer needs to verify how many times the method was called and the arguments used each time.\nWhich two test approaches describe the requirement?\nChoose 2 answers",
    "options": ["A. White box", "B. Mocking", "C. Integration", "D. Black box"],
    "answer": "A,B",
    "title": "Question 57",
    "explanation": ""
  },
  {
    "content": "A developer is leading the creation of a new browser application that will serve a single page application. The team wants to use a new web framework Minimalsit.js. The Lead developer wants to advocate for a more seasoned web framework that already has a community around it.\nWhich two frameworks should the lead developer advocate for?\nChoose 2 answers",
    "options": ["A. Vue", "B. Angular", "C. Express", "D. Koa"],
    "answer": "B,C",
    "title": "Question 58",
    "explanation": ""
  },
  {
    "content": "Refer to HTML below:\n<p> The current status of an Order: <span id =\"status\"> In Progress </span> </p>.\nWhich JavaScript statement changes the text 'In Progress' to 'Completed' ?",
    "options": [
      "A. document.getElementById(\"status\").Value = 'Completed' ;",
      "B. document.getElementById(\"#status\").innerHTML = 'Completed' ;",
      "C. document.getElementById(\".status\").innerHTML = 'Completed' ;",
      "D. document.getElementById(\"status\").innerHTML = 'Completed' ;"
    ],
    "answer": "D",
    "title": "Question 59",
    "explanation": ""
  }
]
