[
  {
    "content": "A developer has an ErrorHandler module that contains multiple functions.\nWhat kind of export should be leveraged so that multiple functions can be used?",
    "options": ["A. default", "B. named", "C. all", "D. multi"],
    "answer": "B",
    "title": "Question 1",
    "explanation": ""
  },
  {
    "content": "A developer wrote the following code:\n01 let X = object.value;\n02\n03 try {\n04handleObjectValue(X);\n05 } catch (error) {\n06 handleError(error);\n07 }\nThedeveloper has a getNextValue function to execute after handleObjectValue(), but does not want to execute getNextValue() if an error occurs.\nHow can the developer change the code to ensure this behavior?",
    "options": [
      "A. 03 try{04 handleObjectValue(x);05 }catch(error){06 handleError(error);07 } then {08 getNextValue();09 }",
      "B. 03 try{04 handleObjectValue(x);05 } catch(error){06 handleError(error);07 } finally {08 getNextValue();10 }",
      "C. 03 try{04 handleObjectValue(x);05 } catch(error){06 handleError(error);07 }08 getNextValue();",
      "D. 03 try {04 handleObjectValue(x)05 ........................"
    ],
    "answer": "D",
    "title": "Question 2",
    "explanation": ""
  },
  {
    "content": "Given the following code:\nis the output ofline 02?",
    "options": ["A. ''null'''", "B. ''object''", "C. ''undefined''", "D. ''x''"],
    "answer": "B",
    "title": "Question 3",
    "explanation": ""
  },
  {
    "content": "A developer is wondering whether to use, Promise.then or Promise.catch, especially when a Promise throws an error?\nWhich two promises are rejected?\nWhich 2 are correct?",
    "options": [
      "A. New Promise(() => (throw 'cool error here'}).then(null, error => console.error(error)));",
      "B. Promise.reject('cool errorhere').then(error =>console.error(error));",
      "C. Promise.reject('cool error here').catch(error => console.error(error));",
      "D. New Promise((resolve, reject) => (throw 'cool error here'}).catch(error =>console.error(error)) ;"
    ],
    "answer": "C,D",
    "title": "Question 4",
    "explanation": ""
  },
  {
    "content": "A developer initiates a server with thefile server,js and adds dependencies in the source codes package,json that are required to run the server.\nWhich command should the developer run to start the server locally?",
    "options": ["A. npm start", "B. npm start server,js", "C. start server,js", "D. node start"],
    "answer": "A",
    "title": "Question 5",
    "explanation": ""
  },
  {
    "content": "Which two console logs outputs NaN ?\nChoose 2 answers",
    "options": ["A. console.log(10/ Number('5'));", "B. console.log(parseInt('two'));", "C. console.log(10/0);", "D. console.log(10/ ''five);"],
    "answer": "B,D",
    "title": "Question 6",
    "explanation": ""
  },
  {
    "content": "Given the code below:\nWhich method can be used to provide a visual representation of the list of users and to allow sorting by the name or email attribute?",
    "options": [
      "A. console.table(usersList) ;",
      "B. console.info(usersList) ;",
      "C. console.groupCol lapsed (usersList) ;",
      "D. console.group(usersList) ;"
    ],
    "answer": "D",
    "title": "Question 7",
    "explanation": ""
  },
  {
    "content": "A test has a dependency on database. query. During the test, the dependency is replaced with an object called database with the method, Calculator query, that returns an array. The developer does notneed to verify how many times the method has been called.\nWhich two test approaches describe the requirement?\nChoose 2 answers",
    "options": ["A. White box", "B. Substitution", "C. Stubbing", "D. Black box"],
    "answer": "A,B",
    "title": "Question 8",
    "explanation": ""
  },
  {
    "content": "Which statement parses successfully?",
    "options": ["A. JSON.parse (\"\"foo'\");", "B. JSON. parse (\"\"foo\"');", "C. JSON.parse (\"foo\");", "D. JSON.parse (\"foo\"); "],
    "answer": "B",
    "title": "Question 9",
    "explanation": ""
  },
  {
    "content": "A developer at Universal Containers is creating their new landing pagebased on HTML, CSS, and JavaScript.\nThe website includes multiple external resources that are loaded when the page is opened.\nTo ensure that visitors have a good experience, a script named personalizeWebsiteContent needs to be executed when the webpage isloaded and there is no need to wait for the resources to be available.\nWhich statementshould be used to call personalizeWebsiteContent based on the above business requirement?",
    "options": [
      "A. windows,addEventListener('onload', personalizeWebsiteContent);",
      "B. windows,addEventListener('DOMContent Loaded ', personalizeWebsiteContent);",
      "C. windows,addEventListener('onDOMCContentLoaded', personalizeWebsiteContent);",
      "D. windows,addEventListener('load', personalizeWebsiteContent);"
    ],
    "answer": "D",
    "title": "Question 10",
    "explanation": ""
  },
  {
    "content": "Universal Containers (UC) just launched anew landing page, but users complain that the website is slow. A developer found some functions any that might cause this problem. To verify this, thedeveloper decides to execute everything andlog the time each of these three suspicious functions consumes.\nWhich function can the developer use to obtain the time spent by every one of the three functions?",
    "options": ["A. console.trace()", "B. console. timeLog ()", "C. console.getTime ()", "D. console.timeStamp ()"],
    "answer": "B",
    "title": "Question 11",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nLet foodMenu1 = ['pizza', 'burger', 'French fries'];\nLet finalMenu = foodMenu1;\nfinalMenu.push('Garlic bread');\nWhat is the value of foodMenu1 after thecode executes?",
    "options": [
      "A. [ 'pizza','Burger', 'French fires', 'Garlic bread']",
      "B. [ 'Garlic bread' , 'pizza','Burger', 'French fires' ]",
      "C. [ 'Garlicbread']",
      "D. [ 'pizza','Burger', 'French fires']"
    ],
    "answer": "D",
    "title": "Question 12",
    "explanation": ""
  },
  {
    "content": "Given HTML below:\n<div>\n<div id =\"row-uc\">UniversalContainer</div>\n<div id =\"row-aa\">Applied Shipping</div>\n<div id =\"row-bt\"> Burlington Textiles </div>\n</div>\nWhich statement adds the priority = account CSS class to the universal Containers row ?",
    "options": [
      "A. Document .querySelector('#row-uc').classes.push('priority-account');",
      "B. Document .queryElementById('row-uc').addclass('priority-account');",
      "C. Document .querySelector('#row-uc').classList.add('priority-account');",
      "D. Document .querySelectorALL('#row-uc').classList.add('priority-account');"
    ],
    "answer": "B",
    "title": "Question 13",
    "explanation": ""
  },
  {
    "content": "Universal Containers recently launched its new landing page to host a crowd-funding campaign. The page uses an external library to display some third-party ads. Once the page is fully loaded,it creates more than 50 new HTML items placed randomly insidethe DOM, like the one in the code below:\nAll the elements includes the same ad-library-item class, They are hidden by default, and they are randomly displayed while the user navigates through the page.",
    "options": [
      "A. Use the browser to execute a script that removes all the element containing the class ad-library-item.",
      "B. Use the browser console to execute a scriptthat prevents the load event to be fired.",
      "C. Use the DOM inspector to remove all the elements containing the class ad-library-item.",
      "D. Use the DOM inspector to prevent the load eventto be fired."
    ],
    "answer": "A",
    "title": "Question 14",
    "explanation": ""
  },
  {
    "content": "The developer has a function that prints \"Hello\" to an input name. Totest this,thedeveloper created a function that returns \"World\". However the following snippet does not print \" Hello World\".\nWhat can the developer do to change the code to print \"Hello World\" ?",
    "options": [
      "A. Change line 2 to console.log('Hello' ,name() );",
      "B. Change line 9 to sayHello(world) ();",
      "C. Change line 5 to function world ( ) {",
      "D. Change line 7 to ) () ;"
    ],
    "answer": "A",
    "title": "Question 15",
    "explanation": ""
  },
  {
    "content": "Given the following code:\nWhat is the output of line 02?",
    "options": ["A. \"null\"", "B. 'object\"", "C. \"x-", "D. \"undefined\" 0"],
    "answer": "B",
    "title": "Question 16",
    "explanation": ""
  },
  {
    "content": "Refer to code below:\nLet first = 'who';\nLet second = 'what';\nTry{\nTry{\nThrow new error('Sad trombone');\n}catch (err){\nFirst ='Why';\n}finally {\nSecond ='when';\n} catch (err) {\nSecond ='Where';\n}\nWhat are the values for first and second once the code executes ?",
    "options": [
      "A. First is who andsecond is where",
      "B. First is why and second is when",
      "C. First is why and second is where",
      "D. First is Who and second is When"
    ],
    "answer": "B",
    "title": "Question 17",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nfor(let number =2 ; number <= 5 ; number += 1 ) {\n// insert code statement here\n}\nThedeveloper needs to insert a code statement in the location shown. The code statement has these requirements:\n1. Does require an import\n2. Logs an error when the boolean statement evaluates to false\n3. Works in both the browser and Node.js\nWhich meet the requirements?",
    "options": [
      "A. console.debug(number % 2 === 0);",
      "B. console.error(number % 2 === 0);",
      "C. console.assert(number % 2 === 0);",
      "D. assert (number % 2 === 0);"
    ],
    "answer": "B",
    "title": "Question 18",
    "explanation": ""
  },
  {
    "content": "A developer needs to debug a Node.js web server because a runtime error keeps occurring at one of the endpoints.\nThe developer wants totest the endpoint on a local machine and make the request against a local server to look at the behavior. In the source code, the server, js file will start the server. the developer wants to debug the Node.js server only using the terminal.\nWhich commandcan the developer use to open the CLI debugger in their current terminal window?",
    "options": ["A. node -i server.js", "B. node inspect server,js", "C. node server,js inspect", "D. node start inspect server,js"],
    "answer": "B",
    "title": "Question 19",
    "explanation": ""
  },
  {
    "content": "A developer wants to create an object from a function in the browser using the code below:\nFunction Monster() { this.name = 'hello' };\nConst z = Monster();\nWhat happens due to lackof the new keyword on line 02?",
    "options": [
      "A. The z variable is assigned the correct object but this.name remains undefined.",
      "B. Window.name is assigned to 'hello' and the variable z remains undefined.",
      "C. The z variable is assigned the correct object.",
      "D. Window.m is assigned the correct object."
    ],
    "answer": "B",
    "title": "Question 20",
    "explanation": ""
  },
  {
    "content": "A developer wants to define a function log to be used a few times on a single-file JavaScript script.\n01 // Line 1 replacement\n02 console.log('\"LOG:', logInput);\n03 }\nWhich two options can correctly replaceline 01 and declare the functionfor use?\nChoose 2 answers",
    "options": ["A. function leg(logInput) {", "B. const log(loginInput) {", "C. const log = (logInput) => {", "D. function log = (logInput) {"],
    "answer": "A,C",
    "title": "Question 21",
    "explanation": ""
  },
  {
    "content": "Refer to the code below?\nLet searchString = ' look for this ';\nWhich two options remove the whitespace from the beginning of searchString?\nChoose 2 answers",
    "options": [
      "A. searchString.trimStart();",
      "B. searchString.replace(/*\\s\\s*/, '');",
      "C. trimStart(searchString);",
      "D. searchString.trimEnd();"
    ],
    "answer": "A,B",
    "title": "Question 22",
    "explanation": ""
  },
  {
    "content": "A developer creates a simple webpage with an input field. When a user enters text in the inputfield and clicks the button, the actual value of the field must be displayed in the console.\nHere is the HTML file content:\n<input type =\" text\"value=\"Hello\" name =\"input\">\n<button type =\"button\" >Display </button>\nThe developer wrote the javascript codebelow:\nConst button = document.querySelector('button');\nbutton.addEvenListener('click', () => (\nConst input = document.querySelector('input');\nconsole.log(input.getAttribute('value'));\nWhen the user clicks the button, the output is always \"Hello\".\nWhat needs to be done make this code work as expected?",
    "options": [
      "A. Replace line 03 with const input = document.getElementByName('input');",
      "B. Replace line 02 with button.addCallback(\"click\", function() {",
      "C. Replace line 02 with button.addEventListener(\"onclick\", function() {",
      "D. Replace line 04 with console.log(input .value);"
    ],
    "answer": "D",
    "title": "Question 23",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nFunction changeValue(obj) {\nObj.value = obj.value/2;\n}\nConst objA = (value: 10);\nConst objB = objA;\nchangeValue(objB);\nConst result = objA.value;\nWhat is the value of result after the code executes?",
    "options": ["A. Undefined", "B. 5", "C. Nan", "D. 10"],
    "answer": "B",
    "title": "Question 24",
    "explanation": ""
  },
  {
    "content": "A developer wrote a fizzbuzz function thatwhen passed in a number, returns the following:\n'Fizz' if the number is divisible by 3.\n'Buzz' if the number is divisible by 5.\n'Fizzbuzz' if the number is divisible by both 3 and 5.\nEmpty string if the number is divisible by neither 3 or 5.\nWhichtwo test caseswill properly test scenarios for the fizzbuzz function?\nChoose 2 answers",
    "options": [
      "A. let res = fizzbuzz(Infinity);console.assert ( res === '' )",
      "B. let res = fizzbuzz(15);console.assert ( res === ' fizzbuzz ' )",
      "C. let res = fizzbuzz(3);console.assert ( res === ' buzz ' )",
      "D. let res = fizzbuzz(5);console.assert ( res === ' ' );"
    ],
    "answer": "A,B,C",
    "title": "Question 25",
    "explanation": ""
  },
  {
    "content": "Refer to the code below\nlet inArray = [[1,2],[3,4,5]];\nwhich two statements results in the array [1,2,3,4,5]?\nchoose 2 answer",
    "options": [
      "A. [ ].concat([...inArray])",
      "B. [ ].concat(...inArray);",
      "C. [ ].concat.apply([ ],inArray);",
      "D. [ ].concat.apply(inArray,[ ]);"
    ],
    "answer": "B,C",
    "title": "Question 26",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nWhich value can a developer expect when referencing country,capital,cityString?",
    "options": ["A. An error", "B. 'London'", "C. undefined", "D. 'NaN'"],
    "answer": "D",
    "title": "Question 27",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nlet car1 = new Promise((_ ,reject)=> setTimeout(reject,2000,\"Car1 crashed in\")); let car2 = new Promise(resolve => setTimeout(resolve,1500,\"Car2 completed\")); let car3 = new Promise(resolve => setTimeout(resolve,3000,\"Car3 completed\")); Promise.race([car1,car2,car3])\n.then(value=>{\nlet result = `${value} the race.`;\n}).catch(err=>{\nconsole.log('Race is cancelled.',err);\n});\nWhat is the valueof result whenpromise.race execues?",
    "options": [],
    "answer": "",
    "title": "Question 28",
    "explanation": "Car2 completed the race."
  },
  {
    "content": "Considering the implications of 'use strict' on line 04, which three statements describe the execution of the code?\nChoose 3 answers",
    "options": [
      "A. 'use strict' has an effect only on line 05.",
      "B. z is equal to 3.14.",
      "C. 'use strict' has an effect between line 04 and theend of the file.",
      "D. Line 05 throws an error.",
      "E. 'use strict' is hoisted, so it has an effect on all lines."
    ],
    "answer": "A,B,D",
    "title": "Question 29",
    "explanation": ""
  },
  {
    "content": "Refer to the code:\nGiven the code above, which three properties are set pet1?\nChoose3 answers:",
    "options": ["A. Owner", "B. Size", "C. canTalk", "D. Name", "E. Type"],
    "answer": "B,C,E",
    "title": "Question 30",
    "explanation": ""
  },
  {
    "content": "Given the following code:\nCounter = 0;\nconst logCounter = () => {\nconsole.log(counter);\n);\nlogCounter();\nsetTimeout(logCOunter, 1100);\nsetInterval(() => {\nCounter++\nlogCounter();\n}, 1000);\nWhat is logged by the first four log statements?",
    "options": ["A. 0 0 1 2", "B. 0 1 2 3", "C. 0 1 2 2", "D. 0 1 1 2"],
    "answer": "D",
    "title": "Question 31",
    "explanation": ""
  },
  {
    "content": "Refer to the following code:\nWhich statement should be added to line 09 for the code to display. The boat has a capacity of 10 people?",
    "options": ["A. this.size = size;", "B. ship.size size;", "C. super.size = size;", "D. super (size);"],
    "answer": "A",
    "title": "Question 32",
    "explanation": ""
  },
  {
    "content": "Given the code below:\n01 function GameConsole (name) {\n02 this.name = name;\n03 }\n04\n05GameConsole.prototype.load = function(gamename) {\n06 console.log( ` $(this.name) is loading agame : $(gamename) ...`);\n07 )\n08 function Console 16 Bit (name) {\n09 GameConsole.call(this, name) ;\n10 }\n11 Console16bit.prototype = Object.create ( GameConsole.prototype) ;\n12 //insert code here\n13 console.log( ` $(this.name) is loading a cartridge game :$(gamename) ...`);\n14 }\n15 const console16bit = new Console16bit(' SNEGeneziz ');\n16 console16bit.load(' Super Nonic 3x Force ');\nWhat should a developer insert at line 15 to output the following message using the method ?\n> SNEGeneziz is loading a cartridgegame: Super Monic 3x Force . . .",
    "options": [
      "A. Console16bit.prototype.load = function(gamename) {",
      "B. Console16bit.prototype.load(gamename) {",
      "C. Console16bit =Object.create(GameConsole.prototype).load = function(gamename) {",
      "D. Console16bit.prototype.load(gamename) = function() {"
    ],
    "answer": "A",
    "title": "Question 33",
    "explanation": ""
  },
  {
    "content": "A developer has a formatName function that takes two arguments, firstName and lastName and returns a string. They want to schedule the function to run once after five seconds.\nWhat is the correctsyntax toschedule this function?",
    "options": [
      "A. setTimeout (formatName(), 5000, \"John\", \"BDoe\");",
      "B. setTimeout ('formatName', 5000, 'John\", \"Doe');",
      "C. setTimout(() => { formatName(\"John', 'Doe') }, 5000);",
      "D. setTimeout (formatName('John', ''Doe'), 5000);"
    ],
    "answer": "B",
    "title": "Question 34",
    "explanation": ""
  },
  {
    "content": "What are two unique features of functions defined with a fat arrow as compared to normal function definition?\nChoose 2 answers",
    "options": [
      "A. The function receives an argument that is always in scope, called parentThis, which is the enclosing lexical scope.",
      "B. If the function has a single expression in the function body, the expression will be evaluated and implicit returned.",
      "C. The function generated its own this making it useful for separating the function's scope from its enclosing scope.",
      "D. Thefunction uses the this from the enclosing scope."
    ],
    "answer": "B,C",
    "title": "Question 35",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nconsole.log(''start);\nPromise.resolve('Success') .then(function(value){\nconsole.log('Success');\n});\nconsole.log('End');\nWhat is the output after the code executes successfully?",
    "options": ["A. EndStartSuccess", "B. SuccessStartEnd", "C. StartSuccessEnd", "D. StartEndSuccess"],
    "answer": "D",
    "title": "Question 36",
    "explanation": ""
  },
  {
    "content": "A developer wants to set up a secure web server withNode.js. The developer creates a directory locally called app-server, and the first file is app-server/index.js Without using any third-party libraries, what should the developer add toindex.js to create the secure web server?",
    "options": [
      "A. const http =require('http');",
      "B. const tls = require('tls');",
      "C. const https =require('https');",
      "D. const server =require('secure-server');"
    ],
    "answer": "C",
    "title": "Question 37",
    "explanation": ""
  },
  {
    "content": "Which code change should be done for the console to log the followingwhen 'Click me!' is clicked'\n> Row log\n> Table log",
    "options": [
      "A. Remove line 10",
      "B. Change line 10 to event.stopPropagation (false) ;",
      "C. Remove lines 13 and14",
      "D. Change line 14 to elem.addEventListener ('click', printMessage, true);"
    ],
    "answer": "A",
    "title": "Question 38",
    "explanation": ""
  },
  {
    "content": "Refer to code below:\nFunction muFunction(reassign){\nLet x = 1;\nvar y = 1;\nif( reassign ) {\nLet x= 2;\nVar y = 2;\nconsole.log(x);\nconsole.log(y);}\nconsole.log(x);\nconsole.log(y);}\nWhat is displayed when myFunction(true) is called?",
    "options": ["A. 2 2 2 2", "B. 2 2 1 1", "C. 2 2 1 2", "D. 2 2 undefined undefined"],
    "answer": "C",
    "title": "Question 39",
    "explanation": ""
  },
  {
    "content": "Teams at Universal Containers (UC) work on multiple JavaScript projects at the same time.\nUC is thinking about reusability and how each team can benefit from the work of others.\nGoing open-source or public is not an option at this time.\nWhich option is available to UC with npm?",
    "options": [
      "A. Private registries are not supported by npm, but packages can be installed via git.",
      "B. Private registries are not supported by npm, but packages can be installed via URL.",
      "C. Private packages can be scored, andscopes can be associated to a privateregistries.",
      "D. Private packages are not supported, but they can use another package manager likeyarn."
    ],
    "answer": "C",
    "title": "Question 40",
    "explanation": ""
  },
  {
    "content": "Given the following code:\nLet x =null;\nconsole.log(typeof x);\nWhat is the output of the line 02?",
    "options": ["A. \"undefined\"", "B. \"Null\"", "C. \"X\"", "D. \"Object\""],
    "answer": "D",
    "title": "Question 41",
    "explanation": ""
  },
  {
    "content": "Which three options show valid methods for creating a fat arrow function?\nChoose 3 answers",
    "options": [
      "A. X,y,z => ( console.log(' executed ') ;)",
      "B. (x,y,z) => ( console.log(' executed ') ;)",
      "C. x =>( console.log(' executed ') ; )",
      "D. ( ) => ( console.log(' executed ') ;)",
      "E. [ ] => ( console.log(' executed ') ;)"
    ],
    "answer": "B,C",
    "title": "Question 42",
    "explanation": ""
  },
  {
    "content": "A developer writes the code below to return a message to a user attempting to register a new username. If the username is available, a variable named nag is declared and assigned a value on line 03.\nWhat is the value of msg when getAvailableabilityMessage (\"newUserName\") is executed and get Availability (\"newUserName\") returns true?",
    "options": ["A. \"msg is not defined\"", "B. \"User-name available\"", "C. undefined", "D. \"newUserName\""],
    "answer": "B",
    "title": "Question 43",
    "explanation": ""
  },
  {
    "content": "A developer at Universal Containers creates a new landing page based on HTML, CSS, and JavaScript TO ensure that visitors have a goodexperience, a script named personaliseContext needs to be executed when the webpage is fully loaded (HTML content and all related files ), in order to do some custom initialization.\nWhich statement should be used to callpersonalizeWebsiteContent based onthe above business requirement?",
    "options": [
      "A. Document.addEventListener('''DOMContextLoaded' , personalizeWebsiteContext);",
      "B. document.addEventListener(''onDOMContextLoaded', personalizeWebsiteContext);",
      "C. window.addEventListener('onload', personalizeWebsiteContext);",
      "D. window.addEventListener('load',personalizeWebsiteContext);"
    ],
    "answer": "D",
    "title": "Question 44",
    "explanation": ""
  },
  {
    "content": "A developer creates a simple webpage with an input field. When a user enters text in the input field and clicks the button, the actual value of the field must bedisplayedin the console.\nHere is the HTML file content:\n<input type =\" text\" value=\"Hello\" name =\"input\">\n<button type =\"button\" >Display </button> The developer wrote the javascript code below:\nConst button = document.querySelector('button');\nbutton.addEvenListener('click', () => (\nConst input = document.querySelector('input');\nconsole.log(input.getAttribute('value'));\nWhen the user clicks the button, the output is always \"Hello\".\nWhat needs to be done to make this code work as expected?",
    "options": [
      "A. Replace line 02 with button.addCallback(\"click\", function() {",
      "B. Replace line 04 with console.log(input .value);",
      "C. Replace line 02 with button.addEventListener(\"onclick\", function() {",
      "D. Replace line 03 with const input = document.getElementByName('input');"
    ],
    "answer": "B",
    "title": "Question 45",
    "explanation": ""
  },
  {
    "content": "The developer wants to test the array shown:\nconst arr = Array(5).fill(0)\nWhich two tests are the most accurate for this array ?\nChoose 2 answers:",
    "options": [
      "A. console.assert(arr[0] === 0 && arr[ arr.length] === 0);",
      "B. arr.forEach(elem => console.assert(elem === 0)) ;",
      "C. console.assert (arr.length >0);",
      "D. console.assert( arr.length ===5 );"
    ],
    "answer": "B,D",
    "title": "Question 46",
    "explanation": ""
  },
  {
    "content": "A developer has a web server running with Node.js. The command to start the web server is node server.js.\nThe web server started having\nlatency issues. Instead of a one second turnaround for web requests, the developer now sees a five second turnaround.\nWhich command can the web developer run to see what the module is doing during the latency period?",
    "options": [
      "A. DEBUG=true node server.js",
      "B. NODE_DEBUG=http,https node server.js",
      "C. DEBUG=http, https node server.js",
      "D. NODE_DEBUG=true node server.js"
    ],
    "answer": "A",
    "title": "Question 47",
    "explanation": ""
  },
  {
    "content": "A team that works on a bigproject uses npm to deal with projects dependencies.\nA developer added a dependency does not get downloaded when they execute npm install.\nWhich two reasons could be possible explanations for this?\nChoose 2 answers",
    "options": [
      "A. The developer missed the option --addwhen adding the dependency.",
      "B. The developer missed the option --save when adding the dependency.",
      "C. The developer added the dependency as a dev dependency, andNODE_ENVIs set to production.",
      "D. The developer added the dependency as a dev dependency, andNODE_ENV is set to production."
    ],
    "answer": "B,C,D",
    "title": "Question 48",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\n01 const exec = (item, delay) =>{\n02newPromise(resolve => setTimeout( () => resolve(item), delay)),\n03 async function runParallel() {\n04 Const (result1, result2, result3) = await Promise.all{\n05 [exec ('x', '100') , exec('y', 500), exec('z', '100')]\n06 );\n07 return `parallel is done: $(result1)$(result2)$(result3)`;\n08 }\n}\n}\nWhich two statements correctly execute the runParallel () function?\nChoose 2 answers",
    "options": [
      "A. runParallel ( ). done(function(data){return data;});",
      "B. Async runParallel () .then(data);",
      "C. runParallel () .then(data);",
      "D. runParallel () .then(function(data)return data"
    ],
    "answer": "A,D",
    "title": "Question 49",
    "explanation": ""
  },
  {
    "content": "A developer is required to write a function that calculates the sum of elements in an array but is getting undefinedevery time the code is executed. The developer needs to find what is missing in the code below.\nConst sumFunction = arr => {\nReturn arr.reduce((result, current) => {\n//\nResult += current;\n//\n), 10);\n);\nWhich option makes the code work as expected?",
    "options": [
      "A. Replace line 04 with result = result +current;",
      "B. Replace line 05 with return result;",
      "C. Replace line02 with return arr.map(( result, current) => (",
      "D. Replace line 03 with if(arr.length == 0 ) ( return 0; )"
    ],
    "answer": "B",
    "title": "Question 50",
    "explanation": ""
  },
  {
    "content": "Which code statement below correctly persists an objects inlocal Storage ?",
    "options": [
      "A. const setLocalStorage = (storageKey, jsObject) => {window.localStorage.setItem(storageKey, JSON.stringify(jsObject));}",
      "B. const setLocalStorage = ( jsObject) =>{window.localStorage.connectObject(jsObject));}",
      "C. const setLocalStorage= ( jsObject) => {window.localStorage.setItem(jsObject);}",
      "D. const setLocalStorage = (storageKey, jsObject) => {window.localStorage.persist(storageKey, jsObject);}"
    ],
    "answer": "A",
    "title": "Question 51",
    "explanation": ""
  },
  {
    "content": "A developer wants to leverage a module to print a price in pretty format, and has imported a method as shown below:\nImport printPrice from '/path/PricePrettyPrint.js';\nBased on the code, what mustbe true about theprintPrice function of the PricePrettyPrint module for this import to work ?",
    "options": [
      "A. printPrice must be the default export",
      "B. printPrice must be an all export",
      "C. printPrice must be be a named export",
      "D. printPrice must be a multi exportc"
    ],
    "answer": "A",
    "title": "Question 52",
    "explanation": ""
  },
  {
    "content": "Refer to the following code:\nLet obj ={\nFoo: 1,\nBar: 2\n}\nLet output =[],\nfor(let something in obj{\noutput.push(something);\n}\nconsole.log(output);\nWhat is the output line 11?",
    "options": ["A. [\"foo\",\"bar\"]", "B. [\"bar\",\"foo\"]", "C. [\"foo:1\",\"bar:2\"]", "D. [1,2]"],
    "answer": "A",
    "title": "Question 53",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nConst myFunction = arr => {\nReturn arr.reduce((result,current) =>{\nReturn result = current;\n}, 10};\n}\nWhat is the output of this function when called with an empty array ?",
    "options": ["A. Throws an error", "B. Returns 10", "C. Returns 0", "D. Returns NaN"],
    "answer": "B",
    "title": "Question 54",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nConst searchTest = 'Yay! Salesforce is amazing!\" ;\nLet result1 = searchText.search(/sales/i);\nLet result 21 = searchText.search(/sales/i);\nconsole.log(result1);\nconsole.log(result2);\nAfter running this code, which result is displayed on the console?",
    "options": ["A. > 5 > -1", "B. > true > false", "C. > 5>undefined", "D. > 5 > 0"],
    "answer": "A",
    "title": "Question 55",
    "explanation": ""
  },
  {
    "content": "Given the following code:\nWhat will be the first four numberslogged?",
    "options": ["A. 0123", "B. 0122", "C. 0012", "D. 0112"],
    "answer": "B",
    "title": "Question 56",
    "explanation": ""
  },
  {
    "content": "developer removes the HTML class attribute from the checkout button, so now it is simply:\n<button>Checkout</button>.\nThere is a test to verify the existence of the checkout button, however it looks fora button with class= \"blue\". The test failsbecause no such button is found.\nWhich type of test category describes this test?",
    "options": ["A. True positive", "B. True negative", "C. False negative", "D. False positive"],
    "answer": "C",
    "title": "Question 57",
    "explanation": ""
  },
  {
    "content": "developer has a web server running with Node.js. The command to start the web server is node server,js. The web server started having latency issues. Instead of a one second turn around for web requests, thedeveloper now sees a five second turnaround, Which command can the web developer run to see what the module is doing during the latency period?",
    "options": [
      "A. DEBUG = http, https node server.js",
      "B. DEBUG =true node server.js",
      "C. NODE_DEBUG =true node server.js",
      "D. NODE_DEBUG =http, https node server.js"
    ],
    "answer": "B",
    "title": "Question 58",
    "explanation": ""
  },
  {
    "content": "Which code statement correctly retrieves and returns an object from localStorage?",
    "options": [
      "A. const retrieveFromLocalStorage = (storageKey) =>{return window.localStorage.getItem(storageKey);}",
      "B. const retrieveFromLocalStorage = () =>{return\n         JSON.stringify(window.localStorage.getItem(storageKey));}",
      "C. constretrieveFromLocalStorage = (storageKey) =>{return window.localStorage[storageKey];}",
      "D. const retrieveFromLocalStorage = (storageKey) =>{return\n         JSON.parse(window.localStorage.getItem(storageKey));}"
    ],
    "answer": "D",
    "title": "Question 59",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nWhat is the value of result when the code executes?",
    "options": ["A. 10-5", "B. 5-10", "C. 5-5", "D. 10-10"],
    "answer": "D",
    "title": "Question 60",
    "explanation": ""
  },
  {
    "content": "Given two expressions var1 and var2. What are two valid ways to return the logical AND of the two expressions and ensure it is data type Boolean ?\nChoose 2 answers:",
    "options": ["A. Boolean(var1) && Boolean(var2)", "B. Boolean(var1 && var2)", "C. var1.toBoolean() && var2toBoolean()", "D. var1 && var2"],
    "answer": "A,B",
    "title": "Question 61",
    "explanation": ""
  },
  {
    "content": "A class was written to represent items for purchase in an online store, and a secondclass Representing items that are on sale at a discounted price. THe constructor sets the name to the first value passed in. The pseudocode is below:\nClass Item {\nconstructor(name, price) {\n... // Constructor Implementation\n}\n}\nClass SaleItem extends Item {\nconstructor (name, price, discount) {\n...//Constructor Implementation\n}\n}\nThere is a newrequirement for a developer to implement a description method that will return a brief description for Item and SaleItem.\nLet regItem =new Item('Scarf', 55);\nLet saleItem = new SaleItem('Shirt' 80, -1);\nItem.prototype.description = function () { return 'This is a ' + this.name; console.log(regItem.description()); console.log(saleItem.description()); SaleItem.prototype.description = function () { return 'This is a discounted ' + this.name; } console.log(regItem.description()); console.log(saleItem.description()); What is the output when executing the code above ?",
    "options": [
      "A. This is a ScarfUncaught TypeError: saleItem.description is not a functionThis is aScarfThis is a discounted Shirt",
      "B. This is a ScarfThis is a ShirtThis is a discounted ScarfThis is a discounted Shirt",
      "C. This is a ScarfThis is a ShirtThis is a ScarfThis is a discounted Shirt",
      "D. This is aScarfUncaught TypeError: saleItem.description is not a functionThis is a ShirtThis is a did counted Shirt"
    ],
    "answer": "C",
    "title": "Question 62",
    "explanation": ""
  },
  {
    "content": "Whichthree actions can be using the JavaScript browser console?\nChoose 3 answers:",
    "options": [
      "A. Run code that is not related to page.",
      "B. Display a report showing the performance of a page.",
      "C. View and change DOM the page.",
      "D. View and change security cookies.",
      "E. view , change, and debug the JavaScript code ofthe page."
    ],
    "answer": "A,C,E",
    "title": "Question 63",
    "explanation": ""
  },
  {
    "content": "A developer uses a parsed JSON string to work with user information as in the block below:\n01 const userInformation ={\n02 \" id \" : \"user-01\",\n03\"email\" : \"[email protected]\",\n04 \"age\" : 25\nWhich two options access the email attribute in the object?\nChoose 2 answers",
    "options": ["A. userInformation(\"email\")", "B. userInformation.email", "C. userInformation.get(\"email\")", "D. userInformation(email)"],
    "answer": "A,B",
    "title": "Question 64",
    "explanation": ""
  },
  {
    "content": "Why would a developerspecify a package.jason as a developed forge instead of a dependency ?",
    "options": [
      "A. It is required by the application in production.",
      "B. It should be bundled when the package is published.",
      "C. Other required packages depend on it for development.",
      "D. It is only needed for localdevelopment and testing."
    ],
    "answer": "D",
    "title": "Question 65",
    "explanation": ""
  },
  {
    "content": "Refer to the following code:\nWhat is the output of line 11?",
    "options": ["A. [\"foo\", \"bar\"]", "B. [\"bar\", \"foo\"]", "C. [\"foo:1\", \"bar:2\"]", "D. [1,2]"],
    "answer": "A",
    "title": "Question 66",
    "explanation": ""
  },
  {
    "content": "Which option istrue about the strict mode in imported modules?",
    "options": [
      "A. You can only reference notStrict() functions from the imported module.",
      "B. Add the statement use non-strict, before any other statements in the module to enablenot-strict mode.",
      "C. Imported modules are in strict mode whether you declare them as such or not.",
      "D. Add the statement use strict =false; before any other statements in the module to enablenot- strict mode."
    ],
    "answer": "C",
    "title": "Question 67",
    "explanation": ""
  },
  {
    "content": "A developer is setting up a new Node.js server with a client library that is built using events and callbacks.\nThe library:\nWill establish a web socket connection and handle receipt of messages to theserver Will be imported with require, and made available with a variable called we.\nThe developer also wants to add error logging if a connection fails.\nGiven this info, which code segment shows the correct way to set up a client with two events that listen at execution time?",
    "options": [
      "A. ws.on ('connect', ( ) => { console.log('connected to client'); }}; ws.on('error', (error) => { console.log('ERROR' , error); }};",
      "B. ws.on ('connect', ( ) => {console.log('connected to client'); ws.on('error', (error) => { console.log('ERROR' ,error); });});",
      "C. ws.connect (( ) => {console.log('connected to client'); }).catch((error) => { console.log('ERROR' , error); }};",
      "D. try{ws.connect (( ) => {console.log('connected to client'); });} catch(error) { console.log('ERROR',error); };}"
    ],
    "answer": "B",
    "title": "Question 68",
    "explanation": ""
  },
  {
    "content": "Refer to the following array:\nLet arr = [1, 2, 3, 4, 5];\nWhich three options result in x evaluating as [1,2]?\nChoose 3 answer",
    "options": [
      "A. let x arr.filter((a) => (return a <= 2 });",
      "B. let x = arr.filter ((a) => 2 }) ;",
      "C. let x = arr. slice (0, 2);",
      "D. let x = arr.slice (2);",
      "E. let x =arr.splice(0, 2);"
    ],
    "answer": "A,C,E",
    "title": "Question 69",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nletsayHello = () => {\nconsole.log ('Hello, world!');\n};\nWhich code executes sayHello once, two minutes from now?",
    "options": [
      "A. setInterval(sayHello, 12000);",
      "B. setTimeout(sayHello, 12000);",
      "C. delay(sayHello, 12000);",
      "D. setTimeout(sayHello(), 12000);"
    ],
    "answer": "B",
    "title": "Question 70",
    "explanation": ""
  },
  {
    "content": "GIven a value, which three options can a developeruse to detect if thevalue is NaN?\nChoose 3 answers !",
    "options": ["A. value == NaN", "B. value ! == value", "C. Number.isNaN(value)", "D. Object.is(value, NaN)", "E. value === Number.NaN"],
    "answer": "A,C",
    "title": "Question 71",
    "explanation": ""
  },
  {
    "content": "A developer creates a class that represents a blog post based on the requirement that a Post should have a body author and view count.\nThe Code shown Below:\nClass Post{\n// Insert code here\nThis.body =body\nThis.author = author;\nthis.viewCount = viewCount;\n}\n}\nWhich statement should be inserted in the placeholder on line 02 to allow for a variable to be set to a new instanceof a Post with the three attributes correctly populated?",
    "options": [
      "A. Function Post (body, author, viewCount) {",
      "B. constructor (body, author, viewCount) {",
      "C. super (body, author, viewCount) {",
      "D. constructor() {"
    ],
    "answer": "B",
    "title": "Question 72",
    "explanation": ""
  },
  {
    "content": "bar, awesome is a popular JavaScript module. the versions publish to npm are:\nTeams at Universal Containers usethis module in a number of projects. A particular project has thepackage, json definition below.\nA developer runs this command: npm install.\nWhich version of bar .awesome is installed?",
    "options": ["A. 1.3.5", "B. 1.3.1", "C. The command fails, because version 130 is not found", "D. 1.4.0"],
    "answer": "A",
    "title": "Question 73",
    "explanation": ""
  },
  {
    "content": "Refer to the following code block:\nWhat is the console output?",
    "options": [
      "A. > Better student Jackie got 70% on test.",
      "B. > Better student Jackie got 100% ontest.",
      "C. > Jackie got 70% on test.",
      "D. > Uncaught Reference Error"
    ],
    "answer": "B",
    "title": "Question 74",
    "explanation": ""
  },
  {
    "content": "Refer to the following code:\n<html lang=\"en\">\n<body>\n<divonclick = \"console.log('Outer message') ;\">\n<button id =\"myButton\">CLick me<button>\n</div>\n</body>\n<script>\nfunction displayMessage(ev) {\nev.stopPropagation();\nconsole.log('Inner message.');\n}\nconst elem = document.getElementById('myButton');\nelem.addEventListener('click' , displayMessage);\n</script>\n</html>\nWhat will the console show when the button is clicked?",
    "options": ["A. Outer messageInner message", "B. Outer message", "C. Inner messageOuter message", "D. Inner message"],
    "answer": "D",
    "title": "Question 75",
    "explanation": ""
  },
  {
    "content": "A developer wants to use a module named universalContainersLib andthen call functions from it.\nHow should a developer import every function from the module and then call the functions foo and bar?",
    "options": [
      "A. import * from '/path/universalContainersLib.js';universalContainersLib. foo ()7universalContainersLib.bar ();",
      "B. import * as lib from '/path/universalContainersLib.js';lib.foo();lib. bar ();",
      "C. import{foo,bar} from '/path/universalCcontainersLib.js';foo():bar()?",
      "D. import all from\n         '/path/universalContainersLib.js';universalContainersLib.foo();universalContainersLib.bar ();"
    ],
    "answer": "B",
    "title": "Question 76",
    "explanation": ""
  },
  {
    "content": "Universal Containers (UC) notices that its application that allows users to search for accounts makes a network request each time a key is pressed. This results in too many requests for the server to handle.\nAddress this problem, UC decides to implement a debounce function on string change handler.\nWhat are three key steps to implement this debounce function?\nChoose 3 answers:",
    "options": [
      "A. When thesearch string changes, enqueue the request within a setTimeout.",
      "B. If there is an existing setTimeout and the search string change, allow the existingsetTimeout to finish, and do not enqueue a new setTimeout.",
      "C. Store the timeId of the setTimeout last enqueued by the search string change handle.",
      "D. If there is an existing setTimeout and the search string changes, cancel the existingsetTimeout using thepersisted timerId and replace it with a new setTimeout.",
      "E. Ensure that the network request has the property debounce set to true."
    ],
    "answer": "A,B,E",
    "title": "Question 77",
    "explanation": ""
  },
  {
    "content": "Refer to thefollowing code that imports a module named utils:\nimport (foo, bar) from '/path/Utils.js';\nfoo() ;\nbar() ;\nWhich two implementations of Utils.js export foo and bar such that the code above runs without error?\nChoose 2 answers",
    "options": [
      "A. // FooUtils.js and BarUtils.js existImport (foo) from '/path/FooUtils.js';Import (boo) from '\n         /path/NarUtils.js';",
      "B. const foo = () => { return 'foo';}const bar = () => {return 'bar'; }Export default foo, bar;",
      "C. Export default class {foo() { return 'foo' ; }bar() { return 'bar' ; }}",
      "D. const foo = () => { return 'foo' ; }const bar = () => { return 'bar' ; }export { bar, foo }"
    ],
    "answer": "C,D",
    "title": "Question 78",
    "explanation": ""
  },
  {
    "content": "Given the requirement to refactor the code above to JavaScript class format, which class definition is correct?",
    "options": ["A. ", "B. ", "C. ", "D. "],
    "answer": "A",
    "title": "Question 79",
    "explanation": ""
  },
  {
    "content": "Which three statements are true about promises ?\nChoose 3 answers",
    "options": [
      "A. A pending promise canbecome fulfilled, settled, or rejected.",
      "B. The executor of a new Promise runs automatically.",
      "C. A settled promise can become resolved.",
      "D. A fulfilled or rejected promise will not change states .",
      "E. A Promise has a .then() method."
    ],
    "answer": "A,D,E",
    "title": "Question 80",
    "explanation": ""
  },
  {
    "content": "Given the code below:\nconst copy = JSON.stringify([ newString(' false '), new Bollean( false ), undefined ]); What is the value of copy?",
    "options": [
      "A. -- [ \\\"false\\\" , false, undefined ]--",
      "B. -- [ \\\"false\\\" ,false, null ]--",
      "C. -- [ false, { } ]--",
      "D. -- [ \\\"false\\\" , { } ]--"
    ],
    "answer": "B",
    "title": "Question 81",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\n01 let car1 = new promise((_, reject) =>\n02 setTimeout(reject, 2000, \"Car 1 crashed in\"));\n03 let car2 = new Promise(resolve => setTimeout(resolve, 1500, \"Car 2\ncompleted\"));\n04 let car3 = new Promise(resolve => setTimeout (resolve, 3000, \"Car 3\nCompleted\"));\n05 Promise.race([car1, car2, car3])\n06 .then(value => (\n07 let result = $(value) the race. `;\n08 ))\n09 .catch( arr => (\n10 console.log(\"Race is cancelled.\", err);\n11 ));\nWhat is the value of result when Promise.race executes?",
    "options": ["A. Race is cancelled.", "B. Car 3 completed the race.", "C. Car 2 completed the race.", "D. Car 1 crashed in the race."],
    "answer": "C",
    "title": "Question 82",
    "explanation": ""
  },
  {
    "content": "Refer to HTML below:\n<p> The current status of an Order: <span id =\"status\"> In Progress </span> </p>.\nWhich JavaScript statement changes thetext 'In Progress' to 'Completed' ?",
    "options": [
      "A. document.getElementById(\"status\").Value = 'Completed' ;",
      "B. document.getElementById(\"status\").innerHTML = 'Completed' ;",
      "C. document.getElementById(\".status\").innerHTML = 'Completed' ;",
      "D. document.getElementById(\"#status\").innerHTML = 'Completed' ;"
    ],
    "answer": "B",
    "title": "Question 83",
    "explanation": ""
  },
  {
    "content": "Refer tothe code below:\nWhat is the value of result after line 10 executes?",
    "options": ["A. undefined Developer", "B. John Developer", "C. Error: myFather.job is not a function", "D. John undefined"],
    "answer": "B",
    "title": "Question 84",
    "explanation": ""
  },
  {
    "content": "A developer needs to test this function:\n01const sum3 = (arr) => (\n02if (!arr.length) return 0,\n03if (arr.length === 1) return arr[0],\n04if (arr.length === 2) returnarr[0]+ arr[1],\n05 return arr[0] + arr[1] + arr[2],\n06 );\nWhich two assert statements are valid tests for the function?\nChoose 2 answers",
    "options": [
      "A. console.assert(sum3(1, '2')) == 12);",
      "B. console.assert(sum3(-3, 2 )) == -1);",
      "C. console.assert(sum3(0)) == 0);",
      "D. console.assert(sum3('hello', 2, 3, 4)) === NaN);"
    ],
    "answer": "A,B",
    "title": "Question 85",
    "explanation": ""
  },
  {
    "content": "A developer is asked to fix some bugs reported by users. To do that, the developer adds abreakpoint for debugging.\nFunction Car (maxSpeed, color){\nThis.maxspeed =masSpeed;\nThis.color= color;\nLet carSpeed = document.getElementById(' CarSpeed');\nDebugger;\nLet fourWheels =new Car (carSpeed.value, 'red');\nWhen the code execution stops at the breakpoint on line 06, which two types of information are available in the browser console ?\nChoose 2 answers:",
    "options": [
      "A. The informationstored in the window.localStorage property",
      "B. The style, event listeners and other attributes applied to the carSpeed DOM element",
      "C. A variable displaying the number of instances created for the Car Object.",
      "D. The values of the carSpeed and fourWheels variables"
    ],
    "answer": "A,B",
    "title": "Question 86",
    "explanation": ""
  },
  {
    "content": "Refer to the following code:\n01 function Tiger(){\n02this.Type = 'Cat';\n03 this.size = 'large';\n04}\n05\n06 let tony = new Tiger();\n07 tony.roar = () =>{\n08 console.log('They\\'re great1');\n09 };\n10\n11 function Lion(){\n12 this.type = 'Cat';\n13 this.size = 'large';\n14 }\n15\n16 let leo = new Lion();\n17 //Insertcode here\n18 leo.roar();\nWhich two statements could be inserted at line 17 to enable the function call on line 18?\nChoose 2 answers.",
    "options": [
      "A. Object.assign(leo,tony);",
      "B. Leo.roar = () => { console.log('They\\'re pretty good:'); };",
      "C. Leo.prototype.roar = () => { console.log('They\\'re pretty good:'); };",
      "D. Object.assign(leo,Tiger);"
    ],
    "answer": "A,B",
    "title": "Question 87",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\n01 const server = require('server');\n02 /* Insert code here */\nA developer imports a library that creates a web server. Theimported library uses events and callbacks to start the servers Whichcode should be inserted at the line 03 to set up an event and start the web server ?",
    "options": [
      "A. Server.start ();",
      "B. server()",
      "C. serve(( port) => (",
      "D. console.log( 'Listening on ', port);",
      "E. server.on(' connect ' , ( port) => {console.log('Listening on ' , port) ;})"
    ],
    "answer": "E",
    "title": "Question 88",
    "explanation": ""
  },
  {
    "content": "Given the JavaScript below:\n01 function filterDOM (searchString) {\n02 constparsedSearchString = searchString && searchString.toLowerCase() ;\n03 document.quesrySelectorAll(' .account' ) . forEach(account => (\n04 const accountName = account.innerHTML.toLOwerCase();\n05 account. Style.display = accountName.includes(parsedSearchString) ? /*Insert code*/;\n06 )};\n07 }\nWhich code should replace the placeholder comment on line 05 to hide accounts that do not match thesearch string?",
    "options": ["A. ' visible ' : ' hidden '", "B. ' name ' : ' block '", "C. ' hidden ' : ' visible '", "D. ' Block ' : ' none '"],
    "answer": "D",
    "title": "Question 89",
    "explanation": ""
  },
  {
    "content": "Which two console logs output NaN?\nChoose 2 answers | |",
    "options": [
      "A. console.log(parseInt ' (\"two')) ;",
      "B. console.log(10 / Number('5) ) ;",
      "C. console.loeg(10 / 'five');",
      "D. console.log(10 / 0);"
    ],
    "answer": "A,B",
    "title": "Question 90",
    "explanation": ""
  }
]
