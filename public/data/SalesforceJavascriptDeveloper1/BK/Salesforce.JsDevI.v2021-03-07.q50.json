[
  {
    "content": "Refer to code below:\nconsole.log(0);\nsetTimeout(() => (\nconsole.log(1);\n});\nconsole.log(2);\nsetTimeout(() => {\nconsole.log(3);\n), 0);\nconsole.log(4);\nIn which sequence will the numbers be logged?",
    "options": ["A. 02413", "B. 01234", "C. 13024", "D. 02431"],
    "answer": "A",
    "title": "Question 1",
    "explanation": ""
  },
  {
    "content": "A developer uses a parsed JSON string to work with user information as in the block below:\n01 const userInformation ={\n02 \" id \" : \"user-01\",\n03 \"email\" : \"[emailÂ protected]\",\n04 \"age\" : 25\nWhich two options access the email attribute in the object?\nChoose 2 answers",
    "options": [
      "A. userInformation.email",
      "B. userInformation(email)",
      "C. userInformation(\"email\")",
      "D. userInformation.get(\"email\")"
    ],
    "answer": "A,C",
    "title": "Question 2",
    "explanation": ""
  },
  {
    "content": "A Developer wrote the following code to test a sum3 function that takes in an array of numbers and returns the sum of the first three number in the array, The test passes:\nLet res = sum2([1, 2, 3 ]) ;\nconsole.assert(res === 6 );\nRes = sum3([ 1, 2, 3, 4]);\nconsole.assert(res=== 6);\nA different developer made changes to the behavior of sum3 to instead sum all of the numbers present in the array. The test passes:\nWhich two results occur when running the test on the updated sum3 function ?\nChoose 2 answers",
    "options": [
      "A. The line 05 assertion fails.",
      "B. The line 02 assertion passes.",
      "C. The line 02 assertion fails",
      "D. The line 05 assertion passes."
    ],
    "answer": "A,B",
    "title": "Question 3",
    "explanation": ""
  },
  {
    "content": "Refer to HTML below:\n<p> The current status of an Order: <span id =\"status\"> In Progress </span> </p>.\nWhich JavaScript statement changes the text 'In Progress' to 'Completed' ?",
    "options": [
      "A. document.getElementById(\"status\").Value = 'Completed' ;",
      "B. document.getElementById(\"status\").innerHTML = 'Completed' ;",
      "C. document.getElementById(\"#status\").innerHTML = 'Completed' ;",
      "D. document.getElementById(\".status\").innerHTML = 'Completed' ;"
    ],
    "answer": "B",
    "title": "Question 4",
    "explanation": ""
  },
  {
    "content": "Why would a developer specify a package.jason as a developed forge instead of a dependency ?",
    "options": [
      "A. It should be bundled when the package is published.",
      "B. Other required packages depend on it for development.",
      "C. It is only needed for local development and testing.",
      "D. It is required by the application in production."
    ],
    "answer": "C",
    "title": "Question 5",
    "explanation": ""
  },
  {
    "content": "In the browser, the window object is often used to assign variables that require the broadest scope in an application Node.js application does not have access to the window object by default.\nWhich two methods are used to address this ?\nChoose 2 answers",
    "options": [
      "A. Create a new window object in the root file.",
      "B. Assign variables to the global object.",
      "C. Assign variables to module.exports and require them as needed.",
      "D. Use the document object instead of the window object."
    ],
    "answer": "B",
    "title": "Question 6",
    "explanation": ""
  },
  {
    "content": "developer is trying to convince management that their team will benefit from using Node.js for a backend server that they are going to create. The server will be a web server that handles API requests from a website that the team has already built using HTML, CSS, and JavaScript.\nWhich three benefits of Node.js can the developer use to persuade their manager?\nChoose 3 answers:",
    "options": [
      "A. Performs a static analysis on code before execution to look for runtime errors.",
      "B. Executes server-side JavaScript code to avoid learning a new language.",
      "C. I nstalls with its own package manager to install and manage third-party libraries.",
      "D. User non blocking functionality for performant request handling .",
      "E. Ensures stability with one major release every few years."
    ],
    "answer": "A,C,D",
    "title": "Question 7",
    "explanation": ""
  },
  {
    "content": "Which three statements are true about promises ?\nChoose 3 answers",
    "options": [
      "A. A fulfilled or rejected promise will not change states .",
      "B. A Promise has a .then() method.",
      "C. The executor of a new Promise runs automatically.",
      "D. A settled promise can become resolved.",
      "E. A pending promise can become fulfilled, settled, or rejected."
    ],
    "answer": "A,B,E",
    "title": "Question 8",
    "explanation": ""
  },
  {
    "content": "Given the following code:\nLet x =('15' + 10)*2;\nWhat is the value of a?",
    "options": ["A. 1520", "B. 35", "C. 3020", "D. 50"],
    "answer": "C",
    "title": "Question 9",
    "explanation": ""
  },
  {
    "content": "developer publishes a new version of a package with new features that do not break backward compatibility. The previous version number was 1.1.3.\nFollowing semantic versioning format, what should the new package version number be?",
    "options": ["A. 1.1.4", "B. 1.2.3", "C. 1.2.0", "D. 2.0.0"],
    "answer": "C",
    "title": "Question 10",
    "explanation": ""
  },
  {
    "content": "Refer to code below:\nLet first = 'who';\nLet second = 'what';\nTry{\nTry{\nThrow new error('Sad trombone');\n}catch (err){\nFirst ='Why';\n}finally {\nSecond ='when';\n} catch (err) {\nSecond ='Where';\n}\nWhat are the values for first and second once the code executes ?",
    "options": [
      "A. First is why and second is where",
      "B. First is who and second is where",
      "C. First is Who and second is When",
      "D. First is why and second is when"
    ],
    "answer": "D",
    "title": "Question 11",
    "explanation": ""
  },
  {
    "content": "developer has a web server running with Node.js. The command to start the web server is node server,js. The web server started having latency issues. Instead of a one second turn around for web requests, the developer now sees a five second turnaround, Which command can the web developer run to see what the module is doing during the latency period?",
    "options": [
      "A. DEBUG = http, https node server.js",
      "B. DEBUG =true node server.js",
      "C. NODE_DEBUG =http, https node server.js",
      "D. NODE_DEBUG =true node server.js"
    ],
    "answer": "B",
    "title": "Question 12",
    "explanation": ""
  },
  {
    "content": "A developer wrote a fizzbuzz function that when passed in a number, returns the following:\n'Fizz' if the number is divisible by 3.\n'Buzz' if the number is divisible by 5.\n'Fizzbuzz' if the number is divisible by both 3 and 5.\nEmpty string if the number is divisible by neither 3 or 5.\nWhich two test cases will properly test scenarios for the fizzbuzz function?\nChoose 2 answers",
    "options": [
      "A. let res = fizzbuzz(3);\n         console.assert ( res === ' buzz ' )",
      "B. let res = fizzbuzz(15);\n         console.assert ( res === ' fizzbuzz ' )",
      "C. let res = fizzbuzz(Infinity);\n         console.assert ( res === ' ' )",
      "D. let res = fizzbuzz(5);\n         console.assert ( res === ' ' );"
    ],
    "answer": "A,B,C",
    "title": "Question 13",
    "explanation": ""
  },
  {
    "content": "A developer has two ways to write a function:\nOption A:\nfunction Monster() {\nThis.growl = () => {\nConsole.log (\"Grr!\");\n}\n}\nOption B:\nfunction Monster() {};\nMonster.prototype.growl =() => {\nconsole.log(\"Grr!\");\n}\nAfter deciding on an option, the developer creates 1000 monster objects.\nHow many growl methods are created with Option A Option B?",
    "options": [
      "A. 1000 growl method is created for Option A. 1 growl methods are created for Option B.",
      "B. 1 growl method is created regardless of which option is used.",
      "C. 1 growl method is created for Option A. 1000 growl methods are created for Option B.",
      "D. 1000 growl methods are created regardless of which option is used."
    ],
    "answer": "A",
    "title": "Question 14",
    "explanation": ""
  },
  {
    "content": "Which javascript methods can be used to serialize an object into a string and deserialize a JSON string into an object, respectively?",
    "options": [
      "A. JSON.stringify and JSON.parse",
      "B. JSON.encode and JSON.decode",
      "C. JSON.serialize and JSON.deserialize",
      "D. JSON.parse and JSON.deserialize"
    ],
    "answer": "A",
    "title": "Question 15",
    "explanation": ""
  },
  {
    "content": "Given two expressions var1 and var2. What are two valid ways to return the logical AND of the two expressions and ensure it is data type Boolean ?\nChoose 2 answers:",
    "options": [
      "A. Boolean(var1 && var2)",
      "B. var1 && var2",
      "C. Boolean(var1) && Boolean(var2)",
      "D. var1.toBoolean() && var2toBoolean()"
    ],
    "answer": "A,C",
    "title": "Question 16",
    "explanation": ""
  },
  {
    "content": "A developer creates a generic function to log custom messages in the console. To do this, the function below is implemented.\n01 function logStatus(status){\n02 console./*Answer goes here*/{'Item status is: %s', status};\n03 }\nWhich three console logging methods allow the use of string substitution in line 02?",
    "options": ["A. Log", "B. Assert", "C. Info", "D. Message", "E. Error"],
    "answer": "B,C",
    "title": "Question 17",
    "explanation": ""
  },
  {
    "content": "A developer at Universal Containers creates a new landing page based on HTML, CSS, and JavaScript TO ensure that visitors have a good experience, a script named personaliseContext needs to be executed when the webpage is fully loaded (HTML content and all related files ), in order to do some custom initialization.\nWhich statement should be used to call personalizeWebsiteContent based on the above business requirement?",
    "options": [
      "A. Document.addEventListener('''DOMContextLoaded' , personalizeWebsiteContext);",
      "B. document.addEventListener(''onDOMContextLoaded', personalizeWebsiteContext);",
      "C. window.addEventListener('onload', personalizeWebsiteContext);",
      "D. window.addEventListener('load',personalizeWebsiteContext);"
    ],
    "answer": "D",
    "title": "Question 18",
    "explanation": ""
  },
  {
    "content": "Refer to the code below?\nLet searchString = ' look for this ';\nWhich two options remove the whitespace from the beginning of searchString?\nChoose 2 answers",
    "options": [
      "A. searchString.trimStart();",
      "B. searchString.replace(/*\\s\\s*/, '');",
      "C. trimStart(searchString);",
      "D. searchString.trimEnd();"
    ],
    "answer": "A,B",
    "title": "Question 19",
    "explanation": ""
  },
  {
    "content": "Which two console logs outputs NaN ?\nChoose 2 answers",
    "options": [
      "A. console.log(parseInt('two'));",
      "B. console.log(10/ Number('5'));",
      "C. console.log(10/0);",
      "D. console.log(10/ ''five);"
    ],
    "answer": "A,D",
    "title": "Question 20",
    "explanation": ""
  },
  {
    "content": "A developer creates an object where its properties should be immutable and prevent properties from being added or modified.\nWhich method should be used to execute this business requirement ?",
    "options": [
      "A. Object.const()",
      "B. Object.lock()",
      "C. Object.freeze()",
      "D. Object.eval()"
    ],
    "answer": "C",
    "title": "Question 21",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nLet textValue = '1984';\nWhich code assignment shows a correct way to convert this string to an integer?",
    "options": [
      "A. Let numberValue = Integer(textValue);",
      "B. let numberValue = Number(textValue);",
      "C. Let numberValue = textValue.toInteger();",
      "D. Let numberValue = (Number)textValue;"
    ],
    "answer": "B",
    "title": "Question 22",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nAsync funct on functionUnderTest(isOK) {\nIf (isOK) return 'OK' ;\nThrow new Error('not OK');\n)\nWhich assertion accuretely tests the above code?",
    "options": [
      "A. Console.assert (await functionUnderTest(true), 'OK')",
      "B. Console.assert (await functionUnderTest(true), ' not OK ') ",
      "C. Console.assert (await functionUnderTest(true), ' OK ')",
      "D. Console.assert (await functionUnderTest(true), ' not OK ')"
    ],
    "answer": "A",
    "title": "Question 23",
    "explanation": ""
  },
  {
    "content": "Considering type coercion, what does the following expression evaluate to?\nTrue + '13' + NaN",
    "options": ["A. ' true13 '", "B. ' true13NaN '", "C. 14", "D. ' 113Nan '"],
    "answer": "B",
    "title": "Question 24",
    "explanation": ""
  },
  {
    "content": "A developer creates a class that represents a blog post based on the requirement that a Post should have a body author and view count.\nThe Code shown Below:\nClass Post {\n// Insert code here\nThis.body =body\nThis.author = author;\nthis.viewCount = viewCount;\n}\n}\nWhich statement should be inserted in the placeholder on line 02 to allow for a variable to be set to a new instanceof a Post with the three attributes correctly populated?",
    "options": [
      "A. constructor() {",
      "B. constructor (body, author, viewCount) {",
      "C. Function Post (body, author, viewCount) {",
      "D. super (body, author, viewCount) {"
    ],
    "answer": "B",
    "title": "Question 25",
    "explanation": ""
  },
  {
    "content": "Refer to code below:\nfunction Person() {\nthis.firstName = 'John';\n}\nPerson.prototype ={\nJob: x => 'Developer'\n};\nconst myFather = new Person();\nconst result =myFather.firstName + ' ' + myFather.job();\nWhat is the value of the result after line 10 executes?",
    "options": [
      "A. Error: myFather.job is not a function",
      "B. John Developer",
      "C. John undefined",
      "D. Undefined Developer"
    ],
    "answer": "B",
    "title": "Question 26",
    "explanation": ""
  },
  {
    "content": "Refer to the following code:\nLet obj ={\nFoo: 1,\nBar: 2\n}\nLet output =[],\nfor(let something in obj{\noutput.push(something);\n}\nconsole.log(output);\nWhat is the output line 11?",
    "options": [
      "A. [\"foo\",\"bar\"]",
      "B. [\"bar\",\"foo\"]",
      "C. [1,2]",
      "D. [\"foo:1\",\"bar:2\"]"
    ],
    "answer": "A",
    "title": "Question 27",
    "explanation": ""
  },
  {
    "content": "A developer implements a function that adds a few values.\nFunction sum(num) {\nIf (num == undefined) {\nNum =0;\n}\nReturn function( num2, num3){\nIf (num3 === undefined) {\nNum3 =0 ;\n}\nReturn num + num2 + num3;\n}\n}\nWhich three options can the developer invoke for this function to get a return value of 10 ?\nChoose 3 answers",
    "options": [
      "A. Sum (5, 5) ()",
      "B. sum() (5, 5)",
      "C. sum(10) ()",
      "D. sum(5)(5)",
      "E. Sum () (20)"
    ],
    "answer": "B,D",
    "title": "Question 28",
    "explanation": ""
  },
  {
    "content": "Refer to code below:\nLet productSKU = '8675309' ;\nA developer has a requirement to generate SKU numbers that are always 19 characters lon, starting with 'sku', and padded with zeros.\nWhich statement assigns the values sku0000000008675309 ?",
    "options": [
      "A. productSKU = productSKU .padStart (16. '0').padstart(19, 'sku');",
      "B. productSKU = productSKU .padEnd (16. '0').padstart('sku');",
      "C. productSKU = productSKU .padStart (19. '0').padstart('sku');",
      "D. productSKU = productSKU .padEnd (16. '0').padstart(19, 'sku');"
    ],
    "answer": "A",
    "title": "Question 29",
    "explanation": ""
  },
  {
    "content": "Which function should a developer use to repeatedly execute code at a fixed interval ?",
    "options": [
      "A. setInteria",
      "B. setTimeout",
      "C. setPeriod",
      "D. setIntervel"
    ],
    "answer": "D",
    "title": "Question 30",
    "explanation": ""
  },
  {
    "content": "A developer is debugging a web server that uses Node.js The server hits a runtimeerror every third request to an important endpoint on the web server.\nThe developer added a break point to the start script, that is at index.js at he root of the server's source code. The developer wants to make use of chrome DevTools to debug.\nWhich command can be run to access DevTools and make sure the breakdown is hit ?",
    "options": [
      "A. Node --inspect-brk index.js",
      "B. node -i index.js",
      "C. Node inspect index.js",
      "D. Node --inspect index.js"
    ],
    "answer": "D",
    "title": "Question 31",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nconsole.log(''start);\nPromise.resolve('Success') .then(function(value){\nconsole.log('Success');\n});\nconsole.log('End');\nWhat is the output after the code executes successfully?",
    "options": [
      "A. End\n         Start\n         Success",
      "B. Success\n         Start\n         End",
      "C. Start\n         Success\n         End",
      "D. Start\n         End\n         Success"
    ],
    "answer": "D",
    "title": "Question 32",
    "explanation": ""
  },
  {
    "content": "A test has a dependency on database.query. During the test the dependency is replaced with an object called database with the method, query, that returns an array. The developer needs to verify how many times the method was called and the arguments used each time.\nWhich two test approaches describe the requirement?\nChoose 2 answers",
    "options": ["A. Integration", "B. Mocking", "C. Black box", "D. White box"],
    "answer": "B,D",
    "title": "Question 33",
    "explanation": ""
  },
  {
    "content": "Consider type coercion, what does the following expression evaluate to?\nTrue + 3 + '100' + null",
    "options": ["A. '3100null'", "B. 4100", "C. 104", "D. '4100null'"],
    "answer": "D",
    "title": "Question 34",
    "explanation": ""
  },
  {
    "content": "Given the JavaScript below:\n01 function filterDOM (searchString) {\n02 const parsedSearchString = searchString && searchString.toLowerCase() ;\n03 document.quesrySelectorAll(' .account' ) . forEach(account => (\n04 const accountName = account.innerHTML.toLOwerCase();\n05 account. Style.display = accountName.includes(parsedSearchString) ? /*Insert code*/;\n06 )};\n07 }\nWhich code should replace the placeholder comment on line 05 to hide accounts that do not match the search string?",
    "options": [
      "A. ' name ' : ' block '",
      "B. ' Block ' : ' none '",
      "C. ' visible ' : ' hidden '",
      "D. ' hidden ' : ' visible '"
    ],
    "answer": "B",
    "title": "Question 35",
    "explanation": ""
  },
  {
    "content": "Given the following code:\ndocument.body.addEventListener(' click ', (event) => {\nif (/* CODE REPLACEMENT HERE */) {\nconsole.log('button clicked!');\n)\n});\nWhich replacement for the conditional statement on line 02 allows a developer to correctly determine that a button on page is clicked?",
    "options": [
      "A. Event.clicked",
      "B. e.nodeTarget ==this",
      "C. event.target.nodeName == 'BUTTON'",
      "D. button.addEventListener('click')"
    ],
    "answer": "C",
    "title": "Question 36",
    "explanation": ""
  },
  {
    "content": "developer creates a new web server that uses Node.js. It imports a server library that uses events and callbacks for handling server functionality.\nThe server library is imported with require and is made available to the code by a variable named server. The developer wants to log any issues that the server has while booting up.\nGiven the code and the information the developer has, which code logs an error at boost with an event?",
    "options": [
      "A. Try{\n         server.start();\n         } catch(error) {\n         console.log('ERROR', error);\n         }",
      "B. Server.error ((server) => {\n         console.log('ERROR', error);\n         });",
      "C. Server.on ('error', (error) => {\n         console.log('ERROR', error);\n         });",
      "D. Server.catch ((server) => {\n         console.log('ERROR', error);\n         });"
    ],
    "answer": "C",
    "title": "Question 37",
    "explanation": ""
  },
  {
    "content": "A developer has the function, shown below, that is called when a page loads.\nfunction onload() {\nconsole.log(\"Page has loaded!\");\n}\nWhere can the developer see the log statement after loading the page in the browser?",
    "options": [
      "A. Browser javaScript console",
      "B. Terminal running the web server.",
      "C. On the webpage.",
      "D. Browser performance toots"
    ],
    "answer": "A",
    "title": "Question 38",
    "explanation": ""
  },
  {
    "content": "What are two unique features of functions defined with a fat arrow as compared to normal function definition?\nChoose 2 answers",
    "options": [
      "A. The function receives an argument that is always in scope, called parentThis, which is the enclosing lexical scope.",
      "B. The function uses the this from the enclosing scope.",
      "C. The function generated its own this making it useful for separating the function's scope from its enclosing scope.",
      "D. If the function has a single expression in the function body, the expression will be evaluated and implicit returned."
    ],
    "answer": "C,D",
    "title": "Question 39",
    "explanation": ""
  },
  {
    "content": "Given the following code:\nCounter = 0;\nconst logCounter = () => {\nconsole.log(counter);\n);\nlogCounter();\nsetTimeout(logCOunter, 1100);\nsetInterval(() => {\nCounter++\nlogCounter();\n}, 1000);\nWhat is logged by the first four log statements?",
    "options": ["A. 0 1 2 3", "B. 0 1 1 2", "C. 0 1 2 2", "D. 0 0 1 2"],
    "answer": "B",
    "title": "Question 40",
    "explanation": ""
  },
  {
    "content": "Refer to the code:\nGiven the code above, which three properties are set pet1?\nChoose 3 answers:",
    "options": ["A. Owner", "B. Type", "C. canTalk", "D. Size", "E. Name"],
    "answer": "B,C,D",
    "title": "Question 41",
    "explanation": ""
  },
  {
    "content": "Given code below:\nsetTimeout (() => (\nconsole.log(1);\n). 0);\nconsole.log(2);\nNew Promise ((resolve, reject )) = > (\nsetTimeout(() => (\nreject(console.log(3));\n). 1000);\n)).catch(() => (\nconsole.log(4);\n));\nconsole.log(5);\nWhat is logged to the console?",
    "options": ["A. 1 2 5 3 4", "B. 2 5 1 3 4", "C. 2 1 4 3 5", "D. 1 2 4 3 5"],
    "answer": "B",
    "title": "Question 42",
    "explanation": ""
  },
  {
    "content": "Refer to the following code that performs a basic mathematical operation on a provided input:\nfunction calculate(num) {\nReturn (num +10) / 3;\n}\nHow should line 02 be written to ensure that x evaluates to 6 in the line below?\nLet x = calculate (8);",
    "options": [
      "A. Return Number(num + 10) / 3;",
      "B. Return Integer(num +10) /3;",
      "C. Return (Number (num +10 ) / 3;",
      "D. Return Number((num +10) /3 );"
    ],
    "answer": "C",
    "title": "Question 43",
    "explanation": ""
  },
  {
    "content": "Universal Container(UC) just launched a new landing page, but users complain that the website is slow. A developer found some functions that cause this problem. To verify this, the developer decides to do everything and log the time each of these three suspicious functions consumes.\nconsole.time('Performance');\nmaybeAHeavyFunction();\nthisCouldTakeTooLong();\norMaybeThisOne();\nconsole.endTime('Performance');\nWhich function can the developer use to obtain the time spent by every one of the three functions?",
    "options": [
      "A. console.timeLog()",
      "B. console.getTime()",
      "C. console.timeStamp()",
      "D. console.trace()"
    ],
    "answer": "A",
    "title": "Question 44",
    "explanation": ""
  },
  {
    "content": "Refer to the following object:\nconst cat ={\nfirstName: 'Fancy',\nlastName: ' Whiskers',\nGet fullName() {\nreturn this.firstName + ' ' + this.lastName;\n}\n};\nHow can a developer access the fullName property for cat?",
    "options": [
      "A. cat.get.fullName",
      "B. cat.fullName()",
      "C. cat.fullName",
      "D. cat.function.fullName()"
    ],
    "answer": "C",
    "title": "Question 45",
    "explanation": ""
  },
  {
    "content": "A developer is leading the creation of a new browser application that will serve a single page application. The team wants to use a new web framework Minimalsit.js. The Lead developer wants to advocate for a more seasoned web framework that already has a community around it.\nWhich two frameworks should the lead developer advocate for?\nChoose 2 answers",
    "options": ["A. Express", "B. Angular", "C. Koa", "D. Vue"],
    "answer": "A,B",
    "title": "Question 46",
    "explanation": ""
  },
  {
    "content": "A developer has the following array of student test grades:\nLet arr = [ 7, 8, 5, 8, 9 ];\nThe Teacher wants to double each score and then see an array of the students who scored more than 15 points.\nHow should the developer implement the request?",
    "options": [
      "A. Let arr1 = arr.mapBy (( num) => ( return num *2 )) .filterBy (( val ) => return val > 15 )) ;",
      "B. Let arr1 = arr.filter(( val) => ( return val > 15 )) .map (( num) => ( return num *2 ))",
      "C. Let arr1 = arr.map((num) => num*2). Filter (( val) => val > 15);",
      "D. Let arr1 = arr.map((num) => ( num *2)).filterBy((val) => ( val >15 ));"
    ],
    "answer": "C",
    "title": "Question 47",
    "explanation": ""
  },
  {
    "content": "Given the code below:\nconst copy = JSON.stringify([ new String(' false '), new Bollean( false ), undefined ]); What is the value of copy?",
    "options": [
      "A. -- [ \\\"false\\\" , { } ]--",
      "B. -- [ false, { } ]--",
      "C. -- [ \\\"false\\\" ,false, null ]--",
      "D. -- [ \\\"false\\\" , false, undefined ]--"
    ],
    "answer": "C",
    "title": "Question 48",
    "explanation": ""
  },
  {
    "content": "At Universal Containers, every team has its own way of copying JavaScript objects. The code Snippet shows an implementation from one team:\nFunction Person() {\nthis.firstName = \"John\";\nthis.lastName = 'Doe';\nThis.name =() => (\nconsole.log('Hello $(this.firstName) $(this.firstName)');\n)}\nConst john = new Person ();\nConst dan = JSON.parse(JSON.stringify(john));\ndan.firstName ='Dan';\ndan.name();\nWhat is the Output of the code execution?",
    "options": [
      "A. Hello John DOe",
      "B. TypeError: dan.name is not a function",
      "C. TypeError: Assignment to constant variable.",
      "D. Hello Dan Doe"
    ],
    "answer": "B",
    "title": "Question 49",
    "explanation": ""
  },
  {
    "content": "A developer is asked to fix some bugs reported by users. To do that, the developer adds a breakpoint for debugging.\nFunction Car (maxSpeed, color){\nThis.maxspeed =masSpeed;\nThis.color = color;\nLet carSpeed = document.getElementById(' CarSpeed');\nDebugger;\nLet fourWheels =new Car (carSpeed.value, 'red');\nWhen the code execution stops at the breakpoint on line 06, which two types of information are available in the browser console ?\nChoose 2 answers:",
    "options": [
      "A. The values of the carSpeed and fourWheels variables",
      "B. The style, event listeners and other attributes applied to the carSpeed DOM element",
      "C. The information stored in the window.localStorage property",
      "D. A variable displaying the number of instances created for the Car Object."
    ],
    "answer": "B,C",
    "title": "Question 50",
    "explanation": ""
  }
]
