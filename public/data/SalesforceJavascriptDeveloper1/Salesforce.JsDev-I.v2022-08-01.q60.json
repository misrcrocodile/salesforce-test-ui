[
  {
    "content": "Which two code snippets show working examples of a recursive function?\nChoose 2 answers",
    "options": [
      "A. Let countingDown = function(startNumber) {\n         If ( startNumber >0) {\n         console.log(startNumber) ;\n         return countingDown(startNUmber);\n         } else {\n         return startNumber;\n         }};",
      "B. Const factorial =numVar => {\n         If (numVar < 0) return;\n         If ( numVar === 0 ) return 1;\n         return numVar * factorial ( numVar - 1 );\n         };",
      "C. Function factorial ( numVar ) {\n         If (numVar < 0) return;\n         If ( numVar === 0 ) return 1;\n         return numVar -1;",
      "D. Const sumToTen = numVar => {\n         If (numVar < 0)\n         Return;\n         return sumToTen(numVar + 1)};"
    ],
    "answer": "A,B",
    "title": "Question 1",
    "explanation": ""
  },
  {
    "content": "A developer wants to use a try...catch statement to catch any error that countSheep () may throw and pass it to a handleError () function.\nWhat is the correct implementation of the try...catch?\nA)\nB)\nC)\nD)",
    "options": ["A. Option ", "B. Option ", "C. Option", "D. Option "],
    "answer": "C",
    "title": "Question 2",
    "explanation": ""
  },
  {
    "content": "Given two expressions var1 and var2. What are two valid ways to return the logical AND\nof the two expressions and ensure it is data type Boolean ?\nChoose 2 answers:",
    "options": ["A. var1 && var2", "B. Boolean(var1) && Boolean(var2)", "C. Boolean(var1 && var2)", "D. var1.toBoolean() && var2toBoolean()"],
    "answer": "B,C",
    "title": "Question 3",
    "explanation": ""
  },
  {
    "content": "Refer to following code:\nclass Vehicle {\nconstructor(plate) {\nThis.plate =plate;\n}\n}\nClass Truck extends Vehicle {\nconstructor(plate, weight) {\n//Missing code\nThis.weight = weight;\n}\ndisplayWeight() {\nconsole.log('The truck ${this.plate} has a weight of ${this.weight} lb.');}}\nLet myTruck = new Truck('123AB', 5000);\nmyTruck.displayWeight();\nWhich statement should be added to line 09 for the code to display 'The truck 123AB has a\nweight of 5000lb.'?",
    "options": ["A. Vehicle.plate = plate;", "B. super(plate);", "C. Super.plate =plate;", "D. This.plate =plate;"],
    "answer": "B",
    "title": "Question 4",
    "explanation": ""
  },
  {
    "content": "Refer to code below:\nLet first = 'who';\nLet second = 'what';\nTry{\nTry{\nThrow new error('Sad trombone');\n}catch (err){\nFirst ='Why';\n}finally {\nSecond ='when';\n} catch (err) {\nSecond ='Where';\n}\nWhat are the values for first and second once the code executes ?",
    "options": [
      "A. First is who and second is where",
      "B. First is why and second is where",
      "C. First is Who and second is When",
      "D. First is why and second is when"
    ],
    "answer": "D",
    "title": "Question 5",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nfor(let number =2 ; number <= 5 ; number += 1 ) {\n// insert code statement here\n}\nThe developer needs to insert a code statement in the location shown. The code\nstatement has these requirements:\n1. Does require an import\n2. Logs an error when the boolean statement evaluates to false\n3. Works in both the browser and Node.js\nWhich meet the requirements?",
    "options": [
      "A. console.error(number % 2 === 0);",
      "B. console.debug(number % 2 === 0);",
      "C. assert (number % 2 === 0);",
      "D. console.assert(number % 2 === 0);"
    ],
    "answer": "A",
    "title": "Question 6",
    "explanation": ""
  },
  {
    "content": "Refer to code below:\nconsole.log(0);\nsetTimeout(() => (\nconsole.log(1);\n});\nconsole.log(2);\nsetTimeout(() => {\nconsole.log(3);\n), 0);\nconsole.log(4);\nIn which sequence will the numbers be logged?",
    "options": ["A. 02431", "B. 13024", "C. 02413", "D. 01234"],
    "answer": "C",
    "title": "Question 7",
    "explanation": ""
  },
  {
    "content": "Which statement accurately describes an aspect of promises?",
    "options": [
      "A. Arguments for the callback function passed to .then() are optional.",
      "B. In a.then() function, returning results is not necessary since callbacks will catch the result of a previous promise.",
      "C. .then() manipulates and returns the original promise.",
      "D. .then() cannot be added after a catch."
    ],
    "answer": "A",
    "title": "Question 8",
    "explanation": ""
  },
  {
    "content": "myArraym can have one level, two levels, or more levels.\nWhich statement flattens myArray when it can be arbitrarily nested?",
    "options": [
      "A. myArray. join (\",\"). split (\",\");",
      "B. [ ] .concat {. . .myArray) ;",
      "C. myArray.flat(Infinity);",
      "D. myArray. reduce ((prev, curr) => prev.concat(curr) [ ]);"
    ],
    "answer": "D",
    "title": "Question 9",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nConst resolveAfterMilliseconds = (ms) => Promise.resolve (\nsetTimeout (( => console.log(ms), ms ));\nConst aPromise = await resolveAfterMilliseconds(500);\nConst bPromise = await resolveAfterMilliseconds(500);\nAwait aPromise, wait bPromise;\nWhat is the result of running line 05?",
    "options": [
      "A. aPromise and bPromise run in parallel.",
      "B. Only aPromise runs.",
      "C. aPromise and bPromise run sequentially.",
      "D. Neither aPromise or bPromise runs."
    ],
    "answer": "D",
    "title": "Question 10",
    "explanation": ""
  },
  {
    "content": "A developer creates a class that represents a blog post based on the requirement that a\nPost should have a body author and view count.\nThe Code shown Below:\nClass Post {\n// Insert code here\nThis.body =body\nThis.author = author;\nthis.viewCount = viewCount;\n}\n}\nWhich statement should be inserted in the placeholder on line 02 to allow for a variable to be set\nto a new instanceof a Post with the three attributes correctly populated?",
    "options": [
      "A. super (body, author, viewCount) {",
      "B. constructor() {",
      "C. constructor (body, author, viewCount) {",
      "D. Function Post (body, author, viewCount) {"
    ],
    "answer": "C",
    "title": "Question 11",
    "explanation": ""
  },
  {
    "content": "A developer creates a generic function to log custom messages in the console. To do this,\nthe function below is implemented.\n01 function logStatus(status){\n02 console./*Answer goes here*/{'Item status is: %s', status};\n03 }\nWhich three console logging methods allow the use of string substitution in line 02?",
    "options": ["A. Message", "B. Assert", "C. Info", "D. Log", "E. Error"],
    "answer": "B,C,D",
    "title": "Question 12",
    "explanation": ""
  },
  {
    "content": "A developer creates a simple webpage with an input field. When a user enters text in\nthe input field and clicks the button, the actual value of the field must be displayed in the\nconsole.\nHere is the HTML file content:\n<input type =\" text\" value=\"Hello\" name =\"input\">\n<button type =\"button\" >Display </button>\nThe developer wrote the javascript code below:\nConst button = document.querySelector('button');\nbutton.addEvenListener('click', () => (\nConst input = document.querySelector('input');\nconsole.log(input.getAttribute('value'));\nWhen the user clicks the button, the output is always \"Hello\".\nWhat needs to be done make this code work as expected?",
    "options": [
      "A. Replace line 02 with button.addCallback(\"click\", function() {",
      "B. Replace line 02 with button.addEventListener(\"onclick\", function() {",
      "C. Replace line 04 with console.log(input .value);",
      "D. Replace line 03 with const input = document.getElementByName('input');"
    ],
    "answer": "C",
    "title": "Question 13",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nFunction Person(firstName, lastName, eyecolor) {\nthis.firstName =firstName;\nthis.lastName = lastName;\nthis.eyeColor = eyeColor;\n}\nPerson.job = 'Developer';\nconst myFather = new Person('John', 'Doe');\nconsole.log(myFather.job);\nWhat is the output after the code executes?",
    "options": [
      "A. ReferenceError: eyeColor is not defined",
      "B. Developer",
      "C. Undefined",
      "D. ReferenceError: assignment to undeclared variable \"Person\""
    ],
    "answer": "C",
    "title": "Question 14",
    "explanation": ""
  },
  {
    "content": "Refer to the following object:\nconst cat ={\nfirstName: 'Fancy',\nlastName: ' Whiskers',\nGet fullName() {\nreturn this.firstName + ' ' + this.lastName;\n}\n};\nHow can a developer access the fullName property for cat?",
    "options": ["A. cat.function.fullName()", "B. cat.fullName", "C. cat.fullName()", "D. cat.get.fullName"],
    "answer": "B",
    "title": "Question 15",
    "explanation": ""
  },
  {
    "content": "Given the following code:\nCounter = 0;\nconst logCounter = () => {\nconsole.log(counter);\n);\nlogCounter();\nsetTimeout(logCOunter, 1100);\nsetInterval(() => {\nCounter++\nlogCounter();\n}, 1000);\nWhat is logged by the first four log statements?",
    "options": ["A. 0 1 1 2", "B. 0 1 2 2", "C. 0 1 2 3", "D. 0 0 1 2"],
    "answer": "A",
    "title": "Question 16",
    "explanation": ""
  },
  {
    "content": "Given the code below:\nWhich method can be used to provide a visual representation of the list of users and to allow sorting by the name or email attribute?",
    "options": [
      "A. console.group(usersList) ;",
      "B. console.table(usersList) ;",
      "C. console.info(usersList) ;",
      "D. console.groupCol lapsed (usersList) ;"
    ],
    "answer": "A",
    "title": "Question 17",
    "explanation": ""
  },
  {
    "content": "A developer at Universal Containers creates a new landing page based on HTML, CSS, and\nJavaScript TO ensure that visitors have a good experience, a script named personaliseContext\nneeds to be executed when the webpage is fully loaded (HTML content and all related files ), in\norder to do some custom initialization.\nWhich statement should be used to call personalizeWebsiteContent based on the above\nbusiness requirement?",
    "options": [
      "A. window.addEventListener('load',personalizeWebsiteContext);",
      "B. window.addEventListener('onload', personalizeWebsiteContext);",
      "C. Document.addEventListener('''DOMContextLoaded' , personalizeWebsiteContext);",
      "D. document.addEventListener(''onDOMContextLoaded', personalizeWebsiteContext);"
    ],
    "answer": "A",
    "title": "Question 18",
    "explanation": ""
  },
  {
    "content": "A developer has two ways to write a function:\nOption A:\nfunction Monster() {\nThis.growl = () => {\nConsole.log (\"Grr!\");\n}\n}\nOption B:\nfunction Monster() {};\nMonster.prototype.growl =() => {\nconsole.log(\"Grr!\");\n}\nAfter deciding on an option, the developer creates 1000 monster objects.\nHow many growl methods are created with Option A Option B?",
    "options": [
      "A. 1 growl method is created for Option A. 1000 growl methods are created for Option B.",
      "B. 1 growl method is created regardless of which option is used.",
      "C. 1000 growl methods are created regardless of which option is used.",
      "D. 1000 growl method is created for Option A. 1 growl methods are created for Option B."
    ],
    "answer": "D",
    "title": "Question 19",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nWhat is the value of result when the code executes?",
    "options": ["A. 5-10", "B. 10-5", "C. 5-5", "D. 10-10"],
    "answer": "D",
    "title": "Question 20",
    "explanation": ""
  },
  {
    "content": "Refer to the code snippet below:\nLet array = [1, 2, 3, 4, 4, 5, 4, 4];\nFor (let i =0; i < array.length; i++){\nif (array[i] === 4) {\narray.splice(i, 1);\n}\n}\nWhat is the value of the array after the code executes?",
    "options": ["A. [1, 2, 3, 4, 5, 4]", "B. [1, 2, 3, 4, 5, 4, 4]", "C. [1, 2, 3, 4, 4, 5, 4]", "D. [1, 2, 3, 5]"],
    "answer": "A",
    "title": "Question 21",
    "explanation": ""
  },
  {
    "content": "A developer has a web server running with Node.js. The command to start the web server is node server.js. The web server started having\nlatency issues. Instead of a one second turnaround for web requests, the developer now sees a five second turnaround.\nWhich command can the web developer run to see what the module is doing during the latency period?",
    "options": [
      "A. DEBUG=true node server.js",
      "B. NODE_DEBUG=http,https node server.js",
      "C. NODE_DEBUG=true node server.js",
      "D. DEBUG=http, https node server.js"
    ],
    "answer": "A",
    "title": "Question 22",
    "explanation": ""
  },
  {
    "content": "A developer is setting up a Node,js server and is creating a script at the root of the source code, index,js, that will start the server when executed. The developer declares a variable that needs the folder location that the code executes from.\nWhich global variable can be used in the script?",
    "options": ["A. _dirname", "B. window.location", "C. _filename", "D. this.path"],
    "answer": "C",
    "title": "Question 23",
    "explanation": ""
  },
  {
    "content": "Universal Containers (UC) notices that its application that allows users to search for\naccounts makes a network request each time a key is pressed. This results in too many\nrequests for the server to handle.\n● Address this problem, UC decides to implement a debounce function on string change\nhandler.\nWhat are three key steps to implement this debounce function?\nChoose 3 answers:",
    "options": [
      "A. Ensure that the network request has the property debounce set to true.",
      "B. When the search string changes, enqueue the request within a setTimeout.",
      "C. If there is an existing setTimeout and the search string change, allow the existing\n         setTimeout to finish, and do not enqueue a new setTimeout.",
      "D. If there is an existing setTimeout and the search string changes, cancel the existing\n         setTimeout using the persisted timerId and replace it with a new setTimeout.",
      "E. Store the timeId of the setTimeout last enqueued by the search string change handle."
    ],
    "answer": "A,B,C",
    "title": "Question 24",
    "explanation": ""
  },
  {
    "content": "Refer to HTML below:\n<p> The current status of an Order: <span id =\"status\"> In Progress </span> </p>.\nWhich JavaScript statement changes the text 'In Progress' to 'Completed' ?",
    "options": [
      "A. document.getElementById(\"status\").Value = 'Completed' ;",
      "B. document.getElementById(\"status\").innerHTML = 'Completed' ;",
      "C. document.getElementById(\".status\").innerHTML = 'Completed' ;",
      "D. document.getElementById(\"#status\").innerHTML = 'Completed' ;"
    ],
    "answer": "B",
    "title": "Question 25",
    "explanation": ""
  },
  {
    "content": "Teams at Universal Containers (UC) work on multiple JavaScript projects at the same time.\nUC is thinking about reusability and how each team can benefit from the work of others.\nGoing open-source or public is not an option at this time.\nWhich option is available to UC with npm?",
    "options": [
      "A. Private registries are not supported by npm, but packages can be installed via URL.",
      "B. Private packages are not supported, but they can use another package manager like\n         yarn.",
      "C. Private packages can be scored, and scopes can be associated to a private\n         registries.",
      "D. Private registries are not supported by npm, but packages can be installed via git."
    ],
    "answer": "C",
    "title": "Question 26",
    "explanation": ""
  },
  {
    "content": "Consider type coercion, what does the following expression evaluate to?\nTrue + 3 + '100' + null",
    "options": ["A. '3100null'", "B. 4100", "C. '4100null'", "D. 104"],
    "answer": "C",
    "title": "Question 27",
    "explanation": ""
  },
  {
    "content": "Which function should a developer use to repeatedly execute code at a fixed interval ?",
    "options": ["A. setInteria", "B. setPeriod", "C. setIntervel", "D. setTimeout"],
    "answer": "C",
    "title": "Question 28",
    "explanation": ""
  },
  {
    "content": "Refer to the HTML below:\n<div id=\"main\">\n<ul>\n<li>Leo</li>\n<li>Tony</li>\n<li>Tiger</li>\n</ul>\n</div>\nWhich JavaScript statement results in changing \" Tony\" to \"Mr. T.\"?",
    "options": [
      "A. document.querySelector('$main li:second-child').innerHTML = ' Mr. T. ';",
      "B. document.querySelector('$main li:nth-child(2)'),innerHTML = ' Mr. T. ';",
      "C. document.querySelector('$main li.Tony').innerHTML = ' Mr. T. ';",
      "D. document.querySelectorAll('$main $TONY').innerHTML = ' Mr. T. ';"
    ],
    "answer": "B",
    "title": "Question 29",
    "explanation": ""
  },
  {
    "content": "Which two console logs output NaN?\nChoose 2 answers | |",
    "options": [
      "A. console.log(parseInt ' (\"two')) ;",
      "B. console.log(10 / 0);",
      "C. console.loeg(10 / 'five');",
      "D. console.log(10 / Number('5) ) ;"
    ],
    "answer": "A,C",
    "title": "Question 30",
    "explanation": ""
  },
  {
    "content": "Which three actions can be using the JavaScript browser console?\nChoose 3 answers:",
    "options": [
      "A. View and change DOM the page.",
      "B. Run code that is not related to page.",
      "C. Display a report showing the performance of a page.",
      "D. View and change security cookies.",
      "E. view , change, and debug the JavaScript code of the page."
    ],
    "answer": "A,B,E",
    "title": "Question 31",
    "explanation": ""
  },
  {
    "content": "Refer to the following code that performs a basic mathematical operation on a provided\ninput:\nfunction calculate(num) {\nReturn (num +10) / 3;\n}\nHow should line 02 be written to ensure that x evaluates to 6 in the line below?\nLet x = calculate (8);",
    "options": [
      "A. Return Integer(num +10) /3;",
      "B. Return (Number (num +10 ) / 3;",
      "C. Return Number((num +10) /3 );",
      "D. Return Number(num + 10) / 3;"
    ],
    "answer": "B",
    "title": "Question 32",
    "explanation": ""
  },
  {
    "content": "Given the following code:\nis the output of line 02?",
    "options": ["A. ''undefined''", "B. ''object''", "C. ''null'''", "D. ''x''"],
    "answer": "B",
    "title": "Question 33",
    "explanation": ""
  },
  {
    "content": "Which option is true about the strict mode in imported modules?",
    "options": [
      "A. Imported modules are in strict mode whether you declare them as such or not.",
      "B. Add the statement use non-strict, before any other statements in the module to enable\n         not-strict mode.",
      "C. You can only reference notStrict() functions from the imported module.",
      "D. Add the statement use strict =false; before any other statements in the module to enable\n         not- strict mode."
    ],
    "answer": "C",
    "title": "Question 34",
    "explanation": ""
  },
  {
    "content": "A class was written to represent items for purchase in an online store, and a second class\nRepresenting items that are on sale at a discounted price. THe constructor sets the name to the\nfirst value passed in. The pseudocode is below:\nClass Item {\nconstructor(name, price) {\n... // Constructor Implementation\n}\n}\nClass SaleItem extends Item {\nconstructor (name, price, discount) {\n...//Constructor Implementation\n}\n}\nThere is a new requirement for a developer to implement a description method that will return a\nbrief description for Item and SaleItem.\nLet regItem =new Item('Scarf', 55);\nLet saleItem = new SaleItem('Shirt' 80, -1);\nItem.prototype.description = function () { return 'This is a ' + this.name;\nconsole.log(regItem.description());\nconsole.log(saleItem.description());\nSaleItem.prototype.description = function () { return 'This is a discounted ' +\nthis.name; }\nconsole.log(regItem.description());\nconsole.log(saleItem.description());\nWhat is the output when executing the code above ?",
    "options": [
      "A. This is a Scarf\n         Uncaught TypeError: saleItem.description is not a function\n         This is aScarf\n         This is a discounted Shirt",
      "B. This is a Scarf\n         This is a Shirt\n         This is a discounted Scarf\n         This is a discounted Shirt",
      "C. This is aScarf\n         Uncaught TypeError: saleItem.description is not a function\n         This is a Shirt\n         This is a did counted Shirt",
      "D. This is a Scarf\n         This is a Shirt\n         This is a Scarf\n         This is a discounted Shirt"
    ],
    "answer": "D",
    "title": "Question 35",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nWhich value can a developer expect when referencing country,capital,cityString?",
    "options": ["A. 'London'", "B. An error", "C. 'NaN'", "D. undefined"],
    "answer": "C",
    "title": "Question 36",
    "explanation": ""
  },
  {
    "content": "A developer wrote a fizzbuzz function that when passed in a number, returns the\nfollowing:\n● 'Fizz' if the number is divisible by 3.\n● 'Buzz' if the number is divisible by 5.\n● 'Fizzbuzz' if the number is divisible by both 3 and 5.\n● Empty string if the number is divisible by neither 3 or 5.\nWhich two test cases will properly test scenarios for the fizzbuzz function?\nChoose 2 answers",
    "options": [
      "A. let res = fizzbuzz(15);\n         console.assert ( res === ' fizzbuzz ' )",
      "B. let res = fizzbuzz(5);\n         console.assert ( res === ' ' );",
      "C. let res = fizzbuzz(Infinity);\n         console.assert ( res === ' ' )",
      "D. let res = fizzbuzz(3);\n         console.assert ( res === ' buzz ' )"
    ],
    "answer": "A,C,D",
    "title": "Question 37",
    "explanation": ""
  },
  {
    "content": "Given the following code:\nLet x =('15' + 10)*2;\nWhat is the value of a?",
    "options": ["A. 50", "B. 35", "C. 3020", "D. 1520"],
    "answer": "C",
    "title": "Question 38",
    "explanation": ""
  },
  {
    "content": "Universal Container(UC) just launched a new landing page, but users complain that the\nwebsite is slow. A developer found some functions that cause this problem. To verify this, the\ndeveloper decides to do everything and log the time each of these three suspicious functions\nconsumes.\nconsole.time('Performance');\nmaybeAHeavyFunction();\nthisCouldTakeTooLong();\norMaybeThisOne();\nconsole.endTime('Performance');\nWhich function can the developer use to obtain the time spent by every one of the three\nfunctions?",
    "options": ["A. console.getTime()", "B. console.trace()", "C. console.timeStamp()", "D. console.timeLog()"],
    "answer": "D",
    "title": "Question 39",
    "explanation": ""
  },
  {
    "content": "developer removes the HTML class attribute from the checkout button, so now it is\nsimply:\n<button>Checkout</button>.\nThere is a test to verify the existence of the checkout button, however it looks for a button with\nclass= \"blue\". The test fails because no such button is found.\nWhich type of test category describes this test?",
    "options": ["A. False negative", "B. False positive", "C. True positive", "D. True negative"],
    "answer": "A",
    "title": "Question 40",
    "explanation": ""
  },
  {
    "content": "In the browser, the window object is often used to assign variables that require the broadest scope in an application Node.js application does not have access to the window object by default.\nWhich two methods are used to address this ?\nChoose 2 answers",
    "options": [
      "A. Assign variables to module.exports and require them as needed.",
      "B. Create a new window object in the root file.",
      "C. Assign variables to the global object.",
      "D. Use the document object instead of the window object."
    ],
    "answer": "C",
    "title": "Question 41",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nconsole.log(''start);\nPromise.resolve('Success') .then(function(value){\nconsole.log('Success');\n});\nconsole.log('End');\nWhat is the output after the code executes successfully?",
    "options": [
      "A. Start\n         Success\n         End",
      "B. Start\n         End\n         Success",
      "C. End\n         Start\n         Success",
      "D. Success\n         Start\n         End"
    ],
    "answer": "B",
    "title": "Question 42",
    "explanation": ""
  },
  {
    "content": "A developer uses a parsed JSON string to work with user information as in the block below:\n01 const userInformation ={\n02 \" id \" : \"user-01\",\n03 \"email\" : \"[email protected]\",\n04 \"age\" : 25\nWhich two options access the email attribute in the object?\nChoose 2 answers",
    "options": ["A. userInformation.get(\"email\")", "B. userInformation(email)", "C. userInformation.email", "D. userInformation(\"email\")"],
    "answer": "C,D",
    "title": "Question 43",
    "explanation": ""
  },
  {
    "content": "Refer of the string below:\nConst str = 'sa;esforce'=;\nWhich two statement result in the word 'Sale'?\nChoose 2 answers",
    "options": ["A. str, substr(1,5) ;", "B. str, substr(0,5) ;", "C. str, substring(1,5) ;", "D. str, substring (0,5) ;"],
    "answer": "B,D",
    "title": "Question 44",
    "explanation": ""
  },
  {
    "content": "Universal Containers recently launched its new landing page to host a crowd-funding\ncampaign. The page uses an external library to display some third-party ads. Once the page is\nfully loaded, it creates more than 50 new HTML items placed randomly inside the DOM, like the\none in the code below:\nAll the elements includes the same ad-library-item class, They are hidden by default, and they are randomly displayed while the user navigates through the page.",
    "options": [
      "A. Use the browser to execute a script that removes all the element containing the class ad-library-item.",
      "B. Use the browser console to execute a script that prevents the load event to be fired.",
      "C. Use the DOM inspector to remove all the elements containing the class ad-library-item.",
      "D. Use the DOM inspector to prevent the load event to be fired."
    ],
    "answer": "A",
    "title": "Question 45",
    "explanation": ""
  },
  {
    "content": "Refer to the code:\nGiven the code above, which three properties are set pet1?\nChoose 3 answers:",
    "options": ["A. Owner", "B. Size", "C. Type", "D. Name", "E. canTalk"],
    "answer": "B,C,E",
    "title": "Question 46",
    "explanation": ""
  },
  {
    "content": "A developer has the following array of student test grades:\nLet arr = [ 7, 8, 5, 8, 9 ];\nThe Teacher wants to double each score and then see an array of the students\nwho scored more than 15 points.\nHow should the developer implement the request?",
    "options": [
      "A. Let arr1 = arr.map((num) => ( num *2)).filterBy((val) => ( val >15 ));",
      "B. Let arr1 = arr.mapBy (( num) => ( return num *2 )) .filterBy (( val ) => return val > 15 )) ;",
      "C. Let arr1 = arr.map((num) => num*2). Filter (( val) => val > 15);",
      "D. Let arr1 = arr.filter(( val) => ( return val > 15 )) .map (( num) => ( return num *2 ))"
    ],
    "answer": "C",
    "title": "Question 47",
    "explanation": ""
  },
  {
    "content": "Given the code below:\nconst copy = JSON.stringify([ new String(' false '), new Bollean( false ), undefined ]);\nWhat is the value of copy?",
    "options": [
      "A. -- [ \\\"false\\\" ,false, null ]--",
      "B. -- [ false, { } ]--",
      "C. -- [ \\\"false\\\" , false, undefined ]--",
      "D. -- [ \\\"false\\\" , { } ]--"
    ],
    "answer": "A",
    "title": "Question 48",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\n01 const server = require('server');\n02 /* Insert code here */\nA developer imports a library that creates a web server. The imported library uses events and\ncallbacks to start the servers\nWhich code should be inserted at the line 03 to set up an event and start the web server ?",
    "options": [
      "A. server()",
      "B. server.on(' connect ' , ( port) => {\n         console.log('Listening on ' , port) ;})",
      "C. console.log( 'Listening on ', port) ;",
      "D. serve(( port) => (",
      "E. Server.start ();"
    ],
    "answer": "B",
    "title": "Question 49",
    "explanation": ""
  },
  {
    "content": "A developer wants to leverage a module to print a price in pretty format, and has imported a method as shown below:\nImport printPrice from '/path/PricePrettyPrint.js';\nBased on the code, what must be true about the printPrice function of the PricePrettyPrint module for this import to work ?",
    "options": [
      "A. printPrice must be an all export",
      "B. printPrice must be a multi exportc",
      "C. printPrice must be be a named export",
      "D. printPrice must be the default export"
    ],
    "answer": "D",
    "title": "Question 50",
    "explanation": ""
  },
  {
    "content": "Given the code below:\nconst delay = sync delay => {\nReturn new Promise((resolve, reject) => {\nsetTimeout (resolve, delay);});};\nconst callDelay =async () =>{\nconst yup =await delay(1000);\nconsole.log(1);\nWhat is logged to the console?",
    "options": ["A. 2 1 3", "B. 1 3 2", "C. 1 2 3", "D. 2 3 1"],
    "answer": "D",
    "title": "Question 51",
    "explanation": ""
  },
  {
    "content": "Given the following code:\ndocument.body.addEventListener(' click ', (event) => {\nif (/* CODE REPLACEMENT HERE */) {\nconsole.log('button clicked!');\n)\n});\nWhich replacement for the conditional statement on line 02 allows a developer to\ncorrectly determine that a button on page is clicked?",
    "options": ["A. event.target.nodeName == 'BUTTON'", "B. button.addEventListener('click')", "C. e.nodeTarget ==this", "D. Event.clicked"],
    "answer": "A",
    "title": "Question 52",
    "explanation": ""
  },
  {
    "content": "Given the expressions var1 and var2, what are two valid ways to return the concatenation of the two expressions and ensure it is string? Choose 2 answers",
    "options": ["A. var1 + var2", "B. var1.toString ( ) var2.toString ( )", "C. String (var1) .concat (var2)", "D. string.concat (var1 +var2)"],
    "answer": "B,D",
    "title": "Question 53",
    "explanation": ""
  },
  {
    "content": "A developer wants to iterate through an array of objects and count the objects and count\nthe objects whose property value, name, starts with the letter N.\nConst arrObj = [{\"name\" : \"Zach\"} , {\"name\" : \"Kate\"},{\"name\" : \"Alise\"},{\"name\" : \"Bob\"},{\"name\" :\n\"Natham\"},{\"name\" : \"nathaniel\"}\nRefer to the code snippet below:\n01 arrObj.reduce(( acc, curr) => {\n02 //missing line 02\n02 //missing line 03\n04 ). 0);\nWhich missing lines 02 and 03 return the correct count?",
    "options": [
      "A. Const sum = curr.startsWIth('N') ? 1: 0;\n         Return curr+ sum",
      "B. Const sum = curr.startsWith('N') ? 1: 0;\n         Return acc +sum",
      "C. Const sum = curr.name.startsWIth('N') ? 1: 0;\n         Return curr+ sum",
      "D. Const sum = curr.name.startsWith('N') ? 1: 0;\n         Return acc +sum"
    ],
    "answer": "D",
    "title": "Question 54",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nlet sayHello = () => {\nconsole.log ('Hello, world!');\n};\nWhich code executes sayHello once, two minutes from now?",
    "options": [
      "A. setInterval(sayHello, 12000);",
      "B. setTimeout(sayHello, 12000);",
      "C. setTimeout(sayHello(), 12000);",
      "D. delay(sayHello, 12000);"
    ],
    "answer": "B",
    "title": "Question 55",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nlet o = {\nget js() {\nlet city1 = String(\"st. Louis\");\nlet city2 = String(\" New York\");\nreturn {\nfirstCity: city1.toLowerCase(),\nsecondCity: city2.toLowerCase(),\n}\n}\n}\nWhat value can a developer expect when referencing o.js.secondCity?",
    "options": ["A. An error", "B. ' New York '", "C. ' new york '", "D. Undefined"],
    "answer": "C",
    "title": "Question 56",
    "explanation": ""
  },
  {
    "content": "developer is trying to convince management that their team will benefit from using\nNode.js for a backend server that they are going to create. The server will be a web server that\nhandles API requests from a website that the team has already built using HTML, CSS, and\nJavaScript.\nWhich three benefits of Node.js can the developer use to persuade their manager?\nChoose 3 answers:",
    "options": [
      "A. I nstalls with its own package manager to install and manage third-party libraries.",
      "B. Executes server-side JavaScript code to avoid learning a new language.",
      "C. User non blocking functionality for performant request handling .",
      "D. Performs a static analysis on code before execution to look for runtime errors.",
      "E. Ensures stability with one major release every few years."
    ],
    "answer": "A,C,D",
    "title": "Question 57",
    "explanation": ""
  },
  {
    "content": "A developer wants to create an object from a function in the browser using the code\nbelow:\nFunction Monster() { this.name = 'hello' };\nConst z = Monster();\nWhat happens due to lack of the new keyword on line 02?",
    "options": [
      "A. Window.m is assigned the correct object.",
      "B. The z variable is assigned the correct object but this.name remains undefined.",
      "C. The z variable is assigned the correct object.",
      "D. Window.name is assigned to 'hello' and the variable z remains undefined."
    ],
    "answer": "D",
    "title": "Question 58",
    "explanation": ""
  },
  {
    "content": "A test has a dependency on database.query. During the test the dependency is replaced\nwith an object called database with the method, query, that returns an array. The\ndeveloper needs to verify how many times the method was called and the arguments\nused each time.\nWhich two test approaches describe the requirement?\nChoose 2 answers",
    "options": ["A. White box", "B. Black box", "C. Integration", "D. Mocking"],
    "answer": "A,D",
    "title": "Question 59",
    "explanation": ""
  },
  {
    "content": "Given the requirement to refactor the code above to JavaScript class format, which class\ndefinition is correct?\nA)\nB)\nC)\nD)",
    "options": ["A. Option C", "B. Option A", "C. Option B", "D. Option D"],
    "answer": "B",
    "title": "Question 60",
    "explanation": ""
  }
]
