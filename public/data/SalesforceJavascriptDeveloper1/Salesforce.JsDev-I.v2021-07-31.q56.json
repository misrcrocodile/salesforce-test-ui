[
  {
    "content": "Refer to the code below:\nnew Promise((resolve, reject) => {\nconst fraction = Math.random();\nif( fraction >0.5) reject(\"fraction > 0.5, \" + fraction);\nresolve(fraction);\n})\n.then(() =>console.log(\"resolved\"))\n.catch((error) => console.error(error))\n.finally(() => console.log(\" when am I called?\"));\nWhen does Promise.finally on line 08 get called?",
    "options": ["A. WHen resolved", "B. When rejected", "C. When resolved and settled", "D. When resolved or rejected"],
    "answer": "D",
    "title": "Question 1",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nLet textValue = '1984';\nWhich code assignment shows a correct way to convert this string to an integer?",
    "options": [
      "A. Let numberValue = Integer(textValue);",
      "B. let numberValue = Number(textValue);",
      "C. Let numberValue = textValue.toInteger();",
      "D. Let numberValue = (Number)textValue;"
    ],
    "answer": "B",
    "title": "Question 2",
    "explanation": ""
  },
  {
    "content": "Which statement parses successfully?",
    "options": ["A. JSON.parse (\"\"foo'\");", "B. JSON.parse (\"foo\"); ", "C. JSON.parse (\"foo\");", "D. JSON. parse (\"\"foo\"');"],
    "answer": "D",
    "title": "Question 3",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nfunction changeValue(param) {\nParam =5;\n}\nLet a =10;\nLet b =5;\nchangeValue(b);\nConst result = a+ \" - \"+ b;\nWhat is the value of result when code executes?",
    "options": ["A. 5 -5", "B. 10 -10", "C. 10 - 5", "D. 5 - 10"],
    "answer": "B",
    "title": "Question 4",
    "explanation": ""
  },
  {
    "content": "A developer has code that calculates a restaurant bill, but generates incorrect answers while testing the code:\nfunction calculateBill ( items ) {\nlet total = 0;\ntotal += findSubTotal(items);\ntotal += addTax(total);\ntotal += addTip(total);\nreturn total;\n}\nWhich option allows the developer to step into each function execution within calculateBill?",
    "options": [
      "A. Using the debugger command on line 05.",
      "B. Calling the console.trace (total) method on line 03.",
      "C. Wrapping findSubtotal in a console.log() method.",
      "D. Using the debugger command on line 03"
    ],
    "answer": "A",
    "title": "Question 5",
    "explanation": ""
  },
  {
    "content": "Which option is a core Node,js module?",
    "options": ["A. Memory", "B. locate", "C. Path", "D. Ios"],
    "answer": "C",
    "title": "Question 6",
    "explanation": ""
  },
  {
    "content": "Given the code below:\n01 function GameConsole (name) {\n02 this.name = name;\n03 }\n04\n05 GameConsole.prototype.load = function(gamename) {\n06 console.log( ` $(this.name) is loading a game : $(gamename) ...`);\n07 )\n08 function Console 16 Bit (name) {\n09 GameConsole.call(this, name) ;\n10 }\n11 Console16bit.prototype = Object.create ( GameConsole.prototype) ;\n12 //insert code here\n13 console.log( ` $(this.name) is loading a cartridge game : $(gamename) ...`);\n14 }\n15 const console16bit = new Console16bit(' SNEGeneziz ');\n16 console16bit.load(' Super Nonic 3x Force ');\nWhat should a developer insert at line 15 to output the following message using the method ?\n> SNEGeneziz is loading a cartridge game: Super Monic 3x Force . . .",
    "options": [
      "A. Console16bit.prototype.load(gamename) {",
      "B. Console16bit.prototype.load = function(gamename) {",
      "C. Console16bit.prototype.load(gamename) = function() {",
      "D. Console16bit = Object.create(GameConsole.prototype).load = function\n         (gamename) {"
    ],
    "answer": "B",
    "title": "Question 7",
    "explanation": ""
  },
  {
    "content": "Which statement accurately describes the behaviour of the async/ await keyworks ?",
    "options": [
      "A. The associated class contains some asynchronous functions.",
      "B. The associated function will always return a promise",
      "C. The associated sometimes returns a promise.",
      "D. The associated function can only be called via asynchronous methods"
    ],
    "answer": "B",
    "title": "Question 8",
    "explanation": ""
  },
  {
    "content": "developer wants to use a module named universalContainersLib and them call functions from it.\nHow should a developer import every function from the module and then call the fuctions foo and bar ?",
    "options": [
      "A. import * from '/path/universalContaineraLib.js';\n         universalContainersLib.foo();\n         universalContainersLib.bar();",
      "B. import all from '/path/universalContaineraLib.js';\n         universalContainersLib.foo();\n         universalContainersLib.bar();",
      "C. import (foo, bar) from '/path/universalContainersLib.js';\n         foo();\n         bar();",
      "D. import * ad lib from '/path/universalContainersLib.js';\n         lib.foo();\n         lib.bar();"
    ],
    "answer": "D",
    "title": "Question 9",
    "explanation": ""
  },
  {
    "content": "A developer wants to leverage a module to print a price in pretty format, and has imported a method as shown below:\nImport printPrice from '/path/PricePrettyPrint.js';\nBased on the code, what must be true about the printPrice function of the PricePrettyPrint module for this import to work ?",
    "options": [
      "A. printPrice must be an all export",
      "B. printPrice must be the default export",
      "C. printPrice must be be a named export",
      "D. printPrice must be a multi exportc"
    ],
    "answer": "B",
    "title": "Question 10",
    "explanation": ""
  },
  {
    "content": "Considering type coercion, what does the following expression evaluate to?\nTrue + '13' + NaN",
    "options": ["A. ' true13NaN '", "B. ' true13 '", "C. 14", "D. ' 113Nan '"],
    "answer": "A",
    "title": "Question 11",
    "explanation": ""
  },
  {
    "content": "A team that works on a big project uses npm to deal with projects dependencies.\nA developer added a dependency does not get downloaded when they execute npm install.\nWhich two reasons could be possible explanations for this?\nChoose 2 answers",
    "options": [
      "A. The developer added the dependency as a dev dependency, and NODE_ENV is set to production.",
      "B. The developer added the dependency as a dev dependency, and NODE_ENV Is set to production.",
      "C. The developer missed the option --save when adding the dependency.",
      "D. The developer missed the option --add when adding the dependency."
    ],
    "answer": "A,B,C",
    "title": "Question 12",
    "explanation": ""
  },
  {
    "content": "Refer to HTML below:\n<p> The current status of an Order: <span id =\"status\"> In Progress </span> </p>.\nWhich JavaScript statement changes the text 'In Progress' to 'Completed' ?",
    "options": [
      "A. document.getElementById(\".status\").innerHTML = 'Completed' ;",
      "B. document.getElementById(\"#status\").innerHTML = 'Completed' ;",
      "C. document.getElementById(\"status\").Value = 'Completed' ;",
      "D. document.getElementById(\"status\").innerHTML = 'Completed' ;"
    ],
    "answer": "D",
    "title": "Question 13",
    "explanation": ""
  },
  {
    "content": "Refer to code below:\nLet productSKU = '8675309' ;\nA developer has a requirement to generate SKU numbers that are always 19 characters lon, starting with 'sku', and padded with zeros.\nWhich statement assigns the values sku0000000008675309 ?",
    "options": [
      "A. productSKU = productSKU .padStart (19. '0').padstart('sku');",
      "B. productSKU = productSKU .padEnd (16. '0').padstart('sku');",
      "C. productSKU = productSKU .padEnd (16. '0').padstart(19, 'sku');",
      "D. productSKU = productSKU .padStart (16. '0').padstart(19, 'sku');"
    ],
    "answer": "D",
    "title": "Question 14",
    "explanation": ""
  },
  {
    "content": "Refer to following code block:\nLet array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,];\nLet output =0;\nFor (let num of array){\nif (output >0){\nBreak;\n}\nif(num % 2 == 0){\nContinue;\n}\nOutput +=num;\nWhat is the value of output after the code executes?",
    "options": ["A. 16", "B. 36", "C. 11", "D. 25"],
    "answer": "A",
    "title": "Question 15",
    "explanation": ""
  },
  {
    "content": "A developer needs to test this function:\n01 const sum3 = (arr) => (\n02 if (!arr.length) return 0,\n03 if (arr.length === 1) return arr[0],\n04 if (arr.length === 2) return arr[0] + arr[1],\n05 return arr[0] + arr[1] + arr[2],\n06 );\nWhich two assert statements are valid tests for the function?\nChoose 2 answers",
    "options": [
      "A. console.assert(sum3(-3, 2 )) == -1);",
      "B. console.assert(sum3(0)) == 0);",
      "C. console.assert(sum3(1, '2')) == 12);",
      "D. console.assert(sum3('hello', 2, 3, 4)) === NaN);"
    ],
    "answer": "A,C",
    "title": "Question 16",
    "explanation": ""
  },
  {
    "content": "A developer is required to write a function that calculates the sum of elements in an array but is getting undefined every time the code is executed. The developer needs to find what is missing in the code below.\nConst sumFunction = arr => {\nReturn arr.reduce((result, current) => {\n//\nResult += current;\n//\n), 10);\n);\nWhich option makes the code work as expected?",
    "options": [
      "A. Replace line 04 with result = result +current;",
      "B. Replace line 05 with return result;",
      "C. Replace line 02 with return arr.map(( result, current) => (",
      "D. Replace line 03 with if(arr.length == 0 ) ( return 0; )"
    ],
    "answer": "B",
    "title": "Question 17",
    "explanation": ""
  },
  {
    "content": "In the browser, the window object is often used to assign variables that require the broadest scope in an application Node.js application does not have access to the window object by default.\nWhich two methods are used to address this ?\nChoose 2 answers",
    "options": [
      "A. Use the document object instead of the window object.",
      "B. Create a new window object in the root file.",
      "C. Assign variables to the global object.",
      "D. Assign variables to module.exports and require them as needed."
    ],
    "answer": "C",
    "title": "Question 18",
    "explanation": ""
  },
  {
    "content": "Refer to the following code:\nLet sampleText = 'The quick brown fox jumps';\nA developer needs to determine if a certain substring is part of a string.\nWhich three expressions return true for the given substring ?\nChoose 3 answers",
    "options": [
      "A. sampleText.includes('fox');",
      "B. sampleText.includes(' quick ', 4);",
      "C. sampleText.includes(' fox ');",
      "D. sampleText.includes(' Fox ', 3)",
      "E. sampleText.includes(' quick ') !== -1;"
    ],
    "answer": "B,C,E",
    "title": "Question 19",
    "explanation": ""
  },
  {
    "content": "Which two console logs output NaN?\nChoose 2 answers | |",
    "options": [
      "A. console.log(10 / Number('5) ) ;",
      "B. console.loeg(10 / 'five');",
      "C. console.log(parseInt ' (\"two')) ;",
      "D. console.log(10 / 0);"
    ],
    "answer": "B,C",
    "title": "Question 20",
    "explanation": ""
  },
  {
    "content": "developer is trying to convince management that their team will benefit from using Node.js for a backend server that they are going to create. The server will be a web server that handles API requests from a website that the team has already built using HTML, CSS, and JavaScript.\nWhich three benefits of Node.js can the developer use to persuade their manager?\nChoose 3 answers:",
    "options": [
      "A. I nstalls with its own package manager to install and manage third-party libraries.",
      "B. User non blocking functionality for performant request handling .",
      "C. Ensures stability with one major release every few years.",
      "D. Executes server-side JavaScript code to avoid learning a new language.",
      "E. Performs a static analysis on code before execution to look for runtime errors."
    ],
    "answer": "A,B,E",
    "title": "Question 21",
    "explanation": ""
  },
  {
    "content": "Refer to the following code that performs a basic mathematical operation on a provided input:\nfunction calculate(num) {\nReturn (num +10) / 3;\n}\nHow should line 02 be written to ensure that x evaluates to 6 in the line below?\nLet x = calculate (8);",
    "options": [
      "A. Return Integer(num +10) /3;",
      "B. Return Number(num + 10) / 3;",
      "C. Return (Number (num +10 ) / 3;",
      "D. Return Number((num +10) /3 );"
    ],
    "answer": "C",
    "title": "Question 22",
    "explanation": ""
  },
  {
    "content": "Refer to the code snippet below:\nLet array = [1, 2, 3, 4, 4, 5, 4, 4];\nFor (let i =0; i < array.length; i++){\nif (array[i] === 4) {\narray.splice(i, 1);\n}\n}\nWhat is the value of the array after the code executes?",
    "options": ["A. [1, 2, 3, 4, 4, 5, 4]", "B. [1, 2, 3, 4, 5, 4]", "C. [1, 2, 3, 5]", "D. [1, 2, 3, 4, 5, 4, 4]"],
    "answer": "B",
    "title": "Question 23",
    "explanation": ""
  },
  {
    "content": "Refer to the expression below:\nLet x = ('1' + 2) == (6 * 2);\nHow should this expression be modified to ensure that evaluates to false?",
    "options": [
      "A. Let x = (1 + 2 ) == ( 6 / 2);",
      "B. Let x = ('1' + ' 2') == ( 6 * 2);",
      "C. Let x = (1 + 2) == ( '6' / 2);",
      "D. Let x = ('1' + 2) == ( 6 * 2);"
    ],
    "answer": "D",
    "title": "Question 24",
    "explanation": ""
  },
  {
    "content": "A developer has a formatName function that takes two arguments, firstName and lastName and returns a string. They want to schedule the function to run once after five seconds.\nWhat is the correct syntax to schedule this function?",
    "options": [
      "A. setTimeout ('formatName', 5000, 'John\", \"Doe');",
      "B. setTimeout (formatName('John', ''Doe'), 5000);",
      "C. setTimout(() => { formatName(\"John', 'Doe') }, 5000);",
      "D. setTimeout (formatName(), 5000, \"John\", \"BDoe\");"
    ],
    "answer": "A",
    "title": "Question 25",
    "explanation": ""
  },
  {
    "content": "developer has a web server running with Node.js. The command to start the web server is node server,js. The web server started having latency issues. Instead of a one second turn around for web requests, the developer now sees a five second turnaround, Which command can the web developer run to see what the module is doing during the latency period?",
    "options": [
      "A. DEBUG =true node server.js",
      "B. NODE_DEBUG =http, https node server.js",
      "C. NODE_DEBUG =true node server.js",
      "D. DEBUG = http, https node server.js"
    ],
    "answer": "A",
    "title": "Question 26",
    "explanation": ""
  },
  {
    "content": "Given the following code:\nLet x =('15' + 10)*2;\nWhat is the value of a?",
    "options": ["A. 50", "B. 35", "C. 1520", "D. 3020"],
    "answer": "D",
    "title": "Question 27",
    "explanation": ""
  },
  {
    "content": "developer publishes a new version of a package with new features that do not break backward compatibility. The previous version number was 1.1.3.\nFollowing semantic versioning format, what should the new package version number be?",
    "options": ["A. 2.0.0", "B. 1.2.0", "C. 1.2.3", "D. 1.1.4"],
    "answer": "B",
    "title": "Question 28",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nlet sayHello = () => {\nconsole.log ('Hello, world!');\n};\nWhich code executes sayHello once, two minutes from now?",
    "options": [
      "A. setTimeout(sayHello, 12000);",
      "B. setInterval(sayHello, 12000);",
      "C. setTimeout(sayHello(), 12000);",
      "D. delay(sayHello, 12000);"
    ],
    "answer": "A",
    "title": "Question 29",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\n01 const server = require('server');\n02 /* Insert code here */\nA developer imports a library that creates a web server. The imported library uses events and callbacks to start the servers Which code should be inserted at the line 03 to set up an event and start the web server ?",
    "options": [
      "A. console.log( 'Listening on ', port) ;",
      "B. server()",
      "C. Server.start ();",
      "D. serve(( port) => (",
      "E. server.on(' connect ' , ( port) => {\n         console.log('Listening on ' , port) ;})"
    ],
    "answer": "E",
    "title": "Question 30",
    "explanation": ""
  },
  {
    "content": "A developer wants to set up a secure web server with Node.js. The developer creates a directory locally called app-server, and the first file is app-server/index.js Without using any third-party libraries, what should the developer add to index.js to create the secure web server?",
    "options": [
      "A. const server =require('secure-server');",
      "B. const https =require('https');",
      "C. const tls = require('tls');",
      "D. const http =require('http');"
    ],
    "answer": "B",
    "title": "Question 31",
    "explanation": ""
  },
  {
    "content": "Consider type coercion, what does the following expression evaluate to?\nTrue + 3 + '100' + null",
    "options": ["A. 4100", "B. '3100null'", "C. 104", "D. '4100null'"],
    "answer": "D",
    "title": "Question 32",
    "explanation": ""
  },
  {
    "content": "The developer wants to test this code:\nConst toNumber =(strOrNum) => strOrNum;\nWhich two tests are most accurate for this code?\nChoose 2 answers",
    "options": [
      "A. console.assert(toNumber () === NaN);",
      "B. console.assert(toNumber('-3') < 0);",
      "C. console.assert(toNumber('2') === 2);",
      "D. console.assert(Number.isNaN(toNumber()));"
    ],
    "answer": "B,C",
    "title": "Question 33",
    "explanation": ""
  },
  {
    "content": "Which three statements are true about promises ?\nChoose 3 answers",
    "options": [
      "A. A Promise has a .then() method.",
      "B. A fulfilled or rejected promise will not change states .",
      "C. The executor of a new Promise runs automatically.",
      "D. A pending promise can become fulfilled, settled, or rejected.",
      "E. A settled promise can become resolved."
    ],
    "answer": "A,B,D",
    "title": "Question 34",
    "explanation": ""
  },
  {
    "content": "Refer to code below:\nLet first = 'who';\nLet second = 'what';\nTry{\nTry{\nThrow new error('Sad trombone');\n}catch (err){\nFirst ='Why';\n}finally {\nSecond ='when';\n} catch (err) {\nSecond ='Where';\n}\nWhat are the values for first and second once the code executes ?",
    "options": [
      "A. First is Who and second is When",
      "B. First is why and second is where",
      "C. First is why and second is when",
      "D. First is who and second is where"
    ],
    "answer": "C",
    "title": "Question 35",
    "explanation": ""
  },
  {
    "content": "A test has a dependency on database. query. During the test, the dependency is replaced with an object called database with the method, Calculator query, that returns an array. The developer does not need to verify how many times the method has been called.\nWhich two test approaches describe the requirement?\nChoose 2 answers",
    "options": ["A. Stubbing", "B. Black box", "C. Substitution", "D. White box"],
    "answer": "C,D",
    "title": "Question 36",
    "explanation": ""
  },
  {
    "content": "Universal Containers (UC) just launched a new landing page, but users complain that the website is slow. A developer found some functions any that might cause this problem. To verify this, the developer decides to execute everything and log the time each of these three suspicious functions consumes.\nWhich function can the developer use to obtain the time spent by every one of the three functions?",
    "options": ["A. console.getTime ()", "B. console.trace()", "C. console.timeStamp ()", "D. console. timeLog ()"],
    "answer": "D",
    "title": "Question 37",
    "explanation": ""
  },
  {
    "content": "A test has a dependency on database.query. During the test the dependency is replaced with an object called database with the method, query, that returns an array. The developer needs to verify how many times the method was called and the arguments used each time.\nWhich two test approaches describe the requirement?\nChoose 2 answers",
    "options": ["A. Black box", "B. Integration", "C. White box", "D. Mocking"],
    "answer": "C,D",
    "title": "Question 38",
    "explanation": ""
  },
  {
    "content": "Refer to the following code:\nfunction test (val) {\nIf (val === undefined) {\nreturn 'Undefined values!' ;\n}\nif (val === null) {\nreturn 'Null value! ';\n}\nreturn val;\n}\nLet x;\ntest(x);\nWhat is returned by the function call on line 13?",
    "options": ["A. 'Undefined values!'", "B. Undefined", "C. 'Null value!'", "D. Line 13 throws an error."],
    "answer": "B",
    "title": "Question 39",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nLine 05 causes an error.\nWhat are the values of greeting and salutation once code completes?",
    "options": [
      "A. Greeting is Goodbye and salutation is Hello, Hello.",
      "B. Greeting is Goodbye and salutation is I say Hello.",
      "C. Greeting is Hello and salutation is Hello, Hello.",
      "D. Greeting is Hello and salutation is I say hello."
    ],
    "answer": "C",
    "title": "Question 40",
    "explanation": ""
  },
  {
    "content": "Which two console logs outputs NaN ?\nChoose 2 answers",
    "options": ["A. console.log(10/ ''five);", "B. console.log(10/ Number('5'));", "C. console.log(parseInt('two'));", "D. console.log(10/0);"],
    "answer": "A,C",
    "title": "Question 41",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nConst pi = 3.1415326,\nWhat is the data type of pi?",
    "options": ["A. Float", "B. Number", "C. Double", "D. Decimal"],
    "answer": "B",
    "title": "Question 42",
    "explanation": ""
  },
  {
    "content": "What is the result of the code block?",
    "options": [
      "A. The console logs only 'flag'.",
      "B. An error is thrown.",
      "C. The console logs 'flag' and then an error is thrown.",
      "D. The console logs 'flag' and another flag."
    ],
    "answer": "C",
    "title": "Question 43",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nconst addBy = ?\nconst addByEight =addBy(8);\nconst sum = addBYEight(50);\nWhich two functions can replace line 01 and return 58 to sum?\nChoose 2 answers",
    "options": [
      "A. const addBy = function(num1){\n         return function(num2){\n         return num1 + num2;\n         }",
      "B. const addBY = (num1) => (num2) => num1 + num2;",
      "C. const addBy = function(num1){\n         return num1 + num2;\n         }",
      "D. const addBy = (num1) => num1 + num2 ;"
    ],
    "answer": "A,B",
    "title": "Question 44",
    "explanation": ""
  },
  {
    "content": "A developer wrote the following code:\n01 let X = object.value;\n02\n03 try {\n04 handleObjectValue(X);\n05 } catch (error) {\n06 handleError(error);\n07 }\nThe developer has a getNextValue function to execute after handleObjectValue(), but does not want to execute getNextValue() if an error occurs.\nHow can the developer change the code to ensure this behavior?",
    "options": [
      "A. 03 try{\n         04 handleObjectValue(x);\n         05 } catch(error){\n         06 handleError(error);\n         07 } then {\n         08 getNextValue();\n         09 }",
      "B. 03 try {\n         04 handleObjectValue(x)\n         05 ........................",
      "C. 03 try{\n         04 handleObjectValue(x);\n         05 } catch(error){\n         06 handleError(error);\n         07 }\n         08 getNextValue();",
      "D. 03 try{\n         04 handleObjectValue(x);\n         05 } catch(error){\n         06 handleError(error);\n         07 } finally {\n         08 getNextValue();\n         10 }"
    ],
    "answer": "B",
    "title": "Question 45",
    "explanation": ""
  },
  {
    "content": "Refer to code below:\nLet a ='a';\nLet b;\n// b = a;\nconsole.log(b);\nWhat is displayed when the code executes?",
    "options": ["A. Null", "B. Undefined", "C. ReferenceError: b is not defined", "D. A"],
    "answer": "B",
    "title": "Question 46",
    "explanation": ""
  },
  {
    "content": "Refer to the following code:\n01 function Tiger(){\n02 this.Type = 'Cat';\n03 this.size = 'large';\n04 }\n05\n06 let tony = new Tiger();\n07 tony.roar = () =>{\n08 console.log('They\\'re great1');\n09 };\n10\n11 function Lion(){\n12 this.type = 'Cat';\n13 this.size = 'large';\n14 }\n15\n16 let leo = new Lion();\n17 //Insert code here\n18 leo.roar();\nWhich two statements could be inserted at line 17 to enable the function call on line 18?\nChoose 2 answers.",
    "options": [
      "A. Leo.prototype.roar = () => { console.log('They\\'re pretty good:'); };",
      "B. Object.assign(leo,tony);",
      "C. Leo.roar = () => { console.log('They\\'re pretty good:'); };",
      "D. Object.assign(leo,Tiger);"
    ],
    "answer": "B,C",
    "title": "Question 47",
    "explanation": ""
  },
  {
    "content": "A developer at Universal Containers creates a new landing page based on HTML, CSS, and JavaScript TO ensure that visitors have a good experience, a script named personaliseContext needs to be executed when the webpage is fully loaded (HTML content and all related files ), in order to do some custom initialization.\nWhich statement should be used to call personalizeWebsiteContent based on the above business requirement?",
    "options": [
      "A. window.addEventListener('load',personalizeWebsiteContext);",
      "B. Document.addEventListener('''DOMContextLoaded' , personalizeWebsiteContext);",
      "C. window.addEventListener('onload', personalizeWebsiteContext);",
      "D. document.addEventListener(''onDOMContextLoaded', personalizeWebsiteContext);"
    ],
    "answer": "A",
    "title": "Question 48",
    "explanation": ""
  },
  {
    "content": "Which javascript methods can be used to serialize an object into a string and deserialize a JSON string into an object, respectively?",
    "options": [
      "A. JSON.parse and JSON.deserialize",
      "B. JSON.serialize and JSON.deserialize",
      "C. JSON.encode and JSON.decode",
      "D. JSON.stringify and JSON.parse"
    ],
    "answer": "D",
    "title": "Question 49",
    "explanation": ""
  },
  {
    "content": "A class was written to represent items for purchase in an online store, and a second class Representing items that are on sale at a discounted price. THe constructor sets the name to the first value passed in. The pseudocode is below:\nClass Item {\nconstructor(name, price) {\n... // Constructor Implementation\n}\n}\nClass SaleItem extends Item {\nconstructor (name, price, discount) {\n...//Constructor Implementation\n}\n}\nThere is a new requirement for a developer to implement a description method that will return a brief description for Item and SaleItem.\nLet regItem =new Item('Scarf', 55);\nLet saleItem = new SaleItem('Shirt' 80, -1);\nItem.prototype.description = function () { return 'This is a ' + this.name; console.log(regItem.description()); console.log(saleItem.description()); SaleItem.prototype.description = function () { return 'This is a discounted ' + this.name; } console.log(regItem.description()); console.log(saleItem.description()); What is the output when executing the code above ?",
    "options": [
      "A. This is a Scarf\n         This is a Shirt\n         This is a Scarf\n         This is a discounted Shirt",
      "B. This is aScarf\n         Uncaught TypeError: saleItem.description is not a function\n         This is a Shirt\n         This is a did counted Shirt",
      "C. This is a Scarf\n         Uncaught TypeError: saleItem.description is not a function\n         This is aScarf\n         This is a discounted Shirt",
      "D. This is a Scarf\n         This is a Shirt\n         This is a discounted Scarf\n         This is a discounted Shirt"
    ],
    "answer": "A",
    "title": "Question 50",
    "explanation": ""
  },
  {
    "content": "Which three browser specific APIs are available for developers to persist data between page loads ?\nChoose 3 answers",
    "options": ["A. Cookies", "B. localStorage.", "C. Global variables", "D. IIFEs", "E. indexedDB"],
    "answer": "B,D,E",
    "title": "Question 51",
    "explanation": ""
  },
  {
    "content": "Refer to HTML below:\n<div id =\"main\">\n<div id = \" card-00\">This card is smaller.</div>\n<div id = \"card-01\">The width and height of this card is determined by its contents.</div>\n</div>\nWhich expression outputs the screen width of the element with the ID card-01?",
    "options": [
      "A. document.getElementById(' card-01 ').getBoundingClientRest().width",
      "B. document.getElementById(' card-01 ').style.width",
      "C. document.getElementById(' card-01 ').width",
      "D. document.getElementById(' card-01 ').innerHTML.lenght*e"
    ],
    "answer": "A",
    "title": "Question 52",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nfor(let number =2 ; number <= 5 ; number += 1 ) {\n// insert code statement here\n}\nThe developer needs to insert a code statement in the location shown. The code statement has these requirements:\n1. Does require an import\n2. Logs an error when the boolean statement evaluates to false\n3. Works in both the browser and Node.js\nWhich meet the requirements?",
    "options": [
      "A. assert (number % 2 === 0);",
      "B. console.assert(number % 2 === 0);",
      "C. console.debug(number % 2 === 0);",
      "D. console.error(number % 2 === 0);"
    ],
    "answer": "D",
    "title": "Question 53",
    "explanation": ""
  },
  {
    "content": "Which code statement correctly retrieves and returns an object from localStorage?",
    "options": [
      "A. const retrieveFromLocalStorage = (storageKey) =>{\n         return JSON.parse(window.localStorage.getItem(storageKey));\n         }",
      "B. const retrieveFromLocalStorage = () =>{\n         return JSON.stringify(window.localStorage.getItem(storageKey));\n         }",
      "C. const retrieveFromLocalStorage = (storageKey) =>{\n         return window.localStorage.getItem(storageKey);\n         }",
      "D. const retrieveFromLocalStorage = (storageKey) =>{\n         return window.localStorage[storageKey];\n         }"
    ],
    "answer": "A",
    "title": "Question 54",
    "explanation": ""
  },
  {
    "content": "Refer to code below:\nconsole.log(0);\nsetTimeout(() => (\nconsole.log(1);\n});\nconsole.log(2);\nsetTimeout(() => {\nconsole.log(3);\n), 0);\nconsole.log(4);\nIn which sequence will the numbers be logged?",
    "options": ["A. 02413", "B. 01234", "C. 13024", "D. 02431"],
    "answer": "A",
    "title": "Question 55",
    "explanation": ""
  },
  {
    "content": "Refer to the following code:\n<html lang=\"en\">\n<body>\n<div onclick = \"console.log('Outer message') ;\">\n<button id =\"myButton\">CLick me<button>\n</div>\n</body>\n<script>\nfunction displayMessage(ev) {\nev.stopPropagation();\nconsole.log('Inner message.');\n}\nconst elem = document.getElementById('myButton');\nelem.addEventListener('click' , displayMessage);\n</script>\n</html>\nWhat will the console show when the button is clicked?",
    "options": ["A. Inner message", "B. Outer message", "C. Outer message\n         Inner message", "D. Inner message\n         Outer message"],
    "answer": "A",
    "title": "Question 56",
    "explanation": ""
  }
]
