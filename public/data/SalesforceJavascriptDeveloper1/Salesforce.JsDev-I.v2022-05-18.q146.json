[
  {
    "content": "Refer to the code below:\nWhat is the value of result when the code executes?",
    "options": ["A. 5 - 10", "B. 5 - 5", "C. 10 - 5", "D. 10 - 10"],
    "answer": "D",
    "title": "Question 1",
    "explanation": ""
  },
  {
    "content": "A developer is wondering whether to use, promise, then or provise, catch especially when a promise throws an error.\nWhich two promises are rejected? Choose 2 answers",
    "options": [
      "A. New Promise((resolve, reject) => ( throw 'Cool error here')) .catch (error => console (error ));",
      "B. Promise , reject ('Cool error here ') , catch (error => console ,error (error));",
      "C. New promise (() => (throw 'Cool error here ')) , then ((null, error => console, (error)));",
      "D. Promise, rejected (Cool error here'), then (error => console (error ));"
    ],
    "answer": "A,C",
    "title": "Question 2",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nWhich two statements correctly execute the runparallel () function?\nChoose 2 answers",
    "options": [
      "A. runParralel () . then (data );",
      "B. runParallel () , then (function ) (date) { } 0;",
      "C. runParallel () , done (function ( data)(return data; }};",
      "D. Async runParalled (). Then (data) :"
    ],
    "answer": "B,D",
    "title": "Question 3",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nAfter running this code, which result is displayed on the console?",
    "options": ["A. > 5\n         > Undefined", "B. > 5\n         > 0", "C. > 5\n         >- 1", "D. > True\n         > False"],
    "answer": "C",
    "title": "Question 4",
    "explanation": ""
  },
  {
    "content": "A developer wants to iterate through an array of objects and count the objects and count\nthe objects whose property value, name, starts with the letter N.\nConst arrObj = [{\"name\" : \"Zach\"} , {\"name\" : \"Kate\"},{\"name\" : \"Alise\"},{\"name\" : \"Bob\"},{\"name\" :\n\"Natham\"},{\"name\" : \"nathaniel\"}\nRefer to the code snippet below:\n01 arrObj.reduce(( acc, curr) => {\n02 //missing line 02\n02 //missing line 03\n04 ). 0);\nWhich missing lines 02 and 03 return the correct count?",
    "options": [
      "A. Const sum = curr.name.startsWIth('N') ? 1: 0;\n         Return curr+ sum",
      "B. Const sum = curr.startsWith('N') ? 1: 0;\n         Return acc +sum",
      "C. Const sum = curr.startsWIth('N') ? 1: 0;\n         Return curr+ sum",
      "D. Const sum = curr.name.startsWith('N') ? 1: 0;\n         Return acc +sum"
    ],
    "answer": "D",
    "title": "Question 5",
    "explanation": ""
  },
  {
    "content": "Considering the implications of 'use strict' on line 04, which three statements describe the execution of the code?\nChoose 3 answers",
    "options": [
      "A. 'use strict' is hoisted, so it has an effect on all lines.",
      "B. Line 05 throws an error.",
      "C. 'use strict' has an effect only on line 05.",
      "D. 'use strict' has an effect between line 04 and the end of the file.",
      "E. z is equal to 3.14."
    ],
    "answer": "B,C,E",
    "title": "Question 6",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nlet o = {\nget js() {\nlet city1 = String(\"st. Louis\");\nlet city2 = String(\" New York\");\nreturn {\nfirstCity: city1.toLowerCase(),\nsecondCity: city2.toLowerCase(),\n}\n}\n}\nWhat value can a developer expect when referencing o.js.secondCity?",
    "options": ["A. Undefined", "B. An error", "C. ' New York '", "D. ' new york '"],
    "answer": "D",
    "title": "Question 7",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nWhat is the value of result when the code executes?",
    "options": ["A. 10-5", "B. 5-10", "C. 5-5", "D. 10-10"],
    "answer": "D",
    "title": "Question 8",
    "explanation": ""
  },
  {
    "content": "A developer creates a simple webpage with an input field. When a user enters text in the input field and clicks the button, the actual value of the field must be displayed in the console.\nHere is the HTML file content:\n<input type =\" text\" value=\"Hello\" name =\"input\">\n<button type =\"button\" >Display </button> The developer wrote the javascript code below:\nConst button = document.querySelector('button');\nbutton.addEvenListener('click', () => (\nConst input = document.querySelector('input');\nconsole.log(input.getAttribute('value'));\nWhen the user clicks the button, the output is always \"Hello\".\nWhat needs to be done to make this code work as expected?",
    "options": [
      "A. Replace line 02 with button.addEventListener(\"onclick\", function() {",
      "B. Replace line 04 with console.log(input .value);",
      "C. Replace line 02 with button.addCallback(\"click\", function() {",
      "D. Replace line 03 with const input = document.getElementByName('input');"
    ],
    "answer": "B",
    "title": "Question 9",
    "explanation": ""
  },
  {
    "content": "Refer to the code snippet below:\nLet array = [1, 2, 3, 4, 4, 5, 4, 4];\nFor (let i =0; i < array.length; i++)\nif (array[i] === 4) {\narray.splice(i, 1);\n}\n}\nWhat is the value of array after the code executes?",
    "options": ["A. [1, 2, 3, 4, 5, 4, 4]", "B. [1, 2, 3, 4, 4, 5, 4]", "C. [1, 2, 3, 5]", "D. [1, 2, 3, 4, 5, 4]"],
    "answer": "B",
    "title": "Question 10",
    "explanation": ""
  },
  {
    "content": "A developer wants to create an object from a function in the browser using the code below.\nWhat happens due to lack of the new keyword on line 02?",
    "options": [
      "A. Window. n is assigned the correct object.",
      "B. The a variable is assigned the correct object.",
      "C. Window. === name is assigned to ''hello'' and the variable a n remain undefined.",
      "D. The n variable is assigned the correct object but this- remains undefined."
    ],
    "answer": "C",
    "title": "Question 11",
    "explanation": ""
  },
  {
    "content": "Refer to the following code:\nWhich two statements could be inserted at line 17 to enable the function call on line 18?\nChoose 2 answers",
    "options": [
      "A. 1eo.prototype.roar = ( ) => ( console.log (They\\'re pretty good1'); );",
      "B. 1eo.roar = () => 9 (console.log('They\\'re pretty good1'); 1;",
      "C. Object.assign, assign( 1eo, trigger);",
      "D. Object,assign(1eo, tony) ;"
    ],
    "answer": "B,D",
    "title": "Question 12",
    "explanation": ""
  },
  {
    "content": "Why would a developer specify a package as the package.json as a deDepdelivery instead of a depdelivery?",
    "options": [
      "A. Other required packages depended on it for development.",
      "B. It should be bundled when the package is published.",
      "C. It is required by the application in production.",
      "D. It is only needed for local development and testing."
    ],
    "answer": "D",
    "title": "Question 13",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\n01 let car1 = new promise((_, reject) =>\n02 setTimeout(reject, 2000, \"Car 1 crashed in\"));\n03 let car2 = new Promise(resolve => setTimeout(resolve, 1500, \"Car 2\ncompleted\"));\n04 let car3 = new Promise(resolve => setTimeout (resolve, 3000, \"Car 3\nCompleted\"));\n05 Promise.race([car1, car2, car3])\n06 .then(value => (\n07 let result = $(value) the race. `;\n08 ))\n09 .catch( arr => (\n10 console.log(\"Race is cancelled.\", err);\n11 ));\nWhat is the value of result when Promise.race executes?",
    "options": ["A. Car 1 crashed in the race.", "B. Race is cancelled.", "C. Car 3 completed the race.", "D. Car 2 completed the race."],
    "answer": "D",
    "title": "Question 14",
    "explanation": ""
  },
  {
    "content": "Universal Container(UC) just launched a new landing page, but users complain that the\nwebsite is slow. A developer found some functions that cause this problem. To verify this, the\ndeveloper decides to do everything and log the time each of these three suspicious functions\nconsumes.\nconsole.time('Performance');\nmaybeAHeavyFunction();\nthisCouldTakeTooLong();\norMaybeThisOne();\nconsole.endTime('Performance');\nWhich function can the developer use to obtain the time spent by every one of the three\nfunctions?",
    "options": ["A. console.trace()", "B. console.timeStamp()", "C. console.getTime()", "D. console.timeLog()"],
    "answer": "D",
    "title": "Question 15",
    "explanation": ""
  },
  {
    "content": "Given the following code:\nWhat is the logged by the first four log statements?",
    "options": ["A. 0 1 2 2", "B. 0 1 1 2", "C. 0 0 1 2", "D. 0 1 2 3"],
    "answer": "B",
    "title": "Question 16",
    "explanation": ""
  },
  {
    "content": "A developer creates a class that represents a blog post based on the requirement that a\nPost should have a body author and view count.\nThe Code shown Below:\nClass Post {\n// Insert code here\nThis.body =body\nThis.author = author;\nthis.viewCount = viewCount;\n}\n}\nWhich statement should be inserted in the placeholder on line 02 to allow for a variable to be set\nto a new instanceof a Post with the three attributes correctly populated?",
    "options": [
      "A. Function Post (body, author, viewCount) {",
      "B. constructor() {",
      "C. constructor (body, author, viewCount) {",
      "D. super (body, author, viewCount) {"
    ],
    "answer": "C",
    "title": "Question 17",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nAsync funct on functionUnderTest(isOK) {\nIf (isOK) return 'OK' ;\nThrow new Error('not OK');\n)\nWhich assertion accuretely tests the above code?",
    "options": [
      "A. Console.assert (await functionUnderTest(true), ' not OK ') ",
      "B. Console.assert (await functionUnderTest(true), 'OK')",
      "C. Console.assert (await functionUnderTest(true), ' OK ')",
      "D. Console.assert (await functionUnderTest(true), ' not OK ')"
    ],
    "answer": "B",
    "title": "Question 18",
    "explanation": ""
  },
  {
    "content": "developer removes the HTML class attribute from the checkout button, so now it is\nsimply:\n<button>Checkout</button>.\nThere is a test to verify the existence of the checkout button, however it looks for a button with\nclass= \"blue\". The test fails because no such button is found.\nWhich type of test category describes this test?",
    "options": ["A. False positive", "B. True positive", "C. True negative", "D. False negative"],
    "answer": "D",
    "title": "Question 19",
    "explanation": ""
  },
  {
    "content": "Which statement can a developer apply to increment the browser's navigation history without a page refresh?\nWhich statement can a developer apply to increment the browser's navigation history without a page refresh?",
    "options": [
      "A. window.history.pushStare(newStateObject, ' ', null);",
      "B. window.history.replaceState(newStateObject,' ', null);",
      "C. window.history.pushState(newStateObject);",
      "D. window.history.state.push(newStateObject);"
    ],
    "answer": "B",
    "title": "Question 20",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nWhich assertion accurately tests the above code?",
    "options": [
      "A. Console, assert ( await functionalUnderTest (true) , 'not ok' )",
      "B. Console, assert ( await functionalUnderTest (true) , 'ok",
      "C. Console, assert (functionalUnderTest (true) , 'ok')",
      "D. Console, assert ( await functionalUnderTest (true) , 'not ok) )"
    ],
    "answer": "C",
    "title": "Question 21",
    "explanation": ""
  },
  {
    "content": "Refer to the following code:\nWhat is returned by the function call on line 13?",
    "options": ["A. Null value", "B. Undefined value.", "C. Undefined", "D. Line 13 throws an error."],
    "answer": "D",
    "title": "Question 22",
    "explanation": ""
  },
  {
    "content": "The developer wants to test the array shown:\nconst arr = Array(5).fill(0)\nWhich two tests are the most accurate for this array ?\nChoose 2 answers:",
    "options": [
      "A. console.assert (arr.length >0);",
      "B. console.assert( arr.length === 5 );",
      "C. console.assert(arr[0] === 0 && arr[ arr.length] === 0);",
      "D. arr.forEach(elem => console.assert(elem === 0)) ;"
    ],
    "answer": "B,D",
    "title": "Question 23",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nA developer needs to dispatch a custom event called update to send information about recordId.\nWhich two options could a developer insert at the placeholder in line 02 to achieve this? Choose 2 answers",
    "options": [
      "A. 'update' , '123abc'",
      "B. {type ; update ', recordId : '123abc')",
      "C. 'update', {\n         Detail ; {\n         recordId, '123abc\n         )\n         )",
      "D. 'update', ( recordId ; 123abc'\n         )"
    ],
    "answer": "C,D",
    "title": "Question 24",
    "explanation": ""
  },
  {
    "content": "A developer creates a simple webpage with an input field. When a user enters text in the input field and clicks the button, the actual value of the field must be displayed in the console.\nHere is the HTML file content:\n<input type =\" text\" value=\"Hello\" name =\"input\">\n<button type =\"button\" >Display </button>\nThe developer wrote the javascript code below:\nConst button = document.querySelector('button');\nbutton.addEvenListener('click', () => (\nConst input = document.querySelector('input');\nconsole.log(input.getAttribute('value'));\nWhen the user clicks the button, the output is always \"Hello\".\nWhat needs to be done make this code work as expected?",
    "options": [
      "A. Replace line 02 with button.addCallback(\"click\", function() {",
      "B. Replace line 04 with console.log(input .value);",
      "C. Replace line 02 with button.addEventListener(\"onclick\", function() {",
      "D. Replace line 03 with const input = document.getElementByName('input');"
    ],
    "answer": "B",
    "title": "Question 25",
    "explanation": ""
  },
  {
    "content": "Which option is a core Node;js module?",
    "options": ["A. locale", "B. Path", "C. Ios", "D. Memory"],
    "answer": "B,C",
    "title": "Question 26",
    "explanation": ""
  },
  {
    "content": "Given the requirement to refactor the code above to JavaScript class format, which class definition is correct?\nA)\nB)\nC)\nD)",
    "options": ["A. Option B", "B. Option D", "C. Option C", "D. Option A"],
    "answer": "D",
    "title": "Question 27",
    "explanation": ""
  },
  {
    "content": "Which two console logs output NaN?\nChoose 2 answers | |",
    "options": [
      "A. console.log(parseInt ' (\"two')) ;",
      "B. console.log(10 / Number('5) ) ;",
      "C. console.log(10 / 0);",
      "D. console.loeg(10 / 'five');"
    ],
    "answer": "A,D",
    "title": "Question 28",
    "explanation": ""
  },
  {
    "content": "Given the requirement to refactor the code above to JavaScript class format, which class definition is correct?\nA)\nB)\nC)\nD)",
    "options": ["A. Option B", "B. Option D", "C. Option C", "D. Option A"],
    "answer": "D",
    "title": "Question 29",
    "explanation": ""
  },
  {
    "content": "Which statement accurately describes the behavior of the async /swait keywords?",
    "options": [
      "A. The associated class contains some asynchronous functions.",
      "B. The associated function can only be called via asynchronous methods.",
      "C. The associated function sometimes returns a promise.",
      "D. The associated function will always return a promise."
    ],
    "answer": "D",
    "title": "Question 30",
    "explanation": ""
  },
  {
    "content": "What are two unique feature of function defined with a fat arror as compared to normal functional definition?\nChoose 2 answers",
    "options": [
      "A. The function uses the this from the enclosing scope.",
      "B. The function receives an argument that is always in scope, called parent this, which is the enclosing lexical scope",
      "C. If the function has a single expression in the function body, the expression will be evaluated and implicitly returned.",
      "D. The function generation its own this making it useful for separating the function's scope its enclosing scope"
    ],
    "answer": "C",
    "title": "Question 31",
    "explanation": ""
  },
  {
    "content": "Given the code below.\nWhat is logged to the console?",
    "options": ["A. 231", "B. 123", "C. 213", "D. 132"],
    "answer": "A",
    "title": "Question 32",
    "explanation": ""
  },
  {
    "content": "At Universal Containers, every team has its own way of copying JavaScript objects. The code Snippet shows an implementation from one team:\nFunction Person() {\nthis.firstName = \"John\";\nthis.lastName = 'Doe';\nThis.name =() => (\nconsole.log('Hello $(this.firstName) $(this.firstName)');\n)}\nConst john = new Person ();\nConst dan = JSON.parse(JSON.stringify(john));\ndan.firstName ='Dan';\ndan.name();\nWhat is the Output of the code execution?",
    "options": [
      "A. Hello John DOe",
      "B. Hello Dan Doe",
      "C. TypeError: dan.name is not a function",
      "D. TypeError: Assignment to constant variable."
    ],
    "answer": "C",
    "title": "Question 33",
    "explanation": ""
  },
  {
    "content": "A developer wants to set up a secure web server with Node.js. The developer creates a\ndirectory locally called app-server, and the first file is app-server/index.js\nWithout using any third-party libraries, what should the developer add to index.js to create the\nsecure web server?",
    "options": [
      "A. const https =require('https');",
      "B. const server =require('secure-server');",
      "C. const tls = require('tls');",
      "D. const http =require('http');"
    ],
    "answer": "A",
    "title": "Question 34",
    "explanation": ""
  },
  {
    "content": "A developer has two ways to write a function:\nOption A:\nfunction Monster() {\nThis.growl = () => {\nConsole.log (\"Grr!\");\n}\n}\nOption B:\nfunction Monster() {};\nMonster.prototype.growl =() => {\nconsole.log(\"Grr!\");\n}\nAfter deciding on an option, the developer creates 1000 monster objects.\nHow many growl methods are created with Option A Option B?",
    "options": [
      "A. 1000 growl method is created for Option A. 1 growl methods are created for Option B.",
      "B. 1 growl method is created regardless of which option is used.",
      "C. 1000 growl methods are created regardless of which option is used.",
      "D. 1 growl method is created for Option A. 1000 growl methods are created for Option B."
    ],
    "answer": "A",
    "title": "Question 35",
    "explanation": ""
  },
  {
    "content": "A developer is required to write a function that calculates the sum of elements in an\narray but is getting undefined every time the code is executed. The developer needs to find\nwhat is missing in the code below.\nConst sumFunction = arr => {\nReturn arr.reduce((result, current) => {\n//\nResult += current;\n//\n), 10);\n);\nWhich option makes the code work as expected?",
    "options": [
      "A. Replace line 05 with return result;",
      "B. Replace line 03 with if(arr.length == 0 ) ( return 0; )",
      "C. Replace line 04 with result = result +current;",
      "D. Replace line 02 with return arr.map(( result, current) => ("
    ],
    "answer": "A",
    "title": "Question 36",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nLet car1 = new Promise((_ , reject) =>\nsetTimeout(reject, 2000, \"car 1 crashed in\" =>\nLet car2 =new Promise(resolve => setTimeout(resolve, 1500, \"car 2 completed\")\nLet car3 =new Promise(resolve => setTimeout(resolve, 3000, \"car 3 completed\")\nPromise.race(( car1, car2, car3))\n.then (value => (\nLet result = '$(value) the race.';)}\n.catch(arr => {\nconsole.log(\"Race is cancelled.\", err);\n});\nWhat is the value of result when Promise.race executes?",
    "options": ["A. Car 2 completed the race.", "B. Car 1 crashed in the race.", "C. Car 3 completes the race", "D. Race is cancelled."],
    "answer": "A",
    "title": "Question 37",
    "explanation": ""
  },
  {
    "content": "A developer wants to leverage a module to print a price in pretty format, and has imported a method as shown below:\nImport printPrice from '/path/PricePrettyPrint.js';\nBased on the code, what must be true about the printPrice function of the PricePrettyPrint module for this import to work ?",
    "options": [
      "A. printPrice must be a multi exportc",
      "B. printPrice must be an all export",
      "C. printPrice must be the default export",
      "D. printPrice must be be a named export"
    ],
    "answer": "C",
    "title": "Question 38",
    "explanation": ""
  },
  {
    "content": "Given the following code:\ndocument.body.addEventListener(' click ', (event) => {\nif (/* CODE REPLACEMENT HERE */) {\nconsole.log('button clicked!');\n)\n});\nWhich replacement for the conditional statement on line 02 allows a developer to\ncorrectly determine that a button on page is clicked?",
    "options": ["A. e.nodeTarget ==this", "B. button.addEventListener('click')", "C. Event.clicked", "D. event.target.nodeName == 'BUTTON'"],
    "answer": "D",
    "title": "Question 39",
    "explanation": ""
  },
  {
    "content": "A developer is trying to handle an error within a function.\nWhich code segment shows the correct approach to handle an error without propagating it elsewhere?\nA)\nB)\nC)\nD)",
    "options": ["A. Option B", "B. Option A", "C. Option C", "D. Option D"],
    "answer": "D",
    "title": "Question 40",
    "explanation": ""
  },
  {
    "content": "A developer wants to define a function log to be used a few times on a single-file JavaScript script.\n01 // Line 1 replacement\n02 console.log('\"LOG:', logInput);\n03 }\nWhich two options can correctly replace line 01 and declare the function for use?\nChoose 2 answers",
    "options": ["A. const log = (logInput) => {", "B. function log = (logInput) {", "C. function leg(logInput) {", "D. const log(loginInput) {"],
    "answer": "A,C",
    "title": "Question 41",
    "explanation": ""
  },
  {
    "content": "A developer creates an object where its properties should be immutable and prevent properties from being added or modified.\nWhich method should be used to execute this business requirement?",
    "options": ["A. Object. filebase ( )", "B. Object. Lock ( )", "C. Object. real ( )", "D. Object const ( )"],
    "answer": "A",
    "title": "Question 42",
    "explanation": ""
  },
  {
    "content": "A developer has code that calculates a restaurant bill, but generates incorrect answers while testing the code:\nfunction calculateBill ( items ) {\nlet total = 0;\ntotal += findSubTotal(items);\ntotal += addTax(total);\ntotal += addTip(total);\nreturn total;\n}\nWhich option allows the developer to step into each function execution within calculateBill?",
    "options": [
      "A. Using the debugger command on line 05.",
      "B. Using the debugger command on line 03",
      "C. Wrapping findSubtotal in a console.log() method.",
      "D. Calling the console.trace (total) method on line 03."
    ],
    "answer": "A",
    "title": "Question 43",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nConst myFunction = arr => {\nReturn arr.reduce((result, current) =>{\nReturn result = current;\n}, 10};\n}\nWhat is the output of this function when called with an empty array ?",
    "options": ["A. Throws an error", "B. Returns 0", "C. Returns 10", "D. Returns NaN"],
    "answer": "C",
    "title": "Question 44",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nWhat value can a developer expect when referencing o,js,secondCity?",
    "options": ["A. 'new york'", "B. 'New York", "C. Undefined", "D. An error"],
    "answer": "A",
    "title": "Question 45",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nWhat is the value of foobDienu1 after the code executes?",
    "options": [
      "A. {'Pizza' , Burger' , French fries '}",
      "B. {'Pizza' , Burger' , French fries ' , garlic bread; }",
      "C. {'Garlic bread'}",
      "D. {'Garlic bread', Pizza' , Burger' , French fries'}"
    ],
    "answer": "B",
    "title": "Question 46",
    "explanation": ""
  },
  {
    "content": "A developer needs to debug a Node.js web server because a runtime error keeps occurring at one of the endpoints.\nThe developer wants to test the endpoint on a local machine and make the request against a local server to look at the behavior. In the source code, the server, js file will start the server. the developer wants to debug the Node.js server only using the terminal.\nWhich command can the developer use to open the CLI debugger in their current terminal window?",
    "options": ["A. node start inspect server,js", "B. node inspect server,js", "C. node -i server.js", "D. node server,js inspect"],
    "answer": "B",
    "title": "Question 47",
    "explanation": ""
  },
  {
    "content": "Refer to the following code block:\nWhat is the value of output after the code executes?",
    "options": ["A. 16", "B. 25", "C. 36", "D. 11"],
    "answer": "A",
    "title": "Question 48",
    "explanation": ""
  },
  {
    "content": "A developer is setting up a new Node.js server with a client library that is built using events and callbacks.\nThe library:\n* Will establish a web socket connection and handle receipt of messages to the server\n* Will be imported with require, and made available with a variable called we.\nThe developer also wants to add error logging if a connection fails.\nGiven this info, which code segment shows the correct way to set up a client with two events that listen at execution time?",
    "options": [
      "A. ws.connect (( ) => {\n         console.log('connected to client'); }).catch((error) => { console.log('ERROR' , error); }};",
      "B. ws.on ('connect', ( ) => {\n         console.log('connected to client'); ws.on('error', (error) => { console.log('ERROR' , error); });\n         });",
      "C. ws.on ('connect', ( ) => { console.log('connected to client'); }}; ws.on('error', (error) => { console.log('ERROR' , error); }};",
      "D. try{\n         ws.connect (( ) => {\n         console.log('connected to client'); });"
    ],
    "answer": "C",
    "title": "Question 49",
    "explanation": "} catch(error) { console.log('ERROR' , error); };\n }"
  },
  {
    "content": "Refer to the code below:\nWhich statement allows a developer to cancel the scheduled timed function?",
    "options": [
      "A. ClearTimeout (timerId) ;",
      "B. removeTimeout (timeFunction) ;",
      "C. removeTimeout (timerId) ;",
      "D. ClearTimeout (timeFunction);"
    ],
    "answer": "B",
    "title": "Question 50",
    "explanation": ""
  },
  {
    "content": "A developer has an ErrorMandler module that contains multiple functions.\nWhat kind of export should be leveraged so that multiple function can be used?",
    "options": ["A. Multi", "B. All", "C. default", "D. Named"],
    "answer": "D",
    "title": "Question 51",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nWhat are the value of objBook and newObBook respectively?",
    "options": [
      "A. ( author: ''Robert'', title JavaScript'' )\n         ( author: ''Robert'', title JavaScript'' )",
      "B. (author: ''Robert'' )\n         (Author: ''Robert '', title: JavaScript'')",
      "C. ( Title: JavaScript'')\n         ( Title: JavaScript'')",
      "D. author: ''Robert title ''javaScript'' ) undefined"
    ],
    "answer": "D",
    "title": "Question 52",
    "explanation": ""
  },
  {
    "content": "is below:\n<input type=\"file\" onchange=\"previewFile()\">\n<img src=\"\" height=\"200\" alt=\"Image Preview...\"/>\nThe JavaScript portion is:\n01 function previewFile(){\n02 const preview = document.querySelector('img');\n03 const file = document.querySelector('input[type=file]').files[0];\n04 //line 4 code\n05 reader.addEventListener(\"load\", () => {\n06 preview.src = reader.result;\n07 },false);\n08 //line 8 code\n09 }\nIn lines 04 and 08, which code allows the user to select an image from their local computer , and to display the image in the browser?",
    "options": [
      "A. 04 const reader = new FileReader();\n         08 if (file) URL.createObjectURL(file);",
      "B. 04 const reader = new File();\n         08 if (file) reader.readAsDataURL(file);",
      "C. 04 const reader = new File();\n         08 if (file) URL.createObjectURL(file);",
      "D. 04 const reader = new FileReader();\n         08 if (file) reader.readAsDataURL(file);"
    ],
    "answer": "D",
    "title": "Question 53",
    "explanation": ""
  },
  {
    "content": "A developer creates a class that represents a blog post based on the requirements that a Post should have a body, author, and view count. The code is shown below:\nWhich statement should be inserted in the placeholder on line 02 to allow for a variable to be sent to a new instance of a port with the three attributes correctly populated?",
    "options": [
      "A. Constructor ( ) (",
      "B. Function Post (body, author, viewCount) (",
      "C. Constructor (body, author, viewCount) (",
      "D. Super (body, author, viewCount) ("
    ],
    "answer": "C",
    "title": "Question 54",
    "explanation": ""
  },
  {
    "content": "Refer to the following code:\nWhat will the console when the button is clicked?",
    "options": ["A. Inner message ", "B. Outer message ", "C. Outer message", "D. Inner message"],
    "answer": "B",
    "title": "Question 55",
    "explanation": ""
  },
  {
    "content": "Refer to code below:\nFunction muFunction(reassign){\nLet x = 1;\nvar y = 1;\nif( reassign ) {\nLet x= 2;\nVar y = 2;\nconsole.log(x);\nconsole.log(y);}\nconsole.log(x);\nconsole.log(y);}\nWhat is displayed when myFunction(true) is called?",
    "options": ["A. 2 2 2 2", "B. 2 2 1 1", "C. 2 2 undefined undefined", "D. 2 2 1 2"],
    "answer": "D",
    "title": "Question 56",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nfunction foo () {\nconst a =2;\nfunction bat() {\nconsole.log(a);\n}\nreturn bar;\n}\nWhy does the function bar have access to variable a ?",
    "options": ["A. Inner function's scope", "B. Hoisting", "C. Outer function's scope", "D. Prototype chain"],
    "answer": "C",
    "title": "Question 57",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nLine 05 causes an error.\nWhat are the values of greeting and salutation once code completes?",
    "options": [
      "A. Greeting is Hello and salutation is Hello, Hello.",
      "B. Greeting is Goodbye and salutation is Hello, Hello.",
      "C. Greeting is Goodbye and salutation is I say Hello.",
      "D. Greeting is Hello and salutation is I say hello."
    ],
    "answer": "A",
    "title": "Question 58",
    "explanation": ""
  },
  {
    "content": "A developer wants to use a try...catch statement to catch any error that countSheep () may throw and pass it to a handleError () function.\nWhat is the correct implementation of the try...catch?\nA)\nB)\nC)\nD)",
    "options": ["A. Option ", "B. Option ", "C. Option", "D. Option "],
    "answer": "C",
    "title": "Question 59",
    "explanation": ""
  },
  {
    "content": "Given the code below:\nWhich method can be used to provide a visual representation of the list of users and to allow sorting by the name or email attribute?",
    "options": [
      "A. console.group(usersList) ;",
      "B. console.table(usersList) ;",
      "C. console.groupCol lapsed (usersList) ;",
      "D. console.info(usersList) ;"
    ],
    "answer": "A",
    "title": "Question 60",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\n01 const exec = (item, delay) =>{\n02 new Promise(resolve => setTimeout( () => resolve(item), delay)),\n03 async function runParallel() {\n04 Const (result1, result2, result3) = await Promise.all{\n05 [exec ('x', '100') , exec('y', 500), exec('z', '100')]\n06 );\n07 return `parallel is done: $(result1) $(result2)$(result3)`;\n08 }\n}\n}\nWhich two statements correctly execute the runParallel () function?\nChoose 2 answers",
    "options": [
      "A. runParallel () .then(data);",
      "B. Async runParallel () .then(data);",
      "C. runParallel () .then(function(data)\n         return data",
      "D. runParallel ( ). done(function(data){\n         return data;\n         });"
    ],
    "answer": "C,D",
    "title": "Question 61",
    "explanation": ""
  },
  {
    "content": "Given the following code:\nWhat is the output of line 02?",
    "options": ["A. ''x''", "B. ''null''", "C. ''object''", "D. ''Undefined''"],
    "answer": "C",
    "title": "Question 62",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nconsole.log(''start);\nPromise.resolve('Success') .then(function(value){\nconsole.log('Success');\n});\nconsole.log('End');\nWhat is the output after the code executes successfully?",
    "options": [
      "A. Start\n         End\n         Success",
      "B. End\n         Start\n         Success",
      "C. Success\n         Start\n         End",
      "D. Start\n         Success\n         End"
    ],
    "answer": "A",
    "title": "Question 63",
    "explanation": ""
  },
  {
    "content": "Refer to the HTML below:\n<p> The current status of an order: < span> id='' status '> In progress < /span> < /p> Which JavaScript Statement changes the text 'In Progress' to Completed'?",
    "options": [
      "A. Document, getElementById ('',status''), innerHTML = 'Completed' ;",
      "B. Document, getElementById (status'') , value = completed' ;",
      "C. Document, getElementById (''status''), innerHTML = 'Completed' ;",
      "D. Document, getElementById (''# status''), innerHTML = 'Completed' ;"
    ],
    "answer": "C",
    "title": "Question 64",
    "explanation": ""
  },
  {
    "content": "A developer is working on an ecommerce website where the delivery date is dynamically calculated based on the current day. The code line below is responsible for this calculation.\nConst deliveryDate = new Date ();\nDue to changes in the business requirements, the delivery date must now be today's date + 9 days.\nWhich code meets this new requirement?",
    "options": [
      "A. deliveryDate.setDate( Date.current () + 9);",
      "B. deliveryDate.setDate(( new Date ( )).getDate () +9);",
      "C. deliveryDate.date = Date.current () + 9;",
      "D. deliveryDate.date = new Date(+9) ;"
    ],
    "answer": "B",
    "title": "Question 65",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nAsync funct on functionUnderTest(isOK) {\nIf (isOK) return 'OK' ;\nThrow new Error('not OK');\n)\nWhich assertion accurately tests the above code?",
    "options": [
      "A. Console.assert (await functionUnderTest(true), ' not OK ')",
      "B. Console.assert (await functionUnderTest(true), ' not OK ') ",
      "C. Console.assert (await functionUnderTest(true), ' OK ')",
      "D. Console.assert (await functionUnderTest(true), 'OK')"
    ],
    "answer": "D",
    "title": "Question 66",
    "explanation": ""
  },
  {
    "content": "Given the expressions var1 and var2, what are two valid ways to return the concatenation of the two expressions and ensure it is string? Choose 2 answers",
    "options": ["A. string.concat (var1 +var2)", "B. String (var1) .concat (var2)", "C. var1.toString ( ) var2.toString ( )", "D. var1 + var2"],
    "answer": "A,C",
    "title": "Question 67",
    "explanation": ""
  },
  {
    "content": "What is the result of the code block?",
    "options": [
      "A. The console logs only 'flag'.",
      "B. The console logs 'flag' and another flag.",
      "C. The console logs 'flag' and then an error is thrown.",
      "D. An error is thrown."
    ],
    "answer": "C",
    "title": "Question 68",
    "explanation": ""
  },
  {
    "content": "developer wants to use a module named universalContainersLib and them call functions from it.\nHow should a developer import every function from the module and then call the fuctions foo and bar ?",
    "options": [
      "A. import * ad lib from '/path/universalContainersLib.js';\n         lib.foo();\n         lib.bar();",
      "B. import * from '/path/universalContaineraLib.js';\n         universalContainersLib.foo();\n         universalContainersLib.bar();",
      "C. import (foo, bar) from '/path/universalContainersLib.js';\n         foo();\n         bar();",
      "D. import all from '/path/universalContaineraLib.js';\n         universalContainersLib.foo();\n         universalContainersLib.bar();"
    ],
    "answer": "A",
    "title": "Question 69",
    "explanation": ""
  },
  {
    "content": "Universal Containers (UC) notices that its application that allows users to search for accounts makes a network request each time a key is pressed. This results in too many requests for the server to handle.\n* Address this problem, UC decides to implement a debounce function on string change handler.\nWhat are three key steps to implement this debounce function?\nChoose 3 answers:",
    "options": [
      "A. Ensure that the network request has the property debounce set to true.",
      "B. Store the timeId of the setTimeout last enqueued by the search string change handle.",
      "C. If there is an existing setTimeout and the search string change, allow the existing setTimeout to finish, and do not enqueue a new setTimeout.",
      "D. If there is an existing setTimeout and the search string changes, cancel the existing setTimeout using the persisted timerId and replace it with a new setTimeout.",
      "E. When the search string changes, enqueue the request within a setTimeout."
    ],
    "answer": "A,C,E",
    "title": "Question 70",
    "explanation": ""
  },
  {
    "content": "A developer wrote the following code:\n01 let X = object.value;\n02\n03 try {\n04 handleObjectValue(X);\n05 } catch (error) {\n06 handleError(error);\n07 }\nThe developer has a getNextValue function to execute after handleObjectValue(), but\ndoes not want to execute getNextValue() if an error occurs.\nHow can the developer change the code to ensure this behavior?",
    "options": [
      "A. 03 try {\n         04 handleObjectValue(x)\n         05 ........................",
      "B. 03 try{\n         04 handleObjectValue(x);\n         05 } catch(error){\n         06 handleError(error);\n         07 } finally {\n         08 getNextValue();\n         10 }",
      "C. 03 try{\n         04 handleObjectValue(x);\n         05 } catch(error){\n         06 handleError(error);\n         07 } then {\n         08 getNextValue();\n         09 }",
      "D. 03 try{\n         04 handleObjectValue(x);\n         05 } catch(error){\n         06 handleError(error);\n         07 }\n         08 getNextValue();"
    ],
    "answer": "A",
    "title": "Question 71",
    "explanation": ""
  },
  {
    "content": "A developer implements a function that adds a few values.\nWhich three options can the developer invoke for this function to get a return vale of 10? Choose 3 answers",
    "options": ["A. Sum (5) (5)", "B. Sum (10) ()", "C. Sum () (10)", "D. Sum (5, 5) ()", "E. Sum () (5, 5)"],
    "answer": "A,C,E",
    "title": "Question 72",
    "explanation": ""
  },
  {
    "content": "A developer creates a generic function to log custom messages In the console. To do this, the function below is implemented.\nWhich three console logging methods allow the use of string substitution in line 02?\nChoose 3 answers",
    "options": ["A. error", "B. Info", "C. Message", "D. Assert", "E. Log"],
    "answer": "A,C,D",
    "title": "Question 73",
    "explanation": ""
  },
  {
    "content": "A developer has a formatName function that takes two arguments, firstName and lastName and returns a string. They want to schedule the function to run once after five seconds.\nWhat is the correct syntax to schedule this function?",
    "options": [
      "A. setTimeout ('formatName', 5000, 'John\", \"Doe');",
      "B. setTimeout (formatName(), 5000, \"John\", \"BDoe\");",
      "C. setTimout(() => { formatName(\"John', 'Doe') }, 5000);",
      "D. setTimeout (formatName('John', ''Doe'), 5000);"
    ],
    "answer": "A",
    "title": "Question 74",
    "explanation": ""
  },
  {
    "content": "Refer to the following code that imports a module named Utills,\nWhich two implementations of Utill, je export foo and bar such that the code above runs without error?\nChoose 2 answers",
    "options": [
      "A. Const foo = ( ) => ( return 'foo; ; )\n         Const bar => => { return 'bar ';}\n         Export default foo, bar;",
      "B. //FooUtill.js and barUtils, js exist\n         Import (foo) from ,/Path/footUtils.js,:\n         Export (foo, bar)",
      "C. Const foo = () => ( return 'foo ' ; )\n         Const bar => ( return 'bar' ; )\n         Export (foo, bar)",
      "D. Export default class (\n         Foo ( ) ( return 'foo ,; )\n         Bar ( ) ( return ;bar ; )"
    ],
    "answer": "D",
    "title": "Question 75",
    "explanation": ""
  },
  {
    "content": "Which statement can a developer apply to increment the browser's navigation history without a page refesh?",
    "options": [
      "A. Window.history,state,push.(newStateObject, ' ' null;",
      "B. Window.history,state,push.(newStateObject);",
      "C. Window.history,pushState.(newStateObject, ' ', null)) ;",
      "D. Window.history,pushState.(newStateObject);"
    ],
    "answer": "A",
    "title": "Question 76",
    "explanation": ""
  },
  {
    "content": "Given the requirement to refactor the code above to JavaScript class format, which class definition is correct?",
    "options": ["A. ", "B. ", "C. ", "D. "],
    "answer": "C",
    "title": "Question 77",
    "explanation": ""
  },
  {
    "content": "A developer uses a parsed JSON string to work with user information as in the block below:\n01 const userInformation ={\n02 \" id \" : \"user-01\",\n03 \"email\" : \"[email protected]\",\n04 \"age\" : 25\nWhich two options access the email attribute in the object?\nChoose 2 answers",
    "options": ["A. userInformation(email)", "B. userInformation(\"email\")", "C. userInformation.get(\"email\")", "D. userInformation.email"],
    "answer": "B,D",
    "title": "Question 78",
    "explanation": ""
  },
  {
    "content": "A developer creates a generic function to log custom messages in the console. To do this,\nthe function below is implemented.\n01 function logStatus(status){\n02 console./*Answer goes here*/{'Item status is: %s', status};\n03 }\nWhich three console logging methods allow the use of string substitution in line 02?",
    "options": ["A. Info", "B. Assert", "C. Log", "D. Error", "E. Message"],
    "answer": "A,B,C",
    "title": "Question 79",
    "explanation": ""
  },
  {
    "content": "A developer has code that calculates a restaurant bill, but generates incorrect answers while testing the code.\nWhich option allows the developer to step into each function execution within calculateBill?",
    "options": [
      "A. Using the debugger command on line 05.",
      "B. Wrapping findsubtotal in a console .log method.",
      "C. Using the debugger command on line 03.",
      "D. Calling the console. Trace( total ) method on line 03."
    ],
    "answer": "C",
    "title": "Question 80",
    "explanation": ""
  },
  {
    "content": "A developer wrote a fizzbuzz function that when passed in a number, returns the following:\n* 'Fizz' if the number is divisible by 3.\n* 'Buzz' if the number is divisible by 5.\n* 'Fizzbuzz' if the number is divisible by both 3 and 5.\n* Empty string if the number is divisible by neither 3 or 5.\nWhich two test cases will properly test scenarios for the fizzbuzz function?\nChoose 2 answers",
    "options": [
      "A. let res = fizzbuzz(15);\n         console.assert ( res === ' fizzbuzz ' )",
      "B. let res = fizzbuzz(3);\n         console.assert ( res === ' buzz ' )",
      "C. let res = fizzbuzz(Infinity);\n         console.assert ( res === ' ' )",
      "D. let res = fizzbuzz(5);\n         console.assert ( res === ' ' );"
    ],
    "answer": "A,B,C",
    "title": "Question 81",
    "explanation": ""
  },
  {
    "content": "A developer is asked to fix some bugs reported by users. To do that, the developer adds a breakpoint for debugging.\nFunction Car (maxSpeed, color){\nThis.maxspeed =masSpeed;\nThis.color = color;\nLet carSpeed = document.getElementById(' CarSpeed');\nDebugger;\nLet fourWheels =new Car (carSpeed.value, 'red');\nWhen the code execution stops at the breakpoint on line 06, which two types of information are available in the browser console ?\nChoose 2 answers:",
    "options": [
      "A. The values of the carSpeed and fourWheels variables",
      "B. A variable displaying the number of instances created for the Car Object.",
      "C. The style, event listeners and other attributes applied to the carSpeed DOM element",
      "D. The information stored in the window.localStorage property"
    ],
    "answer": "C,D",
    "title": "Question 82",
    "explanation": ""
  },
  {
    "content": "Refer to the following array:\nLet arr1 = [1, 2, 3, 4, 5];\nWhich two lines of codes result in a second array, arr2, being created such that arr2 is not a reference to arr1? Choose 2 answers",
    "options": ["A. Let arr2 = arr1;", "B. Let arr2 = arr1 sort ();", "C. Let arr2 = Array. From (arr1) ;", "D. Let arr2 = arr1 .slice (0, 5);"],
    "answer": "A,B",
    "title": "Question 83",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nA developer uses a client that makes a GET request that uses a promise to handle the request, getRequest returns a promise.\nWhich code modification can the developer make to gracefully handle an error?\nA)\nB)\nC)\nD)",
    "options": ["A. Option B", "B. Option C", "C. Option D", "D. Option A"],
    "answer": "D",
    "title": "Question 84",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nlet sayHello = () => {\nconsole.log ('Hello, world!');\n};\nWhich code executes sayHello once, two minutes from now?",
    "options": [
      "A. delay(sayHello, 12000);",
      "B. setTimeout(sayHello, 12000);",
      "C. setTimeout(sayHello(), 12000);",
      "D. setInterval(sayHello, 12000);"
    ],
    "answer": "B",
    "title": "Question 85",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nLet str = 'javascript';\nStr[0] = 'J';\nStr[4] = 'S';\nAfter changing the string index values, the value of str is 'javascript'. What is the reason for this value:",
    "options": [
      "A. Primitive values are immutable.",
      "B. Non-primitive values are mutable.",
      "C. Primitive values are mutable.",
      "D. Non-primitive values are immutable."
    ],
    "answer": "A",
    "title": "Question 86",
    "explanation": ""
  },
  {
    "content": "Why would a developer specify a package.jason as a developed forge instead of a dependency ?",
    "options": [
      "A. It should be bundled when the package is published.",
      "B. It is only needed for local development and testing.",
      "C. It is required by the application in production.",
      "D. Other required packages depend on it for development."
    ],
    "answer": "B",
    "title": "Question 87",
    "explanation": ""
  },
  {
    "content": "A developer wants to use a module named universalContainerLib and then call functions from it.\nHow should a developer import every function from the module and then call the functions foo and bar?",
    "options": [
      "A. import + from '/path/universalContainerLib.js''\n         universalContainersLib.foo( ) ;\n         universalContainersLib bar ( ) :",
      "B. import - as lib from '/path/universalContainerLib.js''\n         lib.foo( ) ;\n         lib. bar ( ) ;",
      "C. import (foo,bar) from '/path/universalContainerLib.js''\n         foo ( ) ;\n         bar ( ) ;",
      "D. import all from '/path/universalContainerLib.js''\n         universalContainersLib.foo( ) ;\n         universalContainersLib bar ( ) :"
    ],
    "answer": "B",
    "title": "Question 88",
    "explanation": ""
  },
  {
    "content": "A developer has two ways to write a function:\nAfter deciding on an option, the developer creates 1000 monster objects.\nHow many growl methods are created with Option A and Option B?",
    "options": [
      "A. 1000 growl methods are created regardless of which option is used.",
      "B. 1000 growl methods are created for Option A. 1 growl method is created for Option B.",
      "C. 1 growl method is created regardless of which option is used.",
      "D. 1 growl method is created for Option A. 1000 growl methods are created for Option B."
    ],
    "answer": "B",
    "title": "Question 89",
    "explanation": ""
  },
  {
    "content": "A developer at Universal Containers creates a new landing page based on HTML, CSS, and\nJavaScript TO ensure that visitors have a good experience, a script named personaliseContext\nneeds to be executed when the webpage is fully loaded (HTML content and all related files ), in\norder to do some custom initialization.\nWhich statement should be used to call personalizeWebsiteContent based on the above\nbusiness requirement?",
    "options": [
      "A. Document.addEventListener('''DOMContextLoaded' , personalizeWebsiteContext);",
      "B. window.addEventListener('onload', personalizeWebsiteContext);",
      "C. document.addEventListener(''onDOMContextLoaded', personalizeWebsiteContext);",
      "D. window.addEventListener('load',personalizeWebsiteContext);"
    ],
    "answer": "D",
    "title": "Question 90",
    "explanation": ""
  },
  {
    "content": "Refer to the following code:\nWhich statement should be added to line 09 for the code to display. The truck 123AB has a weight of 5000 Ib. '?",
    "options": ["A. This .plate = plate;", "B. Vehicle.plate = plate", "C. Super.plate = plate;", "D. Super = (plate ) ;"],
    "answer": "A,B,D",
    "title": "Question 91",
    "explanation": ""
  },
  {
    "content": "Refer to the following array:\nLet arr1 = [ 1, 2, 3, 4, 5 ];\nWhich two lines of code result in a second array, arr2 being created such that arr2 is not a reference to arr1?",
    "options": ["A. Let arr2 = arr1;", "B. Let arr2 = arr1.sort();", "C. Let arr2 = Array.from(arr1);", "D. Let arr2 = arr1.slice(0, 5);"],
    "answer": "C,D",
    "title": "Question 92",
    "explanation": ""
  },
  {
    "content": "Which statement accurately describes an aspect of promises?",
    "options": [
      "A. .then ( ) manipulates and returns the original promise.",
      "B. Agruments for the callback function passed to .then ( ) are optional.",
      "C. In a , them ( ) function, returning results is not necessary since callback will catch the result of a previous promise.",
      "D. .Them ( ) cannot be added after a catch."
    ],
    "answer": "B",
    "title": "Question 93",
    "explanation": ""
  },
  {
    "content": "Refer to the following code that imports a module named utils:\nimport (foo, bar) from '/path/Utils.js';\nfoo() ;\nbar() ;\nWhich two implementations of Utils.js export foo and bar such that the code above runs without error?\nChoose 2 answers",
    "options": [
      "A. // FooUtils.js and BarUtils.js exist\n         Import (foo) from '/path/FooUtils.js';\n         Import (boo) from ' /path/NarUtils.js';",
      "B. const foo = () => { return 'foo' ; }\n         const bar = () => { return 'bar' ; }\n         export { bar, foo }",
      "C. Export default class {\n         foo() { return 'foo' ; }\n         bar() { return 'bar' ; }\n         }",
      "D. const foo = () => { return 'foo';}\n         const bar = () => {return 'bar'; }\n         Export default foo, bar;"
    ],
    "answer": "B,C",
    "title": "Question 94",
    "explanation": ""
  },
  {
    "content": "Refer to code below:\nfunction Person() {\nthis.firstName = 'John';\n}\nPerson.prototype ={\nJob: x => 'Developer'\n};\nconst myFather = new Person();\nconst result =myFather.firstName + ' ' + myFather.job();\nWhat is the value of the result after line 10 executes?",
    "options": ["A. Undefined Developer", "B. John undefined", "C. John Developer", "D. Error: myFather.job is not a function"],
    "answer": "C",
    "title": "Question 95",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nLet car1 = new Promise((_ , reject) =>\nsetTimeout(reject, 2000, \"car 1 crashed in\" =>\nLet car2 =new Promise(resolve => setTimeout(resolve, 1500, \"car 2 completed\") Let car3 =new Promise(resolve => setTimeout(resolve, 3000, \"car 3 completed\") Promise.race(( car1, car2, car3))\n.then (value => (\nLet result = '$(value) the race.';)}\n.catch(arr => {\nconsole.log(\"Race is cancelled.\", err);\n});\nWhat is the value of result when Promise.race executes?",
    "options": ["A. Car 3 completes the race", "B. Race is cancelled.", "C. Car 2 completed the race.", "D. Car 1 crashed in the race."],
    "answer": "C",
    "title": "Question 96",
    "explanation": ""
  },
  {
    "content": "Which three browser specific APIs are available for developer to persist data between page loads?\nChoose 3 answers",
    "options": ["A. localStorage", "B. cookies", "C. IIFEs", "D. global variables", "E. indexedDB"],
    "answer": "A,C,E",
    "title": "Question 97",
    "explanation": ""
  },
  {
    "content": "The developer wants to test this code:\nConst toNumber =(strOrNum) => strOrNum;\nWhich two tests are most accurate for this code?\nChoose 2 answers",
    "options": [
      "A. console.assert(toNumber('-3') < 0);",
      "B. console.assert(Number.isNaN(toNumber()));",
      "C. console.assert(toNumber('2') === 2);",
      "D. console.assert(toNumber () === NaN);"
    ],
    "answer": "A,C",
    "title": "Question 98",
    "explanation": ""
  },
  {
    "content": "A developer receives a comment from the Tech lead that the code below gives an error.\nWhich line edit should be made to make this code run?",
    "options": ["A. 01 let monthname = 'July ';", "B. 02 const year = 2020;", "C. 02 let year = 2019 ;", "D. 03 if (year == 2019) ("],
    "answer": "B",
    "title": "Question 99",
    "explanation": ""
  },
  {
    "content": "is below:\n<input type=\"file\" onchange=\"previewFile()\">\n<img src=\"\" height=\"200\" alt=\"Image Preview...\"/>\nThe JavaScript portion is:\n01 function previewFile(){\n02 const preview = document.querySelector('img');\n03 const file = document.querySelector('input[type=file]').files[0];\n04 //line 4 code\n05 reader.addEventListener(\"load\", () => {\n06 preview.src = reader.result;\n07 },false);\n08 //line 8 code\n09 }\nIn lines 04 and 08, which code allows the user to select an image from their local\ncomputer , and to display the image in the browser?",
    "options": [
      "A. 04 const reader = new File();\n         08 if (file) URL.createObjectURL(file);",
      "B. 04 const reader = new FileReader();\n         08 if (file) reader.readAsDataURL(file);",
      "C. 04 const reader = new File();\n         08 if (file) reader.readAsDataURL(file);",
      "D. 04 const reader = new FileReader();\n         08 if (file) URL.createObjectURL(file);"
    ],
    "answer": "B",
    "title": "Question 100",
    "explanation": ""
  },
  {
    "content": "A developer is leading the creating of a new browser application that will server a single page application. The team wants to use a new web framework Minialist.js. The lead developer wants to advocate for a more seasoned wen framework that already has a community around it.\nWhich two frameworks should the load developer advocate for?",
    "options": ["A. Vue", "B. Koa", "C. Angular", "D. Express"],
    "answer": "C,D",
    "title": "Question 101",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nFunction changeValue(obj) {\nObj.value = obj.value/2;\n}\nConst objA = (value: 10);\nConst objB = objA;\nchangeValue(objB);\nConst result = objA.value;\nWhat is the value of result after the code executes?",
    "options": ["A. Undefined", "B. 5", "C. Nan", "D. 10"],
    "answer": "B",
    "title": "Question 102",
    "explanation": ""
  },
  {
    "content": "A team that works on a big project uses npm to deal with the project's dependencies.\nA developer added a dependency to manipulated dates and pushed the updates to the remote repository. The rest of the team complains that the dependency does not get download when they execute npm install.\nWhich two reason could be possible explanation for this?",
    "options": [
      "A. The developer added the dependency as a dev dependency, and NOOK_ENV is set to production.",
      "B. The developer added the dependency as a dev dependency, and NODK_ENV is set to production.",
      "C. The developer missed the option -ssve when adding the dependency.",
      "D. The developer missed the option - add when adding the dependency."
    ],
    "answer": "A,B,C",
    "title": "Question 103",
    "explanation": ""
  },
  {
    "content": "Refer to the code snippet:\nA developer writes this code to return a message to a user attempting to register a new username. If the username is available, a variable named msg is declared and assigned a value on line 03.\nWhat is the return of msg when getivelibilityMessage ('' bewUserName') is executed and getAvailability (''newUserName'') returns false?",
    "options": ["A. ''Username available''", "B. ''msg is not defined''", "C. undefined", "D. ''newUsername''"],
    "answer": "C",
    "title": "Question 104",
    "explanation": ""
  },
  {
    "content": "A developer writers the code below to calculate the factorial of a given number.\nFunction factorial(number) {\nReturn number + factorial(number -1);\n}\nfactorial(3);\nWhat is the result of executing line 04?",
    "options": ["A. 0", "B. 6", "C. -Infinity", "D. RuntimeError"],
    "answer": "D",
    "title": "Question 105",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nWhat is the output after the code executes?",
    "options": [
      "A. undefined",
      "B. ReferenceError: eyeColor is not defined",
      "C. Developer",
      "D. ReferenceError: assignment to undeclared variable ''Person''"
    ],
    "answer": "A",
    "title": "Question 106",
    "explanation": ""
  },
  {
    "content": "A developer wants to create a simple image upload in the browser using the File API. The HTML is below:\nThe JavaScript portion is:\nIn lines 04 and 08, which code allows the user to select an image from their local computer, and to display the image in the browser?",
    "options": [
      "A. 04 const reader = new FileReader ( ) ;\n         08 if (file) URL , createObjectURL (file) ;",
      "B. 04 const reader = new FileReader ( ) ;\n         08 if (file) reader , createAsDataURL (file) ;",
      "C. 04 const reader = new File ( ) ;\n         08 if (file) URL , createObjectURL (file) ;",
      "D. 04 const reader = new File ( ) ;\n         08 if (file) ,reader, readerAsDataURL (file) ;"
    ],
    "answer": "C",
    "title": "Question 107",
    "explanation": ""
  },
  {
    "content": "Refer to the expression below:\nLet x = ('1' + 2) == (6 + 2) ;\nHow should this expression be modified to ensure that a evaluated to false?",
    "options": [
      "A. Let x = (1' + '2') == (6 + 2) ;",
      "B. Let x = (1' + '2') === (6 + 2) ;",
      "C. Let x = (1' + '2') == ('6' / 2) ;",
      "D. Let x = (1' + '2') === (6 / 2) ;"
    ],
    "answer": "B",
    "title": "Question 108",
    "explanation": ""
  },
  {
    "content": "Refer to following code:\nclass Vehicle {\nconstructor(plate) {\nThis.plate =plate;\n}\n}\nClass Truck extends Vehicle {\nconstructor(plate, weight) {\n//Missing code\nThis.weight = weight;\n}\ndisplayWeight() {\nconsole.log('The truck ${this.plate} has a weight of ${this.weight} lb.');}} Let myTruck = new Truck('123AB', 5000); myTruck.displayWeight(); Which statement should be added to line 09 for the code to display 'The truck 123AB has a weight of 5000lb.'?",
    "options": ["A. Super.plate =plate;", "B. Vehicle.plate = plate;", "C. This.plate =plate;", "D. super(plate);"],
    "answer": "D",
    "title": "Question 109",
    "explanation": ""
  },
  {
    "content": "A developer implements and calls the following code when an application state change occurs:\nIf the back button is clicked after this method is executed, what can a developer expect?",
    "options": [
      "A. The page reloads and all JavaScript is reinitialized.",
      "B. A navigate event is fired with a state properly that details previous application state.",
      "C. The page is navigated away from and previous page in the browser's history is loaded.",
      "D. A popstate event is fired with a state properly that details the application's last state."
    ],
    "answer": "C",
    "title": "Question 110",
    "explanation": ""
  },
  {
    "content": "Given the following code:\nis the output of line 02?",
    "options": ["A. ''x''", "B. ''undefined''", "C. ''null'''", "D. ''object''"],
    "answer": "D",
    "title": "Question 111",
    "explanation": ""
  },
  {
    "content": "A developer creates a new web server that uses Node.js. It imports a server library that uses events and callbacks for handling server functionality.\nThe server library is imported with require and is made available to the code by a variable named server. The developer wants to log any issues that the server has while booting up.\nGiven the code and the information the developer has, which code logs an error at boot time with an event?\nA)\nB)\nC)\nD)",
    "options": ["A. Option B", "B. Option C", "C. Option A", "D. Option D"],
    "answer": "B",
    "title": "Question 112",
    "explanation": ""
  },
  {
    "content": "Refer to the HTML below:\n<div id=\"main\">\n<ul>\n<li>Leo</li>\n<li>Tony</li>\n<li>Tiger</li>\n</ul>\n</div>\nWhich JavaScript statement results in changing \" Tony\" to \"Mr. T.\"?",
    "options": [
      "A. document.querySelector('$main li:second-child').innerHTML = ' Mr. T. ';",
      "B. document.querySelector('$main li:nth-child(2)'),innerHTML = ' Mr. T. ';",
      "C. document.querySelector('$main li.Tony').innerHTML = ' Mr. T. ';",
      "D. document.querySelectorAll('$main $TONY').innerHTML = ' Mr. T. ';"
    ],
    "answer": "B",
    "title": "Question 113",
    "explanation": ""
  },
  {
    "content": "developer wants to use a module named universalContainersLib and them call functions\nfrom it.\nHow should a developer import every function from the module and then call the fuctions foo\nand bar ?",
    "options": [
      "A. import * from '/path/universalContaineraLib.js';\n         universalContainersLib.foo();\n         universalContainersLib.bar();",
      "B. import all from '/path/universalContaineraLib.js';\n         universalContainersLib.foo();\n         universalContainersLib.bar();",
      "C. import (foo, bar) from '/path/universalContainersLib.js';\n         foo();\n         bar();",
      "D. import * ad lib from '/path/universalContainersLib.js';\n         lib.foo();\n         lib.bar();"
    ],
    "answer": "D",
    "title": "Question 114",
    "explanation": ""
  },
  {
    "content": "Given the code below:\n01 function GameConsole (name) {\n02 this.name = name;\n03 }\n04\n05 GameConsole.prototype.load = function(gamename) {\n06 console.log( ` $(this.name) is loading a game : $(gamename) ...`);\n07 )\n08 function Console 16 Bit (name) {\n09 GameConsole.call(this, name) ;\n10 }\n11 Console16bit.prototype = Object.create ( GameConsole.prototype) ;\n12 //insert code here\n13 console.log( ` $(this.name) is loading a cartridge game : $(gamename) ...`);\n14 }\n15 const console16bit = new Console16bit(' SNEGeneziz ');\n16 console16bit.load(' Super Nonic 3x Force ');\nWhat should a developer insert at line 15 to output the following message using the\nmethod ?\n> SNEGeneziz is loading a cartridge game: Super Monic 3x Force . . .",
    "options": [
      "A. Console16bit = Object.create(GameConsole.prototype).load = function\n         (gamename) {",
      "B. Console16bit.prototype.load = function(gamename) {",
      "C. Console16bit.prototype.load(gamename) {",
      "D. Console16bit.prototype.load(gamename) = function() {"
    ],
    "answer": "B",
    "title": "Question 115",
    "explanation": ""
  },
  {
    "content": "A developer is asked to fix some bugs reported by users. To do that, the developer adds a breakpoint for debugging.\nWhen the code execution stops at the breakpoint on line 06, which two types of information are available In the browser console? Choose 2 answers",
    "options": [
      "A. The information stored in the window.localStorage property.",
      "B. A variable's displaying the number of instances created for the Car object.",
      "C. The style, event listeners and other attributes applied to the carSpeed DOM element.",
      "D. The value of the carSpeed and fourWheel variables"
    ],
    "answer": "A,C",
    "title": "Question 116",
    "explanation": ""
  },
  {
    "content": "Teams at Universal Containers (UC) work on multiple JavaScript projects at the same time.\nUC is thinking about reusability and how each team can benefit from the work of others.\nGoing open-source or public is not an option at this time.\nWhich option is available to UC with npm?",
    "options": [
      "A. Private registries are not supported by npm, but packages can be installed via URL.",
      "B. Private registries are not supported by npm, but packages can be installed via git.",
      "C. Private packages are not supported, but they can use another package manager like\n         yarn.",
      "D. Private packages can be scored, and scopes can be associated to a private\n         registries."
    ],
    "answer": "D",
    "title": "Question 117",
    "explanation": ""
  },
  {
    "content": "Which option is true about the strict mode in imported modules?",
    "options": [
      "A. Imported modules are in strict model whether you declare them as such or not.",
      "B. You can only reference notStrict () functions from the imported module.",
      "C. Add the statement use strict = false, before any other statements In the module to enable not-strict mode.",
      "D. Add the statement use non-strict; before any other statement in the module to enable not strict mode."
    ],
    "answer": "B",
    "title": "Question 118",
    "explanation": ""
  },
  {
    "content": "A developer implements a function that adds a few values.\nFunction sum(num) {\nIf (num == undefined) {\nNum =0;\n}\nReturn function( num2, num3){\nIf (num3 === undefined) {\nNum3 =0 ;\n}\nReturn num + num2 + num3;\n}\n}\nWhich three options can the developer invoke for this function to get a return value of 10 ?\nChoose 3 answers",
    "options": ["A. sum(5)(5)", "B. sum() (5, 5)", "C. Sum () (20)", "D. sum(10) ()", "E. Sum (5, 5) ()"],
    "answer": "A,B",
    "title": "Question 119",
    "explanation": ""
  },
  {
    "content": "Refer to code below:\nLet a ='a';\nLet b;\n// b = a;\nconsole.log(b);\nWhat is displayed when the code executes?",
    "options": ["A. A", "B. ReferenceError: b is not defined", "C. Null", "D. Undefined"],
    "answer": "D",
    "title": "Question 120",
    "explanation": ""
  },
  {
    "content": "Which code statement below correctly persists an objects in local Storage ?",
    "options": [
      "A. const setLocalStorage = (storageKey, jsObject) => {\n         window.localStorage.setItem(storageKey, JSON.stringify(jsObject));\n         }",
      "B. const setLocalStorage = ( jsObject) => {\n         window.localStorage.connectObject(jsObject));\n         }",
      "C. const setLocalStorage = ( jsObject) => {\n         window.localStorage.setItem(jsObject);\n         }",
      "D. const setLocalStorage = (storageKey, jsObject) => {\n         window.localStorage.persist(storageKey, jsObject);\n         }"
    ],
    "answer": "A",
    "title": "Question 121",
    "explanation": ""
  },
  {
    "content": "The developer wants to test the code:\nConst toNumber = (strOrNum) => + strOrNum;\nWhich two tests are most accurate for this code? Choose 2 answers",
    "options": [
      "A. Console. Assert (Number,isNaN (toNumber ( ) ));",
      "B. Console.assert (toNumber ('2') === 2 ) ;",
      "C. Console,assert (toNumber ( '-3') < 0);",
      "D. Console,assert (toNumber ( ) === NaN ) ;"
    ],
    "answer": "B,D",
    "title": "Question 122",
    "explanation": ""
  },
  {
    "content": "Which statement parses successfully?",
    "options": ["A. JSON.parse (\"foo\");", "B. JSON.parse (\"\"foo'\");", "C. JSON. parse (\"\"foo\"');", "D. JSON.parse (\"foo\"); "],
    "answer": "C",
    "title": "Question 123",
    "explanation": ""
  },
  {
    "content": "A developer wants to literate through an array of objects and count the objects whose property value, name, start with the letter N. const arrobj - [{''name ''t ''Zach''}, { ''name t Kate'') , ( ''name Alice'') < ( ''name'' t ''Bob'') , (''name'' t ''Nathan) , (''name'' t ''Nathandle1'')] Refer to the code snippet below:\nWhich missing lines 02 and 03 return the correct count?",
    "options": [
      "A. Comst sum = curr. Name startsWith ('N') 7 1 : 0\n         Return acc + sum;",
      "B. Conset sun + curr. StartsWith ('N') 7 1 : 1;\n         Return acc + sum ;",
      "C. Comst sum = curr. name startsWith ('N') 7 1 : 0;\n         Return curr + sum;",
      "D. Const sum = curr. name startsWith ('N') 7 1 : 0;\n         Return curr + sum;"
    ],
    "answer": "A",
    "title": "Question 124",
    "explanation": ""
  },
  {
    "content": "Given the code below:\nFunction myFunction(){\nA =5;\nVar b =1;\n}\nmyFunction();\nconsole.log(a);\nconsole.log(b);\nWhat is the expected output?",
    "options": [
      "A. Both lines 08 and 09 are executed, but values outputted are undefined.",
      "B. Line 08 outputs the variable, but line 09 throws an error.",
      "C. Both lines 08 and 09 are executed, and the variables are outputted.",
      "D. Line 08 thrones an error, therefore line 09 is never executed."
    ],
    "answer": "B",
    "title": "Question 125",
    "explanation": ""
  },
  {
    "content": "A developer is working on an ecommerce website where the delivery date is dynamically\ncalculated based on the current day. The code line below is responsible for this calculation.\nConst deliveryDate = new Date ();\nDue to changes in the business requirements, the delivery date must now be today's\ndate + 9 days.\nWhich code meets this new requirement?",
    "options": [
      "A. deliveryDate.setDate(( new Date ( )).getDate () +9);",
      "B. deliveryDate.date = Date.current () + 9;",
      "C. deliveryDate.setDate( Date.current () + 9);",
      "D. deliveryDate.date = new Date(+9) ;"
    ],
    "answer": "A",
    "title": "Question 126",
    "explanation": ""
  },
  {
    "content": "Refer to the following code:\nfunction test (val) {\nIf (val === undefined) {\nreturn 'Undefined values!' ;\n}\nif (val === null) {\nreturn 'Null value! ';\n}\nreturn val;\n}\nLet x;\ntest(x);\nWhat is returned by the function call on line 13?",
    "options": ["A. 'Undefined values!'", "B. Undefined", "C. Line 13 throws an error.", "D. 'Null value!'"],
    "answer": "A",
    "title": "Question 127",
    "explanation": ""
  },
  {
    "content": "Given the requirement to refactor the code above to JavaScript class format, which class\ndefinition is correct?\nA)\nB)\nC)\nD)",
    "options": ["A. Option C", "B. Option A", "C. Option B", "D. Option D"],
    "answer": "B",
    "title": "Question 128",
    "explanation": ""
  },
  {
    "content": "Which function should a developer use to repeatedly execute code at a fixed time interval?",
    "options": ["A. setTimeout", "B. setPeriod", "C. setInterval", "D. setInterim"],
    "answer": "C",
    "title": "Question 129",
    "explanation": ""
  },
  {
    "content": "Which statement accurately describes an aspect of promises?",
    "options": [
      "A. In a.then() function, returning results is not necessary since callbacks will catch the result of a previous promise.",
      "B. .then() manipulates and returns the original promise.",
      "C. Arguments for the callback function passed to .then() are optional.",
      "D. .then() cannot be added after a catch."
    ],
    "answer": "C",
    "title": "Question 130",
    "explanation": ""
  },
  {
    "content": "A developer wants to create an object from a function in the browser using the code below:\nFunction Monster() { this.name = 'hello' };\nConst z = Monster();\nWhat happens due to lack of the new keyword on line 02?",
    "options": [
      "A. The z variable is assigned the correct object but this.name remains undefined.",
      "B. Window.name is assigned to 'hello' and the variable z remains undefined.",
      "C. Window.m is assigned the correct object.",
      "D. The z variable is assigned the correct object."
    ],
    "answer": "B",
    "title": "Question 131",
    "explanation": ""
  },
  {
    "content": "A test has a dependency on database. query. During the test, the dependency is replaced with an object called database with the method,\nCalculator query, that returns an array. The developer does not need to verify how many times the method has been called.\nWhich two test approaches describe the requirement?\nChoose 2 answers",
    "options": ["A. Stubbing", "B. Black box", "C. White box", "D. Substitution"],
    "answer": "C,D",
    "title": "Question 132",
    "explanation": ""
  },
  {
    "content": "Given code below:\nsetTimeout (() => (\nconsole.log(1);\n). 0);\nconsole.log(2);\nNew Promise ((resolve, reject )) = > (\nsetTimeout(() => (\nreject(console.log(3));\n). 1000);\n)).catch(() => (\nconsole.log(4);\n));\nconsole.log(5);\nWhat is logged to the console?",
    "options": ["A. 2 1 4 3 5", "B. 1 2 4 3 5", "C. 2 5 1 3 4", "D. 1 2 5 3 4"],
    "answer": "C",
    "title": "Question 133",
    "explanation": ""
  },
  {
    "content": "Refer to the following array:\nLet arr = [1, 2, 3, 4, 5];\nWhich three options result in x evaluating as (3, 4, 5)?\nChoose 3 answers",
    "options": [
      "A. Let x = arr.aplice (2, 3);",
      "B. Let x = arr. Slince (2, 3);",
      "C. Let x = arr.alice (2) ;",
      "D. Let x = arr.filter( (a) => ( a < 2)) ;",
      "E. Let x = arr.filter( (a) => )return a > 2 )) ;"
    ],
    "answer": "A,C,E",
    "title": "Question 134",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nA developer import a library that creates a web server. the imported library uses events and callback to start the server.\nWhich code should be inserted at line 03 to set up an event and start the web server?",
    "options": [
      "A. Server. on ('connet' , (port) => (\n         Console.log (Listening on' port);\n         }};",
      "B. Server .start();",
      "C. server ( (port) => (\n         Console.log ('Listening on' , port) ;\n         }};",
      "D. server( );"
    ],
    "answer": "C",
    "title": "Question 135",
    "explanation": ""
  },
  {
    "content": "Given the HTML below:\nWhich statement adds the priority-account CSS class to the Unversal Containers row?",
    "options": [
      "A. Document. queryselector ('# row-uc') ,classes. Push (' priority-account');",
      "B. Document. querySelector ( 'row-uc') . classList. Add ( 'pariority-account') ;",
      "C. Document. getElementById ( 'row-uc') addClass ( ' priority-account');",
      "D. Document. querySelectorAll ( '# row-uc ') .classList. add ('priority-account');"
    ],
    "answer": "B",
    "title": "Question 136",
    "explanation": ""
  },
  {
    "content": "A team that works on a big project uses npm to deal with projects dependencies.\nA developer added a dependency does not get downloaded when they execute npm install.\nWhich two reasons could be possible explanations for this?\nChoose 2 answers",
    "options": [
      "A. The developer added the dependency as a dev dependency, and NODE_ENV is set to production.",
      "B. The developer missed the option --save when adding the dependency.",
      "C. The developer added the dependency as a dev dependency, and NODE_ENV Is set to production.",
      "D. The developer missed the option --add when adding the dependency."
    ],
    "answer": "A,B,C",
    "title": "Question 137",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\nConst pi = 3.1415326,\nWhat is the data type of pi?",
    "options": ["A. Double", "B. Number", "C. Decimal", "D. Float"],
    "answer": "B",
    "title": "Question 138",
    "explanation": ""
  },
  {
    "content": "Universal Container(UC) just launched a new landing page, but users complain that the website is slow. A developer found some functions that cause this problem. To verify this, the developer decides to do everything and log the time each of these three suspicious functions consumes.\nconsole.time('Performance');\nmaybeAHeavyFunction();\nthisCouldTakeTooLong();\norMaybeThisOne();\nconsole.endTime('Performance');\nWhich function can the developer use to obtain the time spent by every one of the three functions?",
    "options": ["A. console.timeStamp()", "B. console.timeLog()", "C. console.trace()", "D. console.getTime()"],
    "answer": "B",
    "title": "Question 139",
    "explanation": ""
  },
  {
    "content": "Refer to the code below.\nAfter changing the string index values, the of atr is Javascript''. What is the reason for this value?",
    "options": [
      "A. Primitive values are mutable.",
      "B. Non-primitive values are immutable.",
      "C. Primitive values are immutable",
      "D. Non-primitive values are mutable."
    ],
    "answer": "D",
    "title": "Question 140",
    "explanation": ""
  },
  {
    "content": "Refer to the following code:\nWhat is the output of line 11?",
    "options": ["A. [''foo:1'', ''bar:2'']", "B. ['foo'', ''bar'']", "C. [1, 2]", "D. [''bar'' , ''foo'']"],
    "answer": "B",
    "title": "Question 141",
    "explanation": ""
  },
  {
    "content": "A developer wants to set up a secure web server with Node.js. The developer create a directory locally called app-server, and the first file is app-server/index, js.\nWithout using any third-party libraries, what should the developer add to index, js to create the secure web server?",
    "options": [
      "A. Const http = require ('http');",
      "B. Const http = require ('https') ;",
      "C. Const server = require ( 'secure-server') ;",
      "D. Const tls = require ('tls') ;"
    ],
    "answer": "B",
    "title": "Question 142",
    "explanation": ""
  },
  {
    "content": "A developer needs to test this functions:\nWhich two assert statements are valid tests for this function?",
    "options": [
      "A. Console.assert(sum3((1, '2' ]) 12 );",
      "B. Console.assert(sum3 ([-3, 2]) -1) ;",
      "C. Console.assert(sum3([0]) 0) ;",
      "D. Console.assert(sum3 (['hello' 2, 3, 4]) NaN);"
    ],
    "answer": "A,B",
    "title": "Question 143",
    "explanation": ""
  },
  {
    "content": "Given the code below:\nWhich method can be provide a visual representation of the list if users and to allow sorting by the name or email attributes.",
    "options": [
      "A. Console.group (userList);",
      "B. Console.info (userlist);",
      "C. Console.groupCollapsed (userslist);",
      "D. Console,table (userslist);"
    ],
    "answer": "A",
    "title": "Question 144",
    "explanation": ""
  },
  {
    "content": "Given the following code:\nLet x =('15' + 10)*2;\nWhat is the value of a?",
    "options": ["A. 3020", "B. 50", "C. 35", "D. 1520"],
    "answer": "A",
    "title": "Question 145",
    "explanation": ""
  },
  {
    "content": "Refer to the code below:\n<html lang=\"en\">\n<table onclick=\"console.log(Table log');\">\n<tr id=\"row1\">\n<td>Click me!</td>\n</tr>\n<table>\n<script>\nfunction printMessage(event) {\nconsole.log('Row log');\n}\nLet elem = document.getElementById('row1');\nelem.addEventListener('click', printMessage, false);\n</script>\n</html>\nWhich code change should be made for the console to log only Row log when 'Click me! ' is clicked?",
    "options": [
      "A. Add event.removeEventListener(); toprintMessage function.",
      "B. Add event.removeEventListener(); to window.onLoad event handler.",
      "C. Add event.stopPropagation(); to printMessage function.",
      "D. Add.event.stopPropagation(); to window.onLoad event handler."
    ],
    "answer": "C",
    "title": "Question 146",
    "explanation": ""
  }
]
