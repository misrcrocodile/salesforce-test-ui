[
  {
    "content": "Universal Container wants customers to be able to open cases from a public-facing website.\nWhat should the app builder use to enable visitors to the website?",
    "options": ["A. Outbound message", "B. Web-to-case", "C. Screen flow", "D. Email-to-case"],
    "answer": "B",
    "title": "Question 1",
    "explanation": "The app builder should use Web-to-Case to enable visitors to the website to open cases. Web-to-Case is a feature that allows users to create an HTML form that can be embedded into a public-facing website. When visitors fill out and submit the form, a new case is automatically created in Salesforce with the information from the form fields. Web-to-Case can also assign cases to queues or users based on predefined rules and criteria. Outbound message is not a valid tool, as it does not enable visitors to open cases. An outbound message is a type of workflow action that sends a secure XML message to a designated endpoint URL when a record meets certain criteria. An outbound message can be used to integrate Salesforce with external systems or applications. Screen flow is not a valid tool, as it does not enable visitors to open cases from a public-facing website. A screen flow is a type of flow that allows users to create an interactive guided process that can collect, display, and update data from multiple objects within Salesforce. A screen flow can be embedded into Lightning pages or Visualforce pages, but it cannot be exposed to unauthenticated users on a public website. Email-to-Case is not a valid tool, as it does not enable visitors to open cases from a website. Email-to-Case is a feature that allows users to create cases from email messages sent to a specific email address. Email-to-Case can also capture email attachments and thread information and associate them with the case."
  },
  {
    "content": "Sales manager at universal containers would like to standardize what information sales rep are gathering. Sales rep want recommendations, sales strategies and to know what key fields need to be completed at each step of the sales process on the opportunity record. What feature should an app builder use to provide this functionally?",
    "options": ["A. Workflow", "B. Path", "C. Chatter feed", "D. Global Action"],
    "answer": "B",
    "title": "Question 2",
    "explanation": "The app builder should use the Path feature to provide the functionality that the VP of Sales wants. The Path feature allows an app builder to create a visual representation of the stages in a business process, such as the Opportunity sales process. The app builder can also add key fields, guidance, and resources for each stage to help sales reps gather information and complete tasks4. Option A, C, and D are not features that can provide this functionality."
  },
  {
    "content": "Cloud Kicks's management team frequently travels and wants to approve requests from their team on the go via Chatter.\nWhere would an app builder enable this ability?",
    "options": ["A. Chatter Feed Tracking", "B. Object Settings", "C. Chatter Settings", "D. Approval Process Settings"],
    "answer": "C",
    "title": "Question 3",
    "explanation": "The app builder would enable this ability in Chatter Settings. Chatter Settings is a setup menu that allows an app builder to configure various aspects of Chatter functionality, such as feeds, groups, email notifications, and more. One of the options in Chatter Settings is Enable Approvals via Chatter, which allows users to approve or reject requests from their team via Chatter posts or comments. Option A, B, and D are not places where an app builder would enable this ability."
  },
  {
    "content": "Universal containers wants to display the real time stock price for each account on the account record page. How should an app builder implement this request?",
    "options": [
      "A. Add a dynamic report to the page layout",
      "B. Create a lightning webcomponent",
      "C. Install a solution from the appexchange",
      "D. Build a visual flow that users API calls"
    ],
    "answer": "C",
    "title": "Question 4",
    "explanation": "One of the easiest ways to display real-time stock price for each account is to install a solution from the AppExchange, such as Stock Price Lightning Component3. This component can be added to any record page using the Lightning App Builder."
  },
  {
    "content": "An app builder notices several Accounts converted from Leads are missing information they expected to be caught via Account validation rules.\nWhat could be the source of this issue?",
    "options": [
      "A. The lead settings are unchecked to require validation for converted leads.",
      "B. Account validation rules fail to validate on records converted from a lead.",
      "C. The lead settings are allowing users to intentionally bypass validation rules.",
      "D. Lead validation rules fail to validate on records when they are being converted."
    ],
    "answer": "A",
    "title": "Question 5",
    "explanation": "The lead settings have an option to require validation for converted leads. If this option is unchecked, then the Account validation rules will not be enforced when a lead is converted to an Account. This could result in missing or incorrect information on the Account records"
  },
  {
    "content": "Universal Containers is adding drone delivery to service offerings, and the developer has written and tested code prior to deployment to production, and the change set is ready to go. The deployment window will occur when the developer is on vacation.\nWhat can the app builder do to ensure a smooth deployment to production?",
    "options": [
      "A. Remove Apex classes from Abound change set.",
      "B. Validate the inbound change set.",
      "C. Use a metadata package set.",
      "D. Validate the outbound change set."
    ],
    "answer": "B",
    "title": "Question 6",
    "explanation": "The app builder should validate the inbound change set to ensure a smooth deployment to production. Validating an inbound change set allows the app builder to test whether the change set can be deployed without errors in the target org. Validating an inbound change set does not affect any data or metadata in the target org."
  },
  {
    "content": "Universal containers (uc) want to delete data in several fields for 5000 lead records. UC export the selected record IDs and fields that need to have data deleted in a csv file. Which two steps should an app builder suggest to meet these requirements? Choose 2 answers",
    "options": [
      "A. Select the correct record type",
      "B. Use import Wizard to update leads using the CSV file",
      "C. Select insert null values in settings.",
      "D. Use Data Loader to update leads using the CSV file"
    ],
    "answer": "C,D",
    "title": "Question 7",
    "explanation": "The two steps that should be suggested to meet these requirements are to select insert null values in settings and to use Data Loader to update leads using the CSV file. Selecting insert null values in settings will allow Data Loader to overwrite existing values with null values. Data Loader is a tool that can import, export, update, or delete large amounts of data."
  },
  {
    "content": "An app builder wants to use Process Builder to automate some of the work being done by the sales team.\nWhat are three capabilities ofProcess Builder that can improve productivity?\nChoose 3 answers",
    "options": [
      "A. Send an email alert.",
      "B. Update a related record.",
      "C. Send an outbound message.",
      "D. Delete a related record.",
      "E. Create a child record."
    ],
    "answer": "A,B,E",
    "title": "Question 8",
    "explanation": "Send an email alert, update a related record, and create a child record are three capabilities of Process Builder that can improve productivity for the sales team. Process Builder can automate these actions based on criteria or events that occur on records or objects. Send an outbound message and delete a related record are not capabilities of Process Builder, but of other tools such as Workflow Rules or Apex."
  },
  {
    "content": "The DreamHouse Realty (DR) service manager has asked for some improvements in case management to enforce process compliance so that cases are unable to be reverted to an earlier case status, and to ensure that certain fields are required when specific case criteria are met.\nWhat solution should an app builder implement to meet these requirements?",
    "options": ["A. Workflow Rules", "B. Process Builder", "C. A Validation Rules", "D. Activities Component"],
    "answer": "C",
    "title": "Question 9",
    "explanation": "A validation rule can enforce process compliance by preventing users from saving records that do not meet certain criteria. In this case, a validation rule can prevent users from reverting to an earlier case status or leaving certain fields blank when specific case criteria are met"
  },
  {
    "content": "Cloud Kicks asked the app builder to insert a list of 25,000 records using deduplication for the Race_Track__c customobject.\nWhich tool should be used?",
    "options": ["A. Import Wizard", "B. Lightning Object Creator", "C. Data Loader", "D. Schema Builder"],
    "answer": "C",
    "title": "Question 10",
    "explanation": "To insert a list of 25,000 records using deduplication for the Race_Track__c custom object, an app builder should use Data Loader. Data Loader is a tool that allows users to insert, update, delete, or export large amounts of data in Salesforce. Data Loader can also perform deduplication by matching records based on external ID fields or Salesforce record IDs. [Source]"
  },
  {
    "content": "An app builder is creating a custom object called Testimonial__c and wants toconnect Testimonial__c records with both the submitter's Contact record and Account record. If the Account is deleted, the Testimonial__c should also be deleted. If the Contact is deleted, but the Account remains, the Testimonial__c should remain.\nHow should this be accomplished?",
    "options": [
      "A. Make both the Contact and Account fields required on the Testimonial__c object and create lookup relationships fromTestimonial__c to Contact and to Account.",
      "B. Create a master-detail relationship from Testimonial__c to Accountand a lookup relationship from Testimonial__c to Contact.",
      "C. Make Testimonial__c a junction object between Account and Contact using master-detail relationships.",
      "D. Create a lookup relationship from Testimonial__c to Account and a master-detail relationship from Testimonial__c to Contact."
    ],
    "answer": "B",
    "title": "Question 11",
    "explanation": "To connect Testimonial__c records with both the submitter's Contact record and Account record, an app builder should create a master-detail relationship from Testimonial__c to Account and a lookup relationship from Testimonial__c to Contact. A master-detail relationship creates a parent-child relationship between two objects and allows for roll-up summary fields, sharing settings, and cascading actions. A lookup relationship creates a loose association between two objects and allows users to relate records from one object to another. Source"
  },
  {
    "content": "Universal Containers uses a private sharing model on Accounts. User A and user B both own Accounts of their own and have both been sent a new account record in an email owned by user C to take a look at. User A is able to open and view the record but user B receives an insufficient privileges error. User A and user B have the same role in the role hierarchy as user.\nWhat are the three reasons user A has access but user B is unable to access the record? Choose 3 answers",
    "options": [
      "A. User A is on the same account team as user C.",
      "B. User A and user B have different profiles.",
      "C. User C has manually shared the record with user A.",
      "D. User A was granted an additional permission set.",
      "E. User A is in a public group that has access via a sharing rule."
    ],
    "answer": "A,C,E",
    "title": "Question 12",
    "explanation": "The three reasons user A has access but user B is unable to access the record are:\n User A is on the same account team as user C. Account teams are groups of users who work together on an account. Users who are on an account team can have access to the account and related records owned by other team members.\n User C has manually shared the record with user A. Manual sharing is a way of granting access to individual users or groups by the record owner or someone above them in the role hierarchy.\n User A is in a public group that has access via a sharing rule. Public groups are groups of users who can be used to share data or assign permissions. Sharing rules are automatic rules that grant access to groups of users based on certain criteria. Option B and D are not reasons for user A's access."
  },
  {
    "content": "What option is available to an App Builder when defining an object-specific Create Record custom action? Choose 2 answers",
    "options": [
      "A. Pre-Defining field values on the target object.",
      "B. Redirecting the end user to the detail page of the target object",
      "C. Specifying the fields and layout of the action.",
      "D. Allowingthe end user to choose the record type"
    ],
    "answer": "A,C",
    "title": "Question 13",
    "explanation": "The app builder has two options available when defining an object-specific Create Record custom action:\n Pre-Defining field values on the target object. This means that the app builder can specify default values for certain fields on the target object when creating a new record using the custom action.\n Specifying the fields and layout of the action. This means that the app builder can choose which fields to include in the action and how they are arranged on the screen. Option B and D are not options available when defining an object-specific Create Record custom action."
  },
  {
    "content": "Cloud Kicks (CK) increased its Salesforce development efforts so that it now has multiple custom development efforts happening in parallel. CK's developers and admins perform the custom (rations and have complained that working in one sandbox has led to many problems. They requested a solution in which they can work in at least 20 different sandboxes at once, that all start with the same base configuration and data.\nWhat should an app builder use to solve the problem?",
    "options": ["A. Sandbox refreshes", "B. Full copy sandboxes", "C. Partial copy sandboxes", "D. Sandbox during"],
    "answer": "C",
    "title": "Question 14",
    "explanation": "Partial Copy Sandboxes are ideal for testing and development purposes as they include a subset of production data and can be refreshed more frequently than Full Copy sandboxes. Reference:\n Salesforce Help - Types of Sandboxes"
  },
  {
    "content": "Cloud Kicks wants to summarize the number of open Cases related to an Account, as well as the number of closed Cases to indicate whether customer support utilization is high, medium, or low. Two number fields have been created: NUM_Open_Cases__c and NUM_Closed_Cases_c Which two automation solutions would meet these business requirements?\nChoose 2 answers",
    "options": ["A. Validation Rule", "B. Approval Process", "C. AppExchange", "D. Apex"],
    "answer": "A,B",
    "title": "Question 15",
    "explanation": "Process Builder and Apex are two automation solutions that can meet the business requirements of summarizing the number of open and closed Cases related to an Account. Process Builder can create a process that updates the custom fields on Account based on changes in related Cases. Apex can write a trigger that performs the same logic using code. AppExchange and Workflow are not automation solutions for this requirement, but sources of apps or components and tools for creating workflow rules respectively."
  },
  {
    "content": "Universal Containers wants to display the real-time stock price for each Account on the Account record page.\nHow should an app builder implement this request?",
    "options": [
      "A. Create a Lightning Web Component.",
      "B. Install a solution from the AppExchange.",
      "C. Build a Flow that uses API calls.",
      "D. Use a scheduled Apex job."
    ],
    "answer": "A",
    "title": "Question 16",
    "explanation": "The best way to implement this request is to create a Lightning Web Component that can fetch the real-time stock price from an external API and display it on the Account record page. Installing a solution from the AppExchange may not be feasible as it may not match the exact requirements or may have additional costs. Building a Flow that uses API calls may not be efficient as it may consume API limits and may not be able to update the stock price in real-time. Using a scheduled Apex job may not be suitable as it may not be able to run frequently enough to reflect the real-time stock price"
  },
  {
    "content": "Universal Containers wants to understand return on investment for the latest advertising buy. They currently use a private security model for all objects.\nWhat should an app builder recommend?",
    "options": [
      "A. Utilize Account Hierarchies and Roil-Up Summary fields",
      "B. Run an opportunities pipeline report",
      "C. Change to a public security model",
      "D. Configure Campaign Hierarchies and Campaign statistics"
    ],
    "answer": "B",
    "title": "Question 17",
    "explanation": "The app builder should recommend configuring Campaign Hierarchies and Campaign statistics to understand return on investment for the latest advertising buy. Campaign Hierarchies allow users to organize campaigns into parent-child relationships based on common goals or themes, such as product lines or marketing channels. Campaign statistics allow users to track and measure key metrics for campaigns and campaign hierarchies, such as budgeted cost, actual cost, expected revenue, number of leads, number of contacts, etc. By using these features, users can calculate return on investment for each campaign and campaign hierarchy by comparing actual cost and expected revenue. Utilizing Account Hierarchies and Roll-Up Summary fields is not a valid recommendation, as it does not relate to campaigns or advertising buys. Account Hierarchies allow users to organize accounts into parent-child relationships based on business structure or affiliation, such as subsidiaries or partners. Roll-Up Summary fields allow users to aggregate numeric values from child records related to a parent record by a master-detail relationship. Running an opportunities pipeline report is not a valid recommendation, as it does not provide information about campaigns or advertising buys. An opportunities pipeline report shows the stages and amounts of opportunities in the sales process, such as prospecting, qualification, negotiation, etc. Changing to a public security model is not a valid recommendation, as it does not affect the ability to track and measure campaigns or advertising buys. A public security model is a type of organization-wide default that determines the baseline level of access that users have to records they do not own. A public security model grants all users read or read/write access to all records, regardless of ownership."
  },
  {
    "content": "The app builder at Northern Trail Outfitters created a report type for opportunities with or without shipments. The operations team wants to see the account rating Information on the report.\nWhat should the app builder do to fulfill this request?",
    "options": [
      "A. Change the primary object of the custom type to the Account object.",
      "B. Add the Account Rating field to the opportunity record page.",
      "C. Use add fields related via lookup with the view set to opportunities.",
      "D. Change the account/opportunity relationship to a master/detail relationship."
    ],
    "answer": "C",
    "title": "Question 18",
    "explanation": "Using 'Add Fields Related Via Lookup' in the report type configuration allows adding fields from the Account object to the Opportunity report, including the Account Rating. Reference:\n Salesforce Help - Custom Report Types"
  },
  {
    "content": "UC has a requirement that an opportunity should have a field showing the value of its associated account's billing state. This value should not change after the opportunity has been created. Is there a recommended solution to configure this automated behavior?",
    "options": ["A. Formula field", "B. Apex", "C. Workflow", "D. Roll-up summary field"],
    "answer": "C",
    "title": "Question 19",
    "explanation": "Apex. This is correct because Apex is a programming language that can perform complex logic and manipulate data in Salesforce. Apex can be used to create a trigger on the opportunity object that copies the value of the billing state from the related account record when the opportunity is created, and prevents it from being changed afterwards. The other options are not suitable for this requirement because they either cannot copy data from a related object (formula field, roll-up summary field) or cannot prevent data from being changed (workflow)."
  },
  {
    "content": "Universal Containers wants to create a report to show job applications with or without resumes.\nWhat considerations should the app builder be aware of when creating the custom report type?",
    "options": [
      "A. An app builder is unable to create custom report types for objects they do not have permissions for.",
      "B. Once the report type has been deployed it is unable to be deleted.",
      "C. A primary object selection is locked once the custom report type has been saved.",
      "D. When a custom or external object is deleted the report type and reports remain but cause an error when the report is run."
    ],
    "answer": "C",
    "title": "Question 20",
    "explanation": "The primary object selection is locked once the custom report type has been saved. This means that the app builder cannot change the primary object later. The other options are not true."
  },
  {
    "content": "At Universal containers, all US Sales reps should be able to view the US Team dashboard, however, only the US sales directors should be able to see the data in the component and view its source report. How can an app builder ensure the proper access is granted?",
    "options": [
      "A. Make the US Sales Director the running user and share the dashboard folder with the role US Sales Rep",
      "B. Make the dashboard dynamic and give US Sales Reps the view my teams dashboard permission",
      "C. Share the dashboard folder with roles and subordinates of the US Sales Director and share the report folder with the role of US Sales Director",
      "D. Share the dashboard with the public group US Sales Reps and share the dashboard source reports folder with the US Sales Director profile"
    ],
    "answer": "C",
    "title": "Question 21",
    "explanation": "Sharing the dashboard folder with roles and subordinates of the US Sales Director and sharing the report folder with the role of US Sales Director will ensure that only the US sales directors can see the data in the component and view its source report, while all US sales reps can view the US Team dashboard. Making the US Sales Director the running user will show only his or her data in the component, not the whole team's data. Making the dashboard dynamic will show different data depending on who is viewing it, not based on their role. Sharing the dashboard with the public group US Sales Reps and sharing the dashboard source reports folder with the US Sales Director profile will not prevent other profiles from accessing the reports if they have access to the report folder."
  },
  {
    "content": "Universal Containers uses a custom picklist field Account Region on the account record. They want this region to be reflected on all related contact records and stay in sync if the value of this field changes on the Account.\nHow should an app builder meet this requirement?",
    "options": [
      "A. Create a picklist field called 'Account Region' on Contact object > Create a workflow rule to update this picklist field if the Account Region field on the Account is changed.",
      "B. Create a formula field on the Contact object > Set the value of the formula to ISPICKVAL(Account.Account_Region__c).",
      "C. Create a formula field on the Contact object > Set the value of the formula to TEXT(Account.Account_Region__c).",
      "D. Create a text field called 'Account Region' on Contact object > Create a workflow ruleto update this picklist field if the Account Region field on the Account is changed."
    ],
    "answer": "C",
    "title": "Question 22",
    "explanation": "Creating a formula field on the Contact object and setting the value of the formula to TEXT(Account.Account_Region__c) would reflect the region of the related account on the contact record and stay in sync if the value changes on the account. This is the most efficient and maintainable way to meet the requirement. Creating a workflow rule or a picklist field would require additional configuration and complexity"
  },
  {
    "content": "An app builder needs to deploy a new account detail page layout from sandbox to production.\nWhich three components should an app builder include in the Change Set to ensure it deploys successfully and visually as expected?\nChoose 3 answers",
    "options": ["A. Detail page layout", "B. Custom fields", "C. Custom actions", "D. Lightning App Builder", "E. System administrator profile"],
    "answer": "A,B,C",
    "title": "Question 23",
    "explanation": "To deploy a new account detail page layout from sandbox to production, an app builder should include three components in the change set:\n Detail page layout: The page layout defines the arrangement of fields, buttons, related lists, and other components on a record detail or edit page. It also controls which fields are required or read-only for users. Source Custom fields: Custom fields are fields that are created by users to store additional information on standard or custom objects. Custom fields can have different data types, such as text, number, date, picklist, etc. Source Custom actions: Custom actions are actions that are created by users to extend the functionality of standard or custom objects. Custom actions can be global or object-specific, and they can invoke different tools such as Lightning components, Visualforce pages, flows, etc. [Source]"
  },
  {
    "content": "A user is unable to use inline editing on a list view. A quick check verifies the user should be able to perform inline editing as they have been assigned the appropriate permissions.\nWhich two conditions should the app builder review?\nChoose 2 answers",
    "options": [
      "A. If the list view restricts sharing for the user",
      "B. If the list view selected is the recently viewed list view",
      "C. If the list view contains a chart created by the user",
      "D. If the list view contains more than one record type"
    ],
    "answer": "B,D",
    "title": "Question 24",
    "explanation": "Two conditions that can prevent inline editing on a list view are if the list view selected is the recently viewed list view, or if the list view contains more than one record type. The recently viewed list view does not support inline editing, as it is not based on a single object. The list view must have a single record type to enable inline editing, as different record types may have different fields and values"
  },
  {
    "content": "Due to the complexity of the Universal Containers sandbox release schedule and requirements, it is advised that change sets are used as often as possible to migrate from one environment to another.\nWhich three common items can an app builder move when using a change set?\nChoose 3 answers",
    "options": ["A. Web-to-lead", "B. Standard fields", "C. Custom object", "D. Apex class", "E. Custom field"],
    "answer": "C,D,E",
    "title": "Question 25",
    "explanation": "The common items that can be moved using a change set are custom object, Apex class, and custom field. These are metadata components that can be deployed from one environment to another using change sets. Web-to-lead and standard fields are not metadata components that can be moved using change sets."
  },
  {
    "content": "An app builder at Northern Trad Outfitters created a sandbox template for Accounts, Projects, and Project Milestones to reconfigure some flows for the project management app.\nWhich type of testing environment should the app builder create?",
    "options": ["A. Developer", "B. Partial Copy", "C. Developer Pro", "D. Scratch Org"],
    "answer": "B",
    "title": "Question 26",
    "explanation": "Partial Copy is the type of testing environment that the app builder should create to use a sandbox template for Accounts, Projects, and Project Milestones. According to the Salesforce documentation, \"Partial Copy sandboxes copy your production org's configuration (metadata) and some of your production org's data as defined by a sandbox template.\" Developer, Developer Pro, and Scratch Org are not types of testing environments that support sandbox templates."
  },
  {
    "content": "Ursa Major Solar wants to create a relationship between the standard Contact object and a custom Solar Project object Contacts potentially be related to multiple Solar Project objects, and a Solar Project can have multiple Contacts associated with it.\nHow should an app builder configure the data model?",
    "options": [
      "A. One Master-detail relationship on Conduct and one Master-detail relationship on Solar Project",
      "B. Two Lookup relationships on a new custom object",
      "C. One Lookup relationship on Contact and one Lookup relationship on Solar Project",
      "D. Two Master-detail relationships on a new custom object"
    ],
    "answer": "C",
    "title": "Question 27",
    "explanation": "Two Master-detail relationships on a new custom object is how an app builder should configure the data model to create a relationship between Contact and Solar Project objects where each Contact can be related to multiple Solar Project objects, and each Solar Project can have multiple Contacts associated with it. This is an example of a many-to-many relationship that requires a junction object with two master-detail relationships. One Master-detail relationship on Contact and one Master-detail relationship on Solar Project, two Lookup relationships on a new custom object, and one Lookup relationship on Contact and one Lookup relationship on Solar Project are not valid or correct ways to create a many-to-many relationship."
  },
  {
    "content": "Universal Containers uses the Asset object to track products that are installed at customer locations. A new object, Asset Inventory, has been created to capture details about the asset.\nWhich approach should the app builder take to show Asset Inventory as a related list on Asset?",
    "options": [
      "A. Create a roll-up on Asset. Add the Asset Inventory related list to the Asset page layout.",
      "B. Create a junction object to relate Asset Inventory and Asset. Add the Asset Inventory relatedlist to the Asset page layout.",
      "C. Create a lookup relationship on Asset Inventory to Asset. Add the Asset Inventory related list to the Asset page layout.",
      "D. Create a master-detail relationship on Asset-to-Asset Inventory Add the Asset Inventory related list to the Asset page layout."
    ],
    "answer": "C",
    "title": "Question 28",
    "explanation": "The best way to show Asset Inventory as a related list on Asset is to create a lookup relationship on Asset Inventory to Asset. This will allow one-to-many relationship between Asset and Asset Inventory, and display the related records on the Asset page layout."
  },
  {
    "content": "Which opportunity standard field is available to be configured directly? Choose3",
    "options": ["A. Forecast category", "B. Stage", "C. Lead source", "D. Type"],
    "answer": "B,C,D",
    "title": "Question 29",
    "explanation": "The opportunity standard fields that are available to be configured directly are Stage, Lead Source, and Type. These fields can be modified by editing their picklist values, adding or removing values, or changing their default values. Option A is incorrect because Forecast Category is not a standard field on the opportunity object, but rather a system field that is automatically derived from the Stage field."
  },
  {
    "content": "When a sales rep submits an account for approval, Universal Containers wants the user to answer additional questions via a popup window to populate additional record fields.\nWhat should an app builder use to achieve the desired result?",
    "options": [
      "A. Process Builder and Flow",
      "B. Lightning component and Process Builder",
      "C. Custom picklist field and Process Builder",
      "D. Custom button and Flow"
    ],
    "answer": "D",
    "title": "Question 30",
    "explanation": "The app builder should use a custom button and Flow to achieve the desired result. A custom button is a button that can invoke custom logic or actions when clicked by a user. A Flow is a type of automation tool that can guide users through a series of screens and perform actions based on user input. In this case, the app builder can create a custom button on the Account object that launches a Flow when clicked by a user. The Flow can display a popup window with questions for the user to answer and populate additional fields on the Account record based on the user input4. Option A, B, and C are not tools that can achieve this result."
  },
  {
    "content": "Universal Containers uses a private sharing model for opportunities. This model CANNOT be changed due to a regional structure A new sales operations team has been created. This team needs to perform analysis on Opportunity data, all should have read arid write access to all Opportunities.\nWhat are two recommended solutions for the app builder to give the users appropriate access? Choose 2 answers",
    "options": [
      "A. Create a criteria-based sharing rule to all opportunities with the sales operations public group.",
      "B. Add a manual share for all opportunities with each user on the sales operations team.",
      "C. Add a permission set with 'View All\" and 'Modify All'' opportunity permissions enabled.",
      "D. Create a criteria-based sharing rule to share all opportunities with the sales operations private group"
    ],
    "answer": "A,C",
    "title": "Question 31",
    "explanation": "The two recommended solutions for the app builder to give the users appropriate access are creating a criteria based sharing rule to all opportunities with the sales operations public group and adding a permission set with 'View All\" and 'Modify All'' opportunity permissions enabled. A criteria based sharing rule can grant read and write access to all opportunities that meet certain criteria to a specified group of users. A permission set can grant additional object-level permissions to users without changing their profiles. Option B is incorrect because adding a manual share for all opportunities with each user on the sales operations team is not scalable or maintainable. Option D is incorrect because creating a criteria-based sharing rule to share all opportunities with the sales operations private group is redundant, as private groups are used to manually share records with individual users or other groups."
  },
  {
    "content": "Cloud Kicks wants to display 10 key fields at once in a separate section at the top of opportunity records on the desktop.\nWhich component should an app builder add to the record page to enable this functionality?",
    "options": ["A. Path", "B. Highlights Panel", "C. Custom Lightning Web Component", "D. Accordion"],
    "answer": "B",
    "title": "Question 32",
    "explanation": "Highlights Panel. This is correct because the highlights panel component displays key fields from a record at the top of the page, and it can be configured to show up to 10 fields."
  },
  {
    "content": "Ursa Major Solar wants to convert the relationship between Galaxy and Star from a lookup relationship to a master-detail relationship so each Galaxy record can be equipped with a roll-up summary count of Star records.\nWhich two considerations should be made?\nChoose 2 answers",
    "options": [
      "A. The Star records are all required to have an existing value in their Galaxy field.",
      "B. The Galaxy object has fewer than two existing master-detail relationships.",
      "C. The Galaxy object is required to contain existing roll-up summary fields.",
      "D. The Star object has fewer than two existing master-detail relationships."
    ],
    "answer": "A,B",
    "title": "Question 33",
    "explanation": "The two considerations that should be made are: The Star records are all required to have an existing value in their Galaxy field. This is a prerequisite for converting a lookup relationship to a master-detail relationship. A lookup relationship is an optional relationship that links two objects together, but does not enforce referential integrity or cascade delete. A master-detail relationship is a required relationship that links two objects together and enforces referential integrity and cascade delete. To convert a lookup relationship to a master-detail relationship, all child records must have a value in their lookup field that references an existing parent record. The Galaxy object has fewer than two existing master-detail relationships. This is another prerequisite for converting a lookup relationship to a master-detail relationship. An object can have up to two master-detail relationships with other objects and can act as both the parent and child in different relationships. To convert a lookup relationship to a master-detail relationship, the parent object must have fewer than two existing master-detail relationships with other objects. The Galaxy object is required to contain existing roll-up summary fields is not a valid consideration, as it is not related to converting a lookup relationship to a master-detail relationship."
  },
  {
    "content": "An app builder at Ursa Major Solar has been working on a new custom app in a sandbox that has been upgraded to the next major Salesforce version, and their production instance is still on the current Salesforce version. The development is complete and they are ready to deploy a change set.\nWhat should the app builder consider when planning the deployment?",
    "options": [
      "A. It will fall if there is a feature only available in the next version.",
      "B. The change set components will be upgraded to the next version in production.",
      "C. The change set will be automatically deployed when production is upgraded.",
      "D. The deployment is not possible due to different versions."
    ],
    "answer": "A",
    "title": "Question 34",
    "explanation": "It will fail if there is a feature only available in the next version. According to the Salesforce documentation, \"If your sandbox is on a newer version than your production org, you can't deploy any components that are new in the sandbox version.\" The change set components will not be upgraded to the next version in production, the change set will not be automatically deployed when production is upgraded, and the deployment is possible if there are no new features involved."
  },
  {
    "content": "An app builder at Cloud Kicks created accustom object and related fields in the schema builder.\nWhat next steps should the app build take to ensure users can access the new object and fields?",
    "options": [
      "A. Create a permission set for access to the object and fields.",
      "B. Allow reporting for the object and fields.",
      "C. Assign data types to the fields on the object.",
      "D. Add the fields to the page layout on the object."
    ],
    "answer": "D",
    "title": "Question 35",
    "explanation": "The app builder should add the fields to the page layout on the object to ensure users can access the new object and fields. The page layout determines which fields are visible and editable on the record detail page. Option A, B, and C are not necessary for this purpose."
  },
  {
    "content": "Universal Containers deployed an app in a large change set from a Developer Sandbox to a Developer Pro Sandbox used for testing. After testing, changes had to be made to several of the components in the change set.\nHow should an app builder move the new changes to the Developer Pro Sandbox?",
    "options": [
      "A. Refresh the text sandbox and re_display the change set.",
      "B. Clone the change set and re_display",
      "C. Rename the change set, add the changes and re_display",
      "D. Update the change set and re_display"
    ],
    "answer": "D",
    "title": "Question 36",
    "explanation": "Updating the existing change set with the new changes and redeploying is the most efficient way to move the updated components to the Developer Pro Sandbox. Reference:\n Salesforce Help - Change Sets"
  },
  {
    "content": "An app builder wants to add the option to 'Send New Email' from Leads, Contacts and Accounts for users on mobile.\nWhat is the benefit of using global actions to accomplish this?",
    "options": [
      "A. Global actions can be accessed anywhere actions are pages, feed and Chatter groups,",
      "B. Salesforce Lightning Component Library houses existing global actions prebuild for use.",
      "C. The global action's layout automatically clones the default page layout.",
      "D. Global actions are record-specific and are available when searching that particular"
    ],
    "answer": "A",
    "title": "Question 37",
    "explanation": "Global actions can be accessed anywhere actions are pages, feed and Chatter groups. This is correct because global actions are not tied to a specific object, and they can be added to any page that supports actions, such as record pages, home pages, feed pages, and Chatter groups."
  },
  {
    "content": "Universal Containers has two types of applicants, hourly and salary. There are separate record types for each. While all members of the human resource department need to be able to view all applicant records, only the hiring Manager and VP of HR should be able to create salary applicant records.\nWhat should the app builder recommend to meet this requirement?",
    "options": [
      "A. Update the org-wide default to private and create a sharing rule for the role of recruiting manager.",
      "B. Create a permission set containing the salary record type and assign it to the appropriate users.",
      "C. Remove \"create\" permission for the salary applicant object for everyone except the manager and VP.",
      "D. Configure the hourly record type as the default and instruct non-management users to accept the default record type."
    ],
    "answer": "B",
    "title": "Question 38",
    "explanation": "A permission set containing the salary record type and assigning it to the appropriate users would allow only those users to create salary applicant records, while still allowing all users to view all applicant records. This is the most granular and flexible way to meet the requirement"
  },
  {
    "content": "An app builder needs a custom solution and is considering using community. Ease of updates is the primary consideration.\nWhat should the app builder consider?",
    "options": [
      "A. A managed package from AppExchange",
      "B. An unmanaged package from AppExchange",
      "C. An open-source unmanaged package",
      "D. An open-source custom development"
    ],
    "answer": "A",
    "title": "Question 39",
    "explanation": "A managed package from AppExchange is a custom solution that is developed by a third-party provider and can be installed in Salesforce. A managed package can be easily updated by the provider without affecting the existing functionality or customizations. This makes it suitable for the app builder's requirement of ease of updates. Option B, C, and D are not as easy to update as a managed package."
  },
  {
    "content": "The Service Manager provided the app builder with color code requirements for case age on open cases.\nNew cases populate a green circle\nDay-old cases populate a yellow circle\nThree-day-old cases populate a red circle\nHow should an app builder implement this requirement?",
    "options": ["A. Formula Field", "B. Quick Action", "C. Custom Button", "D. Lightning Web Component"],
    "answer": "A",
    "title": "Question 40",
    "explanation": "A formula field is a read-only field that derives its value from a formula expression you define. The formula field is updated when any of the source fields change. You can use formula fields to display images based on certain conditions. In this case, a formula field can be used to display a green, yellow, or red circle image based on the case age."
  },
  {
    "content": "Which two places can an app builder go to see a list of available Custom Lightning components in their org?\nChoose 2 answers",
    "options": [
      "A. Visualforce components in Setup",
      "B. Lightning component Generator",
      "C. Lightning App Builder",
      "D. Lightning components in Setup"
    ],
    "answer": "C,D",
    "title": "Question 41",
    "explanation": "An app builder can go to two places to see a list of available custom Lightning components in their org:\n Lightning App Builder: This is a tool that allows an app builder to create and customize Lightning pages using drag-and-drop components. The app builder can see the list of custom Lightning components in the Custom section of the Lightning Components pane1.\n Lightning Components in Setup: This is a setup menu that allows an app builder to view, create, edit, and delete custom Lightning components in their org. The app builder can see the list of custom Lightning components in the Lightning Components section of the Setup menu2. Option A and B are not places where an app builder can see a list of custom Lightning components."
  },
  {
    "content": "Universal Containers has deployed custom tabs to Production via changes sets, without including the profile settings or permission sets.\nWhat is the settings for the visibility of custom tabs?",
    "options": [
      "A. Custom tabs are default off for all users.",
      "B. Custom tabs are default on for all uses.",
      "C. Custom tabs are hidden for all users.",
      "D. Custom tabs are NOT deployed."
    ],
    "answer": "A",
    "title": "Question 42",
    "explanation": "The setting for the visibility of custom tabs is default off for all users when they are deployed via change sets without including the profile settings or permission sets. This means that the custom tabs are not visible in any apps or navigation menus for any users unless they are manually added by each user or by an administrator3. Option B, C, and D are not correct settings for the visibility of custom tabs."
  },
  {
    "content": "Universal Containers uses a custom object called Reviews to capture information generated by interviewers during the candidate process. The Review records are visible to any user that has access to the related custom Candidate record. The VP of Human Resources wants the comment field on the Review to be private to anyone outside of the MR department How should the app builder meet this requirement?",
    "options": [
      "A. Create a page layout with the field and use field-level security to hide the field from all other users.",
      "B. Create an Apex sharing rule to share the field with users that have \"MR'' in their role.",
      "C. Create a sharing rule to share the field with the VP of HR with Role and Subordinates.",
      "D. Create a page layout with the field for HR users and another page layout without the field for all other users."
    ],
    "answer": "A",
    "title": "Question 43",
    "explanation": "Create a page layout with the field and use field-level security to hide the field from all other users is how the app builder should meet the requirement of making the comment field on Review private to anyone outside of HR department. Field-level security can control which profiles can view or edit a field on a record. Create an Apex sharing rule, create a sharing rule to share the field with VP of HR with Role and Subordinates, and create a page layout with the field for HR users and another page layout without the field for all other users are not valid or feasible solutions for this requirement."
  },
  {
    "content": "An app builder has created a custom Lightning App and wants to make it available to the internal users at Universal Containers.\nWhich two steps are necessary to accomplish this task?\nChoose 2 answers",
    "options": [
      "A. Add the app to a Visualforce page.",
      "B. Upload the app to Static Resources.",
      "C. Create a subdomain using My Domain.",
      "D. Build a Custom Tab for the app."
    ],
    "answer": "C,D",
    "title": "Question 44",
    "explanation": "The app builder needs to do two steps to make the custom Lightning App available to the internal users at Universal Containers:\n Create a subdomain using My Domain: My Domain is a feature that allows an organization to set up a custom domain name for their Salesforce instance. This is required to use custom Lightning components and apps in Salesforce1.\n Build a Custom Tab for the app: A custom tab is a tab that displays any custom object or web page in Salesforce. This is required to make the custom Lightning App accessible from the navigation menu or app launcher2. Option A and B are not necessary steps to make the custom Lightning App available to the internal users."
  },
  {
    "content": "An app builder created multiple custom fields, page layouts, and reports in the sandbox and added them to a change set was deployed to production, the reports were NOT deployed.\nWhat should the app builder do?",
    "options": [
      "A. Move the reports to the Untried Public Reports folder and add them to a new change set.",
      "B. Move the reports from the Unfiled Public Reports folder and add them to a new change set",
      "C. Recreate the reports in production. Reports are not supported in change sets",
      "D. Add the reports to an unmanaged package and install the unmanaged package into production."
    ],
    "answer": "B",
    "title": "Question 45",
    "explanation": "Moving the reports from the Unfiled Public Reports folder and adding them to a new change set is what the app builder should do to deploy the reports to production. According to the Salesforce documentation, \"Reports in the Unfiled Public Reports folder aren't available for deployment.\" Moving the reports to the Untried Public Reports folder, recreating the reports in production, and adding the reports to an unmanaged package are not necessary or recommended actions."
  },
  {
    "content": "The case handling process at Universal Containers includes multiple steps Including approvals, notifications, and fields updates. To manage and evaluate all of these changes in a single save operation, an app builder wants to use Process Builder and the Advanced option to let the process evaluate a record multiple times has been selected.\nWhich two options should the app builder avoid to prevent recursion?\nChoose 2 answers",
    "options": [
      "A. IF statements",
      "B. Setting a criteria node to No criteria-just execute the procedure",
      "C. Invocable processes",
      "D. The ISCHANGED function"
    ],
    "answer": "C,D",
    "title": "Question 46",
    "explanation": "The two options that the app builder should avoid to prevent recursion are setting a criteria node to No criteria-just execute the procedure and invocable processes. Setting a criteria node to No criteria-just execute the procedure means that the process will always execute the actions regardless of the record values, which can cause recursion if the process updates the same record that triggered it. Invocable processes are processes that can be invoked from another process or a flow, which can cause recursion if the invocable process updates the same record that triggered the parent process or flow. Option A is incorrect because IF statements are not an option in Process Builder, but rather a function that can be used in formulas or conditions. Option D is incorrect because the ISCHANGED function is not an option in Process Builder, but rather a function that can be used in formulas or conditions to check if a field value has changed."
  },
  {
    "content": "The Director of Marketing at Northern Trail Outfitters wants the app builder to create a formula field that tracks how many days have elapsed since a contact was sent a marketing communication. The director is only interested in whole units.\nWhich function should be used to return a date for calculating the difference?",
    "options": ["A. DATFTIMEVALUE()", "B. TODAY()", "C. DATEVALUE()", "D. NOW()"],
    "answer": "B",
    "title": "Question 47",
    "explanation": "TODAY() is the function that should be used to return a date for calculating the difference between today and the date a marketing communication was sent. According to the Salesforce documentation, \"TODAY() returns the current date as a Date value.\" DATETIMEVALUE() converts a text value into a Date/Time value. DATEVALUE() converts a Date/Time value into a Date value. NOW() returns the current Date/Time value."
  },
  {
    "content": "Ursa Major Solar has a lookup relationship between a custom Galaxy _c object and a custom Star_c object. An app builder wants to create a roll-up summary field that counts the total number of Star_c records related to each Galaxy__c record.\nHow would the current configuration impact the ability to achieve the desired result?",
    "options": [
      "A. The roll-up summary can be achieved by creating a formula field on the Galaxy__c object.",
      "B. The lookup relationship will need to be converted to a master-detail relationship before a roll-up summary field can be created.",
      "C. The roll-up summary can be achieved by creating a formula field on the Star__c object.",
      "D. A roll-up summary field will need to be created on the Galaxy__c object with a field filter that select all related Star_c records"
    ],
    "answer": "B",
    "title": "Question 48",
    "explanation": "The lookup relationship will need to be converted to a master-detail relationship before a roll-up summary field can be created. This is correct because roll-up summary fields are only available on the master object in a master-detail relationship, and a lookup relationship does not establish a parent-child hierarchy between the objects"
  },
  {
    "content": "An app builder installs an unmanaged package in a full copy sandbox that is an exact match for production, and now they are ready to install it m production. When the app builder attempts to install the package in production, it fails.\nWhy did the package fail to install?",
    "options": ["A. Incorrect license types", "B. Package features not compatible", "C. Object limits exceeded", "D. Apex unit test failures"],
    "answer": "D",
    "title": "Question 49",
    "explanation": "Apex unit test failures can cause a package installation to fail. According to the Salesforce documentation, \"If your package contains Apex code, all tests must complete successfully for your package to install.\" Incorrect license types, package features not compatible, and object limits exceeded are not valid reasons for a package installation failure."
  },
  {
    "content": "Cloud Kicks Is redefining its entire business process to convert the Manager Notes field from a long text area files. The goal is to encourage managers to be more concise In their comments and stay at 255 characters or less. There is preexisting information In the Manager Notes field that often is well beyond the character limit.\nWhat would happen to any existing information if the app builder tries to convert a preexisting long text area field to text area'",
    "options": [
      "A. Preexisting information will truncate to the first 255 characters.",
      "B. Preexisting Information in the field will be completely lost.",
      "C. Preexisting information will remain even if it was over 255 characters.",
      "D. Preexisting information will cause an error message to pop up."
    ],
    "answer": "C",
    "title": "Question 50",
    "explanation": "Preexisting information will remain even if it was over 255 characters if the app builder tries to convert a preexisting long text area field to text area. However, users will not be able to edit or save records with more than 255 characters in that field until they reduce the number of characters. Preexisting information will not truncate, be lost, or cause an error message."
  },
  {
    "content": "Universal Containers wants sales reps to get permission from their managers before deleting Opportunities, What can be used to meet these requirements?",
    "options": [
      "A. Process Builder with Submit for Approval action.",
      "B. Approval Process with a triggered Flow process.",
      "C. Approval Process with Time-Dependent Workflow action.",
      "D. Two-step Approval Process."
    ],
    "answer": "D",
    "title": "Question 51",
    "explanation": "The feature that can be used to meet these requirements is two-step approval process. An approval process defines the steps and criteria for approving records. A two-step approval process requires two levels of approval before a record can be deleted. The app builder can configure an approval process for opportunities that requires sales reps to submit their delete requests for approval from their managers. Option A is incorrect because Process Builder with Submit for Approval action is not a valid feature, as Process Builder cannot submit records for approval. Option B is incorrect because Approval Process with a triggered Flow process is not a valid feature, as Approval Process cannot trigger Flow processes. Option C is incorrect because Approval Process with Time-Dependent Workflow action is not a valid feature, as Approval Process cannot use Time-Dependent Workflow actions."
  },
  {
    "content": "After universal containers converted qualified leads. Sales reps need to be able to report on converted leads. How should an app builder support for this requirement?",
    "options": [
      "A. Enable preserve lead status in the lead conversion settings",
      "B. Assign the representative view and edit converted leads permission",
      "C. Ensure the representative has read access to the original lead records",
      "D. Create a custom report type with converted leads as the primary object"
    ],
    "answer": "D",
    "title": "Question 52",
    "explanation": "The solution that an app builder should use to meet this requirement is creating a custom report type with converted leads as the primary object. A custom report type is a template that defines the objects and fields that are available for a report. The app builder can create a custom report type that has converted leads as the primary object and includes fields from related objects, such as accounts, contacts, and opportunities. This way, sales reps can create reports on converted leads and see their related information. Option A is incorrect because enabling preserve lead status in the lead conversion settings does not affect the reporting on converted leads, but rather allows users to retain the original lead status after conversion. Option B is incorrect because assigning the representative view and edit converted leads permission does not affect the reporting on converted leads, but rather allows users to view and edit converted lead records. Option C is incorrect because ensuring the representative has read access to the original lead records does not affect the reporting on converted leads, but rather allows users to view the original lead records."
  },
  {
    "content": "DreamHouse Realty (DHR) recently acquired Cloud Kicks (CK), a company that is still on Salesforce Classic. DHR is keeping the CK Salesforce org; however, it will migrate this org to Lightning Experience.\nWhere should the app builder find prebuilt resources to help with this project and overall adoption?",
    "options": ["A. Import Wizard", "B. Lightning Object Creator", "C. AppExchange", "D. Flow Builder"],
    "answer": "C",
    "title": "Question 53",
    "explanation": "AppExchange is a marketplace where app builders can find prebuilt resources to help with migration and adoption projects. AppExchange offers apps, components, solutions, and consulting services that can assist with moving from Classic to Lightning Experience. Import Wizard, Lightning Object Creator, and Flow Builder are not sources of prebuilt resources, but tools for data import, object creation, and automation respectively."
  },
  {
    "content": "The finance manager at Universal Containers wants to receive a new business notification email each time a new client is won. The sales manager wants to receive a task letting them know to onboard the new client unless it is a top-tier client.\nWhich automation tool should an app builder use to best address all these requests?",
    "options": ["A. Record-triggered flow", "B. Screen flow", "C. Apex", "D. Approval process"],
    "answer": "A",
    "title": "Question 54",
    "explanation": "Record-triggered flow is the automation tool that the app builder should use to best address all these requests of sending an email to the finance manager and creating a task for the sales manager when a new client is won. According to the Salesforce documentation, \"Record-triggered flows automate processes for you. They start when a record is created or updated, or when a platform event occurs.\" A record-triggered flow can perform actions such as sending an email alert or creating a record based on criteria or conditions. Screen flow, Apex, and Approval process are not automation tools that can handle all these requests."
  },
  {
    "content": "An App Builder at UVC would like to prevent users from creating new records on an Account related list by overriding standard buttons. Which two should the App Builder consider before overriding standard buttons?",
    "options": [
      "A. Standard buttons can be changed on lookup dialogs, list views, and search result layouts",
      "B. Standard buttons can be overridden with a Visualforce page",
      "C. Standard buttons that are not available for overrides can still be hidden on page layouts",
      "D. Standard buttons can be overridden, relocated on the detail page, and relabeled"
    ],
    "answer": "B,C",
    "title": "Question 55",
    "explanation": "The app builder should consider two things before overriding standard buttons:\n Standard buttons can be overridden with a Visualforce page. A Visualforce page is a web page that displays custom user interface elements using Visualforce markup and Apex code. A Visualforce page can be used to override a standard button and provide custom functionality or logic3.\n Standard buttons that are not available for overrides can still be hidden on page layouts. A page layout is a layout that determines how fields, related lists, and buttons are arranged on a record detail or edit page. A page layout can be used to hide a standard button that cannot be overridden by removing it from the layout4. Option A and D are not things that the app builder should consider before overriding standard buttons."
  },
  {
    "content": "Cloud Kicks (CK) switched to Lightning Experience and started using Chatter across its global workforce to support its fast-paced sales cycle. CK loves Chatter but struggle with gathering feedback from core team members, including understanding who is available to respond.\nWhich two ways could CK use Chatter to solve this problem?\nChoose 2 answers",
    "options": ["A. Streams", "B. Polls", "C. Out of Office", "D. Topics"],
    "answer": "B,C",
    "title": "Question 56",
    "explanation": "Polls and Out of Office are two ways that CK can use Chatter to gather feedback and understand availability. Polls allow users to create surveys and collect opinions from other users. Out of Office lets users set a status message and an end date to inform others when they are away or busy. Streams and Topics are not related to the problem."
  },
  {
    "content": "Cloud Kicks (CK) captures all shipping information in a custom object called Shipments__c. CK's app builder is tasked with creating an approval process to ensure department members can approve all overnight shipments.\nWhere should the app builder route the approval request?",
    "options": ["A. Hierarchy field", "B. Role", "C. Public group", "D. Queue"],
    "answer": "C",
    "title": "Question 57",
    "explanation": "Public group is the best option to route the approval request for overnight shipments. Public groups can include users, roles, or other groups. Queues are used to assign ownership of records to a group of users, not for approval processes. Hierarchy field and role are not flexible enough to include only the department members."
  },
  {
    "content": "The VP of Sales at Universal Containers has asked the app builder to let sales reps create opportunity records directly from the account, with a number of fields pre-populated.\nWhich feature should the app builder use to allow users to create the opportunity?",
    "options": ["A. A quick action", "B. A default action", "C. A custom button", "D. A custom link"],
    "answer": "A",
    "title": "Question 58",
    "explanation": "The feature that the app builder should use to allow users to create the opportunity is a quick action. A quick action is a type of custom button or link that can create or update records, log calls, send emails, or launch flows from a record page or a global menu. The app builder can create a quick action on the account object that creates an opportunity record with pre-populated fields. Option B is incorrect because a default action is not a valid term, but rather a standard action that appears on every record page by default, such as Edit or Delete. Option C is incorrect because a custom button is not suitable for this requirement, as custom buttons can only display a URL or execute JavaScript when clicked. Option D is incorrect because a custom link is not suitable for this requirement, as custom links can only display a URL or execute JavaScript when clicked."
  },
  {
    "content": "Duplicate management for Leads has been implemented at Universal Containers but it seems duplicate leads are still being created. The Org Wide Default (OWD) is set to \"Private\" for Leads.\nWhich two actions help prevent duplicate Leads from being created?\nChoose 2 answers",
    "options": [
      "A. Change the lead Hatching Rule to Block on create.",
      "B. Change OWD for Leads to Public Read.",
      "C. Change the Lead Duplicate Rule details to Bypass Sharing Rules.",
      "D. Change the Lead Assignment Rule to check for duplicates."
    ],
    "answer": "A,C",
    "title": "Question 59",
    "explanation": "A: Changing the Lead Matching Rule to 'Block on create' will directly prevent duplicates at the point of lead creation based on defined criteria.\n C: Changing the Lead Duplicate Rule to 'Bypass Sharing Rules' allows the system to compare leads across the entire organization regardless of the user's access level, which is crucial especially when OWD is set to 'Private'. Reference:\n Salesforce Help - Duplicate Management"
  },
  {
    "content": "DreamHouse Realty wants to make sure an Opportunity has a field Expected_Close_Date_c populated before it is allowed to enter the qualified stage.\nHow should an app builder solution this request?",
    "options": ["A. Record Type", "B. Validation Rule", "C. Activity History", "D. Page Layout"],
    "answer": "B",
    "title": "Question 60",
    "explanation": "A validation rule is a formula that evaluates the data in one or more fields and returns a value of \"True\" or \"False\". Validation rules verify that the data a user enters in a record meets the standards you specify before the user can save the record. In this case, a validation rule can be used to check if the Expected_Close_Date_c field is populated before the Opportunity stage is set to qualified"
  },
  {
    "content": "On the Account Lightning record page, users need to see ten fields and the ability to sort and wrap text on their Related Lists.\nWhat Related List type would the app builder select for the Related List Lightning component?",
    "options": ["A. Enhanced List", "B. Basic List", "C. ListVlew", "D. List Class"],
    "answer": "A",
    "title": "Question 61",
    "explanation": "The app builder should select Enhanced List for the Related List type for the Related List Lightning component. Enhanced List allows users to see ten fields and sort and wrap text on their Related Lists. Option B is incorrect because Basic List only allows users to see four fields and does not support sorting or wrapping text on their Related Lists. Option C is incorrect because ListView does not show Related Lists on record pages, but rather shows list views on object home pages or tabs. Option D is incorrect because List Class is not a valid Related List type."
  },
  {
    "content": "Cloud Kicks (CK) wants to begin socializing and collaborating within Salesforce around customer accounts to discuss various topics. CK would like all company employees to see these conversations.\nWhich two features of Chatter would meet CK's business needs?\nChoose 2 answers",
    "options": [
      "A. Set up new private Chatter groups.",
      "B. Set up new public Chatter groups.",
      "C. Use post action on the Account object.",
      "D. Use Chatter actions to create tasks to complete."
    ],
    "answer": "B,C",
    "title": "Question 62",
    "explanation": "The two features of Chatter that would meet CK's business needs are: Set up new public Chatter groups. A public Chatter group is a way to create a collaborative space for users to share information, files, polls, and ideas around a common topic or interest. A public Chatter group can be joined by any user in the organization and can be seen by anyone who has access to Chatter. By setting up new public Chatter groups, CK can enable users to socialize and collaborate around customer accounts and discuss various topics. Use post action on the Account object. A post action is a type of quick action that allows users to create a post on a record's feed or on their own feed. A post can include text, mentions, hashtags, topics, links, files, or images. By using post action on the Account object, CK can enable users to share updates, feedback, or questions about customer accounts and engage with other users who follow the accounts. Set up new private Chatter groups is not a valid feature, as it does not meet CK's business needs. A private Chatter group is a way to create a collaborative space for users to share information, files, polls, and ideas around a confidential or sensitive topic or interest. A private Chatter group can only be joined by invitation and can only be seen by the group members. By setting up new private Chatter groups, CK would limit the visibility and accessibility of the conversations around customer accounts. Use Chatter actions to create tasks to complete is not a valid feature, as it does not meet CK's business needs. A Chatter action is a type of quick action that allows users to create a task from a record's feed or from their own feed. A task can include subject, due date, priority, status, assigned to, etc. By using Chatter actions to create tasks to complete, CK would enable users to track and manage their work related to customer accounts, but not to socialize and collaborate with other users."
  },
  {
    "content": "Universal Containers wants users to have access to the pricing guidelines document when viewing a Contract related to an Account.\nWhat feature should an app builder use to create easy access to the document?",
    "options": [
      "A. Quick Action on the Contracts object",
      "B. Quick Action on the Account object",
      "C. A custom detail page link on the Account object",
      "D. A custom detail page link on the Contract object"
    ],
    "answer": "D",
    "title": "Question 63",
    "explanation": "The feature that the app builder should use to create easy access to the document is a custom detail page link on the Contract object. A custom detail page link is a type of custom button or link that can display a URL or execute JavaScript when clicked. The app builder can create a custom detail page link on the Contract object that displays the pricing guidelines document in a new window or tab. Option A is incorrect because a quick action on the Contracts object is not suitable for this requirement, as quick actions are used to create or update records, log calls, send emails, or launch flows. Option B is incorrect because a quick action on the Account object is not suitable for this requirement, as quick actions are not related to the Contract object. Option C is incorrect because a custom detail page link on the Account object is not suitable for this requirement, as custom detail page links are not related to the Contract object."
  },
  {
    "content": "Ursa Major Solar (UMS) is looking to hire some new employees. UMS wants to allow the same applicant to apply for multiple open positions using a single application.\nWhat should an app builder recommend to meet these requirements?",
    "options": [
      "A. Create a master-detail relationship on Open_Position__c to Application__c",
      "B. Create a master-detail relationship held on Applicant__c to Application__c",
      "C. Create a master-detailrelationship field on Application__c to Open.Position__c",
      "D. Create a master-detail relationship field on Applicant__c to Apphcabon_c"
    ],
    "answer": "D",
    "title": "Question 64",
    "explanation": "Create a master-detail relationship field on Applicant__c to Application__c is what the app builder should recommend to meet the requirements of allowing the same applicant to apply for multiple open positions using a single application. This will create a many-to-many relationship between Applicant__c and Open_Position__c using Application__c as a junction object. Create a master-detail relationship on Open_Position__c to Application__c, create a master-detail relationship field on Application__c to Open_Position__c, and create a lookup relationship field on Applicant__c to Application__c are not valid or correct ways to create a many-to-many relationship."
  },
  {
    "content": "Ursa Major Solar (UMS) uses a public sharing model for accounts. UMS would like to move to a more restrictive sharing model but wants the Sales team to continue to have access to all account records with the sales record type.\nWhich two actions should an app builder complete to implement this change?\nChoose 2 answers",
    "options": [
      "A. Update the Sales profile.",
      "B. Update the organization-wide defaults",
      "C. Create a criteria-based sharing rule.",
      "D. Create an owner-based sharing rule."
    ],
    "answer": "B,C",
    "title": "Question 65",
    "explanation": "Update the organization-wide defaults and create a criteria based sharing rule are two actions that an app builder should complete to implement the change of moving to a more restrictive sharing model while allowing the Sales team to access all account records with the sales record type. Updating the organization-wide defaults can set the baseline level of access for accounts, and creating a criteria based sharing rule can grant additional access based on record type. Updating the Sales profile and creating an owner-based sharing rule are not necessary or sufficient actions for this change."
  },
  {
    "content": "The CFO of Cloud Kicks needs to sign off on any major show retail deal that has a discount of more than 30% before the deal can be closed.\nWhat feature would be used to handle this requirement?",
    "options": ["A. Approval Process", "B. Workflow Rule", "C. Email Alert", "D. Field Update"],
    "answer": "A",
    "title": "Question 66",
    "explanation": ""
  },
  {
    "content": "Northern Trail Outfitters has two custom objects that are part of a master-detail relationship.\nWhat determines the ownership and sharing access of the detail record?",
    "options": [
      "A. The default owner is set in the parent object's settings.",
      "B. The Owner field on the Detail record.",
      "C. The Owner field on the Master record.",
      "D. The owner is set independently on the detail object's settings."
    ],
    "answer": "C",
    "title": "Question 67",
    "explanation": "The Owner field on the Master record determines the ownership and sharing access of the detail record in a master-detail relationship. According to the Salesforce documentation, \"The detail record inherits the sharing and security settings of its master record.\" The default owner is not set in the parent object's settings, the Owner field on the Detail record does not exist, and the owner is not set independently on the detail object's settings."
  },
  {
    "content": "Universal Containers manages leads in a Lead qualification queue where sales reps can accept ownership of the Lead. Campaign members are required to have a sales owner.\nWhat validation rule should an app builder configure?",
    "options": [
      "A. AND( ISBLANK(Lead.Owner.Id) )",
      "B. NOT(ISNEW() && ISBLANK(Lead.Owner:Queue.Id))",
      "C. AND(ISNEW(), ISBLANK(Lead.Owner:User.Id))",
      "D. NOT(ISBLANK(Lead.Owner:Queue.Id))"
    ],
    "answer": "C",
    "title": "Question 68",
    "explanation": "The validation rule should be AND(ISNEW(), ISBLANK(Lead.Owner:User.Id)). This rule will prevent saving a new lead record if the owner is not a user. This will ensure that campaign members have a sales owner. Option A is incorrect because it will prevent saving any lead record if the owner is blank, which is not the requirement. Option B is incorrect because it will prevent saving an existing lead record if the owner is a queue, which is not the requirement. Option D is incorrect because it will prevent saving any lead record if the owner is a queue, which is not the requirement."
  },
  {
    "content": "Containers have the Account object's Organization-Wide Default set to Private. The marketing team owns Accounts; however, they also need to be able to see the sales team's Accounts. Both the sales and marketing teams are in completely different branches of the rote hierarchy.\nWhat feature should be used to enable marketing to see sales-owned accounts.",
    "options": ["A. Public Group", "B. Flow", "C. Workflow", "D. Sharing Rules"],
    "answer": "D",
    "title": "Question 69",
    "explanation": "Sharing rules can be used to extend access to records owned by certain users or roles to other users or roles. In this case, a sharing rule can grant read-only or read/write access to sales-owned accounts to the marketing team"
  },
  {
    "content": "Northern Trail Outfitters wants to broadcast an email to 7,000 contacts Salesforce on a regular basis but realizes Salesforce is mass functionality has a limitation on the number erf emails that can be sent each day.\nWhat action should the app builder take?",
    "options": [
      "A. Request Salesforce increase the number of maximum daily emails.",
      "B. Develop Apex code and bghtnrrvg web component to send dairy emails",
      "C. Research and evaluate products available on AppExchange to send mass emails.",
      "D. Export Contacts to a CSV file and use an email client to send the emails."
    ],
    "answer": "C",
    "title": "Question 70",
    "explanation": "Research and evaluate products available on AppExchange to send mass emails is the action that the app builder should take to meet the requirement of broadcasting an email to 7,000 contacts in Salesforce on a regular basis. AppExchange is a marketplace where app builders can find products or solutions that can extend Salesforce functionality. There are many products on AppExchange that can send mass emails without hitting the Salesforce limit. Request Salesforce increase the number of maximum daily emails, develop Apex code and Lightning web component to send daily emails, and export Contacts to a CSV file and use an email client to send the emails are not valid or recommended actions."
  },
  {
    "content": "Universal Containers (UC) tracks Account locations in Zip Code, a custom text field with a validation rule to enforce proper formatting of the US ZIP+4 code for UC's orders.\nWhat formula should the app builder create on Order to display only the first five digits of Zip Code from the parent Account?",
    "options": [
      "A. BEGINS(Account.Zip_Code_r, 5)",
      "B. TEXT(Account.Zip_Code_c, 5)",
      "C. LEFT(Account.Zip_Code_c, 5)",
      "D. LPAD(Account.Zip_Code__r, 5)"
    ],
    "answer": "C",
    "title": "Question 71",
    "explanation": "LEFT(Account.Zip_Code_c, 5) is the correct formula to display only the first five digits of Zip Code from the parent Account. LEFT function returns the specified number of characters from the left side of a text string. Account.Zip_Code_c is the custom text field that stores the Zip Code on Account object. 5 is the number of characters to return from the left side of the Zip Code. The other options are not valid formulas or functions."
  },
  {
    "content": "An app builder needs to create new automation on an object.\nWhat best practice should the app builder follow when building out automation?",
    "options": [
      "A. One Workflow rule per object.",
      "B. One Flow per object.",
      "C. One invocable process per object.",
      "D. One record change process per object."
    ],
    "answer": "D",
    "title": "Question 72",
    "explanation": "The best practice that the app builder should follow when building out automation is one record change process per object. A record change process is a type of process in Process Builder that starts when a record is created or updated. Having one record change process per object can avoid conflicts or errors when multiple processes try to update the same record at the same time. Option A is incorrect because one workflow rule per object is not a best practice, as workflow rules are considered legacy tools and have limitations compared to Process Builder. Option B is incorrect because one flow per object is not a best practice, as flows are more complex and require more resources than processes. Option C is incorrect because one invocable process per object is not a best practice, as invocable processes are used to invoke other processes from within a process or a flow."
  },
  {
    "content": "The Director of customer service wants to receive a notification when a case stays in the '' new'' status for more than four business hours.\nWhich two automation processes should be used to accomplish this?\nChoose 2 answers",
    "options": ["A. Escalation rules", "B. Flow Builder", "C. Process Builder", "D. Scheduled Apex"],
    "answer": "A,C",
    "title": "Question 73",
    "explanation": "Escalation rules and Process Builder are two automation processes that can be used to send a notification when a case stays in the '' new'' status for more than four business hours. Escalation rules can define criteria and actions for escalating cases based on time or other factors. Process Builder can create a time-based action that triggers an email alert when the case status is '' new'' for more than four business hours. Flow Builder and Scheduled Apex are not necessary for this requirement."
  },
  {
    "content": "An app builder has downloaded a component from the AppExchange successfully; however, they are unable to add it to the Lightning home page.\nWhich two reasons can be preventing the app builder from being able to add the custom component?\nChoose 2 answers",
    "options": [
      "A. My Domain must be deployed to add custom components to the page with the App Builder.",
      "B. A custom tab must be created to add custom components to the page with the App Builder.",
      "C. The component requires a developer permission to add it to the page with the App Builder.",
      "D. The component is tagged for record pages instead of home pages and is not showing up in the App Builder."
    ],
    "answer": "A,D",
    "title": "Question 74",
    "explanation": "Two reasons that can prevent an app builder from adding a custom component to the Lightning home page are if My Domain is not deployed, or if the component is tagged for record pages instead of home pages. My Domain must be deployed to add custom components to the page with the App Builder, as it enables Lightning components and other features. The component must be tagged for home pages in its configuration file, otherwise it will not show up in the App Builder for home pages"
  },
  {
    "content": "Universal Containers wants to streamline its data capture process by linking fields together. They wish to do this so that the available value on dependents fields are driven by value selected on controlling fields. Which consideration supports the stated requirements? Choose 3 answers",
    "options": [
      "A. The import wizard only allows value to be imported into a dependent picklist if they match the appropriate controlling field",
      "B. Custom picklist field can be either controlling or dependent field",
      "C. Multi select picklist can be dependent picklist but not controlling fields",
      "D. Standard and custom picklist fields can be dependent fields.",
      "E. Checkbox fields can be controlling fields but not dependent fields"
    ],
    "answer": "A,B,E",
    "title": "Question 75",
    "explanation": "The import wizard only allows values to be imported into a dependent picklist if they match the appropriate controlling field. This ensures data integrity and prevents invalid values from being imported. Custom picklist fields can be either controlling or dependent fields. This allows the app builder to create custom dependencies between custom picklists. Checkbox fields can be controlling fields but not dependent fields. This allows the app builder to create dependencies based on checkbox values, such as true or false. Multi-select picklist fields can be dependent picklist fields but not controlling fields. This allows the app builder to create dependencies based on multiple values selected in a multi-select picklist field. Standard and custom picklist fields can be dependent fields, but not all standard picklist fields can be controlling fields. Some standard picklist fields, such as Lead Status or Opportunity Stage, cannot be controlling fields because they are used in other processes, such as lead conversion or sales path"
  },
  {
    "content": "Universal Containers created a 'New Task' custom action on the Opportunity object. The action was added to all page layouts in the Mobile & Lightning Actions section.\nWhich Lightning component should the app builder add to the layout to display the action?",
    "options": ["A. Related record", "B. Related lists", "C. Highlights panel", "D. Activities"],
    "answer": "C",
    "title": "Question 76",
    "explanation": "The best Lightning component to add to the layout to display the 'New Task' custom action is Highlights panel. This component shows key information and actions for a record, such as its name, owner, and custom actions. Related record, related lists, and activities are not Lightning components that display custom actions. See [this article] for more information on Highlights panel."
  },
  {
    "content": "An app builder wants to create a formula field on an Account to include data from related Contacts but is unable to find the relationship in the formula editor.\nWhat is a limitation of formulas that could be causing the issue?",
    "options": [
      "A. Unable to reference the child records.",
      "B. A master-detail relationship should be created.",
      "C. Formula field limit reached on the Account object.",
      "D. More than 5,000 characters in the formula."
    ],
    "answer": "C",
    "title": "Question 77",
    "explanation": "Formulas cannot reference child records, only parent records. This is a limitation of formulas that could be causing the issue. To include data from related child records, the app builder could use roll-up summary fields or Apex triggers instead"
  },
  {
    "content": "An app builder at DreamHouse Realty created a custom object which has fields containing data from two different objects via related lookups.\nWhat is needed to create \"with\" or \"without* reports on the new custom object?",
    "options": ["A. Row-Level Formula", "B. Report Bucket Field", "C. Report Filters", "D. Custom Report Type"],
    "answer": "D",
    "title": "Question 78",
    "explanation": "To create \"with\" or \"without\" reports on the new custom object, a custom report type is needed. A custom report type defines the relationship between one or more standard or custom objects for reporting purposes. It allows users to select which fields they want to display in their reports and filter by related objects."
  },
  {
    "content": "The Recruiting ream at AW Computing captures thejob acceptance and date of hire of a candidate on the Job Application custom object. Once the candidate accepts the recruiter s job offer, the date of hire should be entered and not be changed on subsequent cecord edit.\nWhich validation formula should the app builder use?",
    "options": [
      "A. NOT(ISCLANK(Job_Accepted_c)) && ISCHANGED(Hire_Date_c)",
      "B. (ISBLANK(Job_Accepted_c) II NOT(lSCMANGED(Mire_Daie_c))",
      "C. NOT{IS&lANK(Job_Accepted_c)) II ISCHANGED(Hire_Date_c)",
      "D. (lSBLANK(Job_Accepted_c) && NOT(lSCHANGED(Hire_Date_c))"
    ],
    "answer": "A",
    "title": "Question 79",
    "explanation": "NOT(ISBLANK(Job_Accepted__c)) && ISCHANGED(Hire_Date__c) is the validation formula that the app builder should use to meet the requirement of preventing changes to Hire Date after Job Accepted is entered. This formula will return TRUE if Job Accepted is not blank and Hire Date is changed, which will display an error message and prevent saving the record. The other formulas are not correct or valid."
  },
  {
    "content": "Universal Containers wants to improve the process to create Opportunity records related to an Account. Many fields can be populated based on the Account record. Some fields require input from the user.\nWhat should an app builder configure to meet the requirement?",
    "options": [
      "A. Process Builder triggered from Opportunity update",
      "B. Quick Action on the Account object",
      "C. Quick Action on the Opportunity object",
      "D. Process Builder triggered from Account update"
    ],
    "answer": "B",
    "title": "Question 80",
    "explanation": "A quick action on the Account object can be used to create Opportunity records related to an Account. The quick action can pre-populate some fields based on the Account record, and also allow the user to input some fields. This would improve the process of creating Opportunity records"
  },
  {
    "content": "Cloud Kicks (CK) tracks the support level of its customers on the account record page. CK wants to show a text notification on a case record page when the related account is a platinum-level customer.\nHow could an app builder meet this requirement?",
    "options": [
      "A. Add a rich text area to the Case Lighting page > Set the component visibility of the rich text area to show when the account support level is platinum.",
      "B. Create a text-only Visualforce page > Drag the Visualforce component into the Case page layout > Set its visibility to show when the account support level is platinum.",
      "C. Create a text-only Visualforce page > Clone the case page layout > Drag the Visualforce component into the page, and assign the layout to platinum cases.",
      "D. Clone the Case Lightning page > Add a rich text area to the new page, and assign this page to platinum accounts."
    ],
    "answer": "B",
    "title": "Question 81",
    "explanation": "A text-only Visualforce page can be used to show a text notification on a case record page based on a condition. The Visualforce component can be dragged into the Case Lightning page and its visibility can be set to show when the account support level is platinum. This is the simplest and most flexible way to meet the requirement"
  },
  {
    "content": "The CRM Manager at Universal Containers has requested that a custom text field be converted to a picklist in order to promote better data hygiene. What needs to be considered before changing the field type? Choose 2 answers",
    "options": [
      "A. Existing list views that reference the field may be deleted.",
      "B. Field references will be removed in Visualforce pages",
      "C. All data should be backed up before converting a text field.",
      "D. Changing a field type will remove existing field history."
    ],
    "answer": "C,D",
    "title": "Question 82",
    "explanation": "All data should be backed up before converting a text field to a picklist, as some data may be lost or truncated during the conversion. Changing a field type will remove existing field history, as the history tracking values are not converted"
  },
  {
    "content": "Manage at Universal Containers want a quick to create additional accounts to form a hierarchy from a parent account record. They want to auto-populate five fields based on the parent to make it easier for users to create the child accounts quickly.",
    "options": ["A. Custom Global Quick Action", "B. Custom Global Quick Account.", "C. Custom action on Account", "D. Custom link on Account"],
    "answer": "C",
    "title": "Question 83",
    "explanation": "A custom action on Account can be used to create additional accounts from a parent account record. A custom action can have predefined values for certain fields based on the parent record. A custom global action can be used to create records that do not have any relationship with other objects. A custom link on Account can be used to execute JavaScript or link to an external URL."
  },
  {
    "content": "Shipments at Cloud Kicks (CK) are created and updated by the warehouse staff in a shipping application. The Information needs to be pushed into Salesforce on a regular basis. CK's app builder creates a custom object called Delivery_c to track the information.\nHow can the app builder prevent creating duplicate delivery records and update the correct existing records when migrating data from the shipping application?",
    "options": [
      "A. Use the Import Wizard and match on the tracking number.",
      "B. Create a unique External ID field and use Dataloader.",
      "C. Use the Import Wizard and match on the Salesforce ID.",
      "D. Create a duplicate match rule and use Dataloader."
    ],
    "answer": "B",
    "title": "Question 84",
    "explanation": "Creating a unique External ID field on the custom object and using Data Loader to upsert records prevents duplicates and ensures correct record updates by matching the unique ID. Reference:\n Salesforce Help - External ID"
  },
  {
    "content": "Nickname__c is a custom text field on a contact record that is utilized to override the contact's name appearing on an email template. This field is not required and is not always filled in.\nWhich formula should an app builder use to select the contact's preferred name for email communications?",
    "options": [
      "A. IF(NOT(ISBLANK(Nickname__c)), Nickname_c,FirstName)",
      "B. IF(TEXT(Nfckname__c), Nickname_c,FirstName)",
      "C. IF (ISNUUL(Nteknarne _..c),Nicknamec,Firstftame)",
      "D. IF(NOT(BLANKVALUE(Nickname__c)), Nickname__c, FirstName)"
    ],
    "answer": "D",
    "title": "Question 85",
    "explanation": "The formula that should be used to select the contact's preferred name for email communications is IF(NOT(BLANKVALUE(Nickname__c)),Nickname__c, FirstName). This formula checks if the Nickname__c field is blank or null, and if not, it returns the value of the Nickname__c field. Otherwise, it returns the value of the FirstName field."
  },
  {
    "content": "Northern Trail Outfitters wants to initiate a daily backup of its Salesforce org.\nWhich tool should an app builder recommend for this task?",
    "options": ["A. Report export", "B. Refresh full copy sandbox", "C. AppExchange package", "D. Data Export Service"],
    "answer": "D",
    "title": "Question 86",
    "explanation": "Data Export Service is the appropriate tool for initiating scheduled or immediate backups of Salesforce data. Reference:\n Salesforce Help - Data Export Service"
  },
  {
    "content": "A new custom object is being created with a private sharing setting. The business wants to share individual records with specific people or group of people on a case-by-case basis. What options does the business user have to manually share individual records? Choose 3 answers",
    "options": ["A. Public Groups", "B. Permission Sets", "C. Roles", "D. Profiles", "E. Users"],
    "answer": "A,C,E",
    "title": "Question 87",
    "explanation": "To manually share individual records with specific people or group of people on a case by case basis, users can use public groups, roles, or users. Public groups are collections of users, roles, or other groups that can be used to share access to records. Roles define the level of access that users have to their organization's data based on their position in the hierarchy. Users are individual people who log in to Salesforce and have access to records based on their profile, role, and sharing settings."
  },
  {
    "content": "To increase adoption, Universal Containers is proposing changes to its Salesforce data model to allow easier visibility for sales reps into key metrics. The proposal has three custom objectsrelated to the Account object, one with a master-detail, and two that are not. Each of these objects has 15 fields they would like to summarize on the Account object.\nWhat are two considerations for this proposal?\nChoose 2 answers",
    "options": [
      "A. Roll-up summaries allow MAX, MIN, SUM, COUNT, and AVG.",
      "B. An object can have 20 object references.",
      "C. An object can have 25 roll-up summaries.",
      "D. Roll-up summaries are limited to master-detail relationships."
    ],
    "answer": "A,D",
    "title": "Question 88",
    "explanation": "Roll-up summaries allow MAX, MIN, SUM, COUNT, and AVG functions on numeric fields from child records related by a master-detail relationship. Roll-up summaries are limited to master-detail relationships and cannot be used with lookup relationships. An object can have up to 40 roll-up summary fields, not 25. An object can have up to 25 relationship fields (master-detail or lookup), not 20."
  },
  {
    "content": "The app builder at AW Computing has been asked to track the number of times a case has been reopened.\nWhich solution should the app builder utilize to help with this request?",
    "options": ["A. Scheduled Triggered flow", "B. Screw flow", "C. Process Builder", "D. Apex Trigger"],
    "answer": "A",
    "title": "Question 89",
    "explanation": "A Scheduled Triggered flow can be used to increment a custom field on the Case object each time the case is reopened, effectively tracking the number of reopenings. Reference:\n Salesforce Help - Scheduled Flows"
  },
  {
    "content": "Which three options art availably when activating a Lightning page from the Lightning App Builder?\nChoose 3 answers",
    "options": [
      "A. Assign the page to a combination of apps and profiles.",
      "B. Assign the page to a combination of apps and permission sets.",
      "C. Make the page the org default.",
      "D. Make the page the default homepage for specific roles.",
      "E. Make the page the default homepage for specific apps."
    ],
    "answer": "A,C,E",
    "title": "Question 90",
    "explanation": "When activating a Lightning page from the Lightning App Builder, three options are available:\n Assign the page to a combination of apps and profiles. This option allows users to specify which apps and profiles will see the custom Lightning page instead of the default page.\n Make the page the org default. This option makes the custom Lightning page the default for all users in the org regardless of their app or profile.\n Make the page the default homepage for specific apps. This option allows users to set different homepages for different apps in Lightning Experience. [Source]"
  },
  {
    "content": "Ursa Major Solar wants to provide sales console users with an Incredible experience, with the most-used components easily accessible at all times.\nWhat solution can enable reps to see and access these components from anywhere within the app without leaving the pages where the team is working?",
    "options": ["A. Favorites", "B. Home page", "C. Global actions", "D. Utility bar"],
    "answer": "D",
    "title": "Question 91",
    "explanation": "The best solution to enable reps to see and access the most-used components from anywhere within the app without leaving the page they are working on is Utility bar. This is a footer that can be added to any Lightning app and can contain tools such as history, notes, or softphone. Favorites, home page, and global actions are not solutions that provide access to components from anywhere within the app. See [this article] for more information on Utility bar."
  },
  {
    "content": "Universal Containers wants to track installation information once it container has been purchased on a custom object. Sales reps should have visibility of all the installation with their opportunities.\nvisibility of all the installations associated with their opportunities.\nWhat kind of relationship should this new object have to the Opportunity?",
    "options": ["A. Lookup", "B. Hierarchical", "C. Master-Detail", "D. Many to Many"],
    "answer": "A",
    "title": "Question 92",
    "explanation": "The new object should have a lookup relationship to the Opportunity object. A lookup relationship creates a link between two objects and allows related records to be viewed in a related list. This can be used to track installation information for each opportunity and give sales reps visibility of all the installations associated with their opportunities. Option B, C, and D are not appropriate for this requirement."
  },
  {
    "content": "A business user at Universal Containers wants to update an Account directly from an Opportunity record.\nWhat should the app builder create to allow the business user to make these edits?",
    "options": [
      "A. An update record action with a related record component.",
      "B. An update record action with a details component",
      "C. Formula fields displaying the Account fields.",
      "D. Opportunity fields updated by a process."
    ],
    "answer": "A",
    "title": "Question 93",
    "explanation": "An update record action with a related record component on the Opportunity layout allows users to edit related Account records directly. Reference:\n Salesforce Help - Creating Quick Actions"
  },
  {
    "content": "Universal Containers (UC) maintains information for over 2 million assets in an external system. UC needs to access these assets in real-time data in Salesforce and is nearing the data storage limits.\nWhat feature could an app builder recommend UC use?",
    "options": ["A. Data Loader", "B. Salesforce Connect", "C. Salesforce to Salesforce", "D. Data Export Wizard"],
    "answer": "B",
    "title": "Question 94",
    "explanation": "The app builder should recommend UC use Salesforce Connect to access the assets in real-time data in Salesforce. Salesforce Connect is a feature that allows users to view, search, and modify data that is stored outside Salesforce, such as in an external system. Salesforce Connect uses external objects and external data sources to integrate data from various sources without copying or synchronizing it2. This can help UC access their assets in real-time without consuming data storage limits in Salesforce. Option A, C, and D are not features that can meet this requirement."
  },
  {
    "content": "An app Builder creates an Account validation rule on the Industry field that will throw an error if the length of the field is longer than 6 characters. Another App Builder creates a workflow rule with a field update that sets the Industry field to Technology whenever the Billing City field is set to San Francisco. What will happen the next time a sales person saves an Account with a Billing City of San Francisco?",
    "options": [
      "A. The record will save and the Industry field will change to Technology",
      "B. The record will not save and the validation rule's error messagewill be displayed",
      "C. The record will not save and no error message will be displayed",
      "D. The record will save but the Industry field will not change to Technology"
    ],
    "answer": "B",
    "title": "Question 95",
    "explanation": "The record will not save and the validation rule's error message will be displayed because the field update will violate the validation rule. The validation rule will prevent the record from being saved if the Industry field is longer than 6 characters, and Technology is 10 characters long."
  },
  {
    "content": "Accounts at Universal Containers are currently readable by all users but editable only by their owners. Management wants to designate some Accounts as VIP Accounts. Only Account owners should have read access to these VIP accounts.\nWhich two actions should an app builder take to meet the requirements?\nChoose 2 answers",
    "options": [
      "A. Implement a sharing rule.",
      "B. Configure a permission set.",
      "C. Set up an Account Team.",
      "D. Change organization-wide defaults."
    ],
    "answer": "A,D",
    "title": "Question 96",
    "explanation": "The two actions that an app builder should take to meet the requirements are: Implement a sharing rule. A sharing rule is a way to grant additional access to records based on certain criteria, such as record owner, role, profile, or field value. The app builder can create a sharing rule that grants read access to all accounts with the VIP Account field value to all users. This way, all users can view these accounts, but only the owners can edit them. Change organization-wide defaults. Organization-wide defaults are the baseline level of access that users have to records they do not own. The app builder can change the organization-wide default for accounts from Public Read Only to Private. This way, only the owners can view and edit their own accounts, unless additional access is granted by other means, such as sharing rules. Configuring a permission set is not a valid action, as it does not affect record-level access. A permission set is a way to grant additional permissions and access settings to users on top of their profile settings, such as object permissions, field permissions, app permissions, etc. Setting up an Account Team is not a valid action, as it does not restrict record-level access. An Account Team is a way to share an account and its related records with a group of users who work together on the account, such as sales reps, managers, or support agents. An Account Team grants additional access to team members based on predefined roles and access levels."
  },
  {
    "content": "Universal Containers uses a custom object called Projects. When managers assign projects they set a custom field on the project called Estimated Hours. Once set, users should be able to decrease but not increase the value How can an app builder meet this requirement?",
    "options": [
      "A. Create a formula default value for the custom field.",
      "B. Create a formula held that uses the PREVGROUPVAL function",
      "C. Create a validation rule that uses the ISCHANGED function",
      "D. Create a validation rule that uses the PRIOR VALUE function."
    ],
    "answer": "D",
    "title": "Question 97",
    "explanation": "Create a validation rule that uses the PRIORVALUE function is how an app builder can meet the requirement of preventing users from increasing the value of Estimated Hours after it is set. According to the Salesforce documentation, \"PRIORVALUE returns the previous value of a field.\" The validation rule can compare the current value and the prior value of Estimated Hours and display an error message if the current value is greater than the prior value. Creating a formula default value for the custom field, creating a formula field that uses the PREVGROUPVAL function, and creating a validation rule that uses the ISCHANGED function are not valid or correct solutions for this requirement."
  },
  {
    "content": "An app builder is creating a Lightning record page and has added Mobile & Lightning Actions to the page layout.\nWhat two components could be included on the layout to display the actions?\nChoose 2 answers",
    "options": ["A. Highlights panel", "B. Chatter", "C. Activities", "D. Path"],
    "answer": "A,C",
    "title": "Question 98",
    "explanation": "To display the actions on the Lightning record page, two components could be included on the layout:\n Highlights panel: The highlights panel displays key information and actions for a record based on the compact layout. Users can see and perform actions such as edit, clone, delete, follow, etc. from the highlights panel. [Source] Activities: The activities component displays tasks and events related to a record. Users can also create new tasks and events, log calls, send emails, and view past activities from this component."
  },
  {
    "content": "Ursa Major Solar is ramping up the sales team to meet increased demand. As part of the short ramp up for these new reps, the manager wants to provide a help guide to enable reps to easily get help where needed during the different sales processes.\nWhich solution should an app builder recommend?",
    "options": ["A. Flow", "B. Journey Builder", "C. Chatter Publisher", "D. Path"],
    "answer": "D",
    "title": "Question 99",
    "explanation": "To provide a help guide to enable reps to easily get help where needed during the different sales processes, an app builder should recommend Path. Path is a component that displays the key fields and guidance for each stage of a sales process on an object's record page. Users can see where they are in the process, update the stage and fields, and access resources such as tips and links. [Source]"
  },
  {
    "content": "The CFO of Cloud Kicks needs to sign off on any major show retail deal that has a discount of more than 30% before the deal can be closed.\nWhat feature would be used to handle this requirement?",
    "options": ["A. Approval Process", "B. Email Alert", "C. Field Update", "D. Workflow Rule"],
    "answer": "A",
    "title": "Question 100",
    "explanation": "Approval Process is the feature that would be used to handle the requirement of signing off on major show retail deals with more than 30% discount. According to the Salesforce documentation, \"An approval process automates how Salesforce records are approved in your org.\" Email Alert, Field Update, and Workflow Rule are actions that can be triggered by an approval process, but they are not features for handling approvals."
  },
  {
    "content": "universal containers has several large customers that sell their products through dealers. Each customer and dealer have an individual rep who works directly with uc and each is billed separately. How can an app builder implement these requirements?",
    "options": [
      "A. Create a single account record, add each rep as a contact and create a custom dealer object",
      "B. Create both customer and dealer as accounts, add each rep as a contact on the corresponding account and create an account hierarchy.",
      "C. Create a single parent record, add each rep as a contact to the parent account and add each dealer as a child record",
      "D. Create both customer and dealer as accounts, create account teams on each account and associate the dealer records with the parent account."
    ],
    "answer": "D",
    "title": "Question 101",
    "explanation": "Creating both customer and dealer as accounts, creating account teams on each account and associating the dealer records with the parent account would allow UC to track each customer and dealer separately, as well as their relationships and reps. Account hierarchy is not suitable for this scenario, as it is used to show the relationships among parent and child accounts within a single company"
  },
  {
    "content": "Universal Containers would like to embed a chart of all related Opportunities, by stage, on the Account detail page. Which type of report should the App Builder create to add to the Account page layout?",
    "options": [
      "A. A summary report on the Opportunity object.",
      "B. A summary report on the Account object.",
      "C. A tabular report on the Account object.",
      "D. A tabular report on the Opportunity object."
    ],
    "answer": "A",
    "title": "Question 102",
    "explanation": "A summary report on the opportunity object should be created to add to the account page layout. A summary report groups rows of data by common values and allows users to create charts based on aggregate values. A summary report on the opportunity object can group opportunities by stage and display a chart of all related opportunities on the account detail page."
  },
  {
    "content": "Cloud Kicks recently implemented the application lifecycle management process to its release management strategy.\nWhich category handles bug fixes and simple changes?",
    "options": ["A. Patch", "B. Minor", "C. Major", "D. Rollback"],
    "answer": "B",
    "title": "Question 103",
    "explanation": "The category that handles bug fixes and simple changes is minor. A minor release is a type of release that introduces small enhancements or fixes to existing functionality, such as correcting spelling errors or improving performance. A minor release usually has a low impact on users and does not require extensive testing or training. A patch release is a type of release that addresses critical issues or defects that affect the functionality or security of an application, such as fixing broken links or resolving vulnerabilities. A patch release usually has a high impact on users and requires immediate deployment. A major release is a type of release that introduces new functionality or features to an application, such as adding new objects or components or changing business processes. A major release usually has a high impact on users and requires extensive testing and training. A rollback is not a type of release, but an action that reverses a release that has been deployed to an environment, such as undoing changes or restoring previous versions. A rollback may be necessary if a release causes errors or issues that affect the functionality or performance of an application."
  },
  {
    "content": "An app builder wants to update a field on the parent record when a child record connected via lookup is deleted.\nWhat automation should the app builder use?",
    "options": ["A. Screen flow", "B. Process Builder", "C. Apex code", "D. Workflow rule"],
    "answer": "C",
    "title": "Question 104",
    "explanation": "The app builder should use Apex code to update a field on the parent record when a child record connected via lookup is deleted. Apex code is a programming language that allows developers to execute complex logic on the Salesforce platform. Apex code can be triggered by certain events, such as insert, update, delete, or undelete of records. In this case, the app builder can write an Apex trigger that runs after a child record is deleted and updates a field on the parent record accordingly. Option A, B, and D are not automation tools that can perform this task."
  },
  {
    "content": "Cloud Kicks has five years of sales data and would like to track when customers made their first purchase. How should an app builder use a roll-up summary to meet the requirements?",
    "options": [
      "A. Create a new roll-up summary field called First Order Date, using Type MIN on the Opportunity Close Date with a filter where IsWon = TRUE.",
      "B. Create a new date field called First Order Date, create a new Workflow to set the date, and roll up the value with a filter where IsWon = TRUE.",
      "C. Create a new roll-up summary field called First Order Date, using Type SUM on Opportunity Close Date.",
      "D. Create a new date field called First Order Date, then create a roll-up summary to update the field using Type MIN."
    ],
    "answer": "A",
    "title": "Question 105",
    "explanation": "The app builder should create a new roll-up summary field called First Order Date, using Type MIN on the Opportunity Close Date with a filter where IsWon = TRUE. A roll-up summary field is a type of field that calculates values from related records and displays them on the parent record. In this case, the app builder can create a roll-up summary field on the Account object that calculates the minimum (earliest) value of the Opportunity Close Date field from the related opportunities where IsWon = TRUE. This will show when customers made their first purchase. Option B, C, and D are not correct ways to use a roll-up summary field to meet the requirement."
  },
  {
    "content": "Universal Containers has a customer base where many customers have the same or similar company names.\nWhich functionality should be configured to improve an end user`s search experience?\nChoose 2 answers",
    "options": [
      "A. Update the account search layout's view filter settings.",
      "B. Update the account search layouts search results columns displayed.",
      "C. Update the account search filter fields.",
      "D. Update the account search layouts accounts tab columns displayed."
    ],
    "answer": "B,C",
    "title": "Question 106",
    "explanation": "Updating the account search layouts search results columns displayed and updating the account search filter fields can improve an end user's search experience by showing more relevant information and allowing more refined filtering. The view filter settings and the accounts tab columns displayed are not related to the search functionality"
  },
  {
    "content": "DreamHouse Realty is rethinking its sandbox utilization strategy after acquiring Cloud Kicks. The Salesforce COE already utilizes a partial and a full sandbox, which it refreshes on their own regular schedules. Teams are expanding and have to begin each of their small projects in a sandbox before committing to the larger pool for collaborative testing while still keeping costs down.\nWhat type of sandbox should each team member use?",
    "options": ["A. Full sandbox", "B. Developer sandbox", "C. Developer pro sandbox", "D. Partial sandbox"],
    "answer": "B",
    "title": "Question 107",
    "explanation": "The best type of sandbox for each team member to use is a developer sandbox. A developer sandbox is a copy of production that includes only the metadata, such as objects, fields, layouts, etc. It does not include any data, such as records or attachments. A developer sandbox is ideal for small projects that do not require data testing, such as developing new features or customizations. A developer sandbox has a storage limit of 200 MB and can be refreshed once per day. A developer sandbox is also cheaper than other types of sandboxes. A full sandbox is a copy of production that includes all the metadata and data. It is ideal for large projects that require data testing, such as performance testing or integration testing. A full sandbox has the same storage limit as production and can be refreshed every 29 days. A full sandbox is also the most expensive type of sandbox. A developer pro sandbox is similar to a developer sandbox, but it has a larger storage limit of 1 GB and can be refreshed every 5 days. It is ideal for projects that require some data testing, such as data migration or quality assurance testing. A partial sandbox is similar to a full sandbox, but it has a smaller storage limit of 5 GB and can be refreshed every 5 days. It is ideal for projects that require selective data testing, such as user acceptance testing or staging testing"
  },
  {
    "content": "Cloud Kicks works on an annual subscription model. When a sale rep marks an opportunity as closed won, a new opportunity should automatically be created for the renewal. The contracts team works outside of salesforce but also needs to be notified about closed deals in order to initial the contract process with the customer.\nWhich automation solution would meet these requirements?",
    "options": ["A. Approval Process", "B. Outbound Message", "C. Validation Rule", "D. Record-triggered flow"],
    "answer": "D",
    "title": "Question 108",
    "explanation": "A record-triggered flow can be used to automate actions when a record is created or updated. In this case, a record-triggered flow can be configured to create a new opportunity and send an email to the contracts team when an opportunity is marked as closed won."
  },
  {
    "content": "Which two solutions prevent a formula field from being referenced by a Roll-Up Summary Field?",
    "options": [
      "A. A cross-object workflow updating a field referenced by the formula field",
      "B. A cross-object field reference in the formula field",
      "C. The CASE () function in the formula field",
      "D. The NOW () function in the formula field"
    ],
    "answer": "B,D",
    "title": "Question 109",
    "explanation": "A formula field cannot be referenced by a roll-up summary field if it contains a cross-object field reference or a time-based function. A cross-object field reference is a reference to a field from a different object, such as Account. Name on a Contact object. A time-based function is a function that returns the current date or time, such as NOW() or TODAY(). Option A and C do not prevent a formula field from being referenced by a roll-up summary field."
  },
  {
    "content": "An app builder wants to create a report to compare the number of support cases in each status (New, In-progress, or Closed) and by priority (Critical, High, Medium, or Low).\nWhat solution should be used for the report?",
    "options": ["A. Grouping", "B. Bucket Columns", "C. Custom Report Type", "D. Filters"],
    "answer": "A",
    "title": "Question 110",
    "explanation": "The best solution to create a report to compare the number of support cases in each status and by priority is to use grouping. Grouping allows the app builder to summarize data by one or more fields, such as status and priority, and display them in rows and columns. Grouping also enables the app builder to use different chart types, such as stacked bar charts or matrix charts, to visualize the data. Bucket columns are not a suitable solution, as they are used to categorize data into predefined groups, such as high, medium, or low. Custom report types are not a suitable solution, as they are used to define the objects and fields available for a report, not how to display them. Filters are not a suitable solution, as they are used to limit the data shown in a report based on certain criteria, not how to compare them"
  },
  {
    "content": "An app builder installed a custom Lightning component from AppExchange and has deployed My Domain.\nWhat should be done next in order to configure the component for use in a record page?",
    "options": [
      "A. Edit a record page using Lightning App Builder > Drag the component onto the page.",
      "B. Edit a record page using the Page Layout editor > Drag the component onto the page.",
      "C. Edit a record page using the Page Layout editor > Drag the Visualforce component onto the page.",
      "D. Edit a record page using App Manager > Drag the component onto the page."
    ],
    "answer": "A",
    "title": "Question 111",
    "explanation": "To configure a custom Lightning component for use in a record page, the app builder needs to edit a record page using the Lightning App Builder and drag the component onto the page. The Page Layout editor and the App Manager are not used for this purpose"
  },
  {
    "content": "DreamHouse Realty wants to track how many lifts are being installed into customer garages. The To Be Installed custom checkbox field on the custom Lift object should be checked and an external system should be notified via an outbound message the next day when a lift is sold.\nWhat automation tool should be used to complete this task?",
    "options": ["A. Approval process", "B. Workflow", "C. Flow", "D. Process Builder"],
    "answer": "D",
    "title": "Question 112",
    "explanation": "Process Builder is the best automation tool to complete this task. Process Builder can perform actions when a record is created or updated, and it can also schedule actions to execute at a later time. Process Builder can update a field, send an email, and call an outbound message as actions."
  },
  {
    "content": "DreamHouse Realty (DR) employees started using company-owned airplanes for work travel after Ursa Major Solar was acquired. DR executives want to automate the submission travel request forms to enforce the Internal policy.\nHow should an app builder automate travel requests based on these criteria?",
    "options": ["A. Process Builder", "B. Workflow rule", "C. Approval process", "D. Apex"],
    "answer": "C",
    "title": "Question 113",
    "explanation": "Approval process is the best way to automate travel requests based on internal policy. Approval process can define the steps, criteria, and actions for approving records. The app builder can create an approval process for travel requests that requires approval from managers or executives before they are submitted. Workflow rule, Process Builder, and Apex are not suitable for this requirement."
  }
]
